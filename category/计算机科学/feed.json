{
    "version": "https://jsonfeed.org/version/1",
    "title": "眨眼的小星玥 • All posts by \"计算机科学\" category",
    "description": "小星玥，要努力学习呀！",
    "home_page_url": "http://www.luckycyyyy.top",
    "items": [
        {
            "id": "http://www.luckycyyyy.top/2024/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",
            "url": "http://www.luckycyyyy.top/2024/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",
            "title": "汇编语言基础知识",
            "date_published": "2024-12-18T07:27:15.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"计算机系统概述\"><a class=\"markdownIt-Anchor\" href=\"#计算机系统概述\">#</a> 计算机系统概述</h1>\n<h2 id=\"硬件软件\"><a class=\"markdownIt-Anchor\" href=\"#硬件软件\">#</a> 硬件 &amp; 软件</h2>\n<p><strong>硬件</strong></p>\n<ul>\n<li>中央处理器 CPU\n<ul>\n<li>控制器、运算器、寄存器</li>\n</ul>\n</li>\n<li>存储器（呈现的是存储器地址)\n<ul>\n<li>主存储器：RAM 和 ROM</li>\n<li>辅助存储器：磁盘、光盘、U 盘</li>\n</ul>\n</li>\n<li>外部设备（呈现出端口，即 I/O 地址）\n<ul>\n<li>输入和输出设备</li>\n</ul>\n</li>\n</ul>\n<p><strong>软件</strong></p>\n<ul>\n<li>系统软件</li>\n<li>应用软件</li>\n</ul>\n<p><img data-src=\"//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkhtueoq2j30gr09it98.jpg\" alt=\"\"></p>\n<h2 id=\"进制转换\"><a class=\"markdownIt-Anchor\" href=\"#进制转换\">#</a> 进制转换</h2>\n<p><strong>十进制小数转换成二或十六进制</strong>：小数部分分别乘以各自的基数，记录整数部分，直到小数部分为 0 为止</p>\n<p><img data-src=\"//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhtzlmyhj30pm0rz3z5.jpg\" alt=\"\"></p>\n<p><strong>二或十六进制数转换成十进制数</strong></p>\n<p><img data-src=\"//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkhtrps6gj30lf0a7myg.jpg\" alt=\"\"></p>\n<h2 id=\"ascii码\"><a class=\"markdownIt-Anchor\" href=\"#ascii码\">#</a> ASCII 码</h2>\n<p><strong>回车</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mi>D</mi><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">0DH</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n<p><strong>换行</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mi>A</mi><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">0AH</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n<p><strong>响铃</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>07</mn><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">07H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">7</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n<p><strong>数码<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">0\\sim 9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span></span></span></span></strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>30</mn><mi>H</mi><mo>∼</mo><mn>39</mn><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">30H\\sim 39H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">9</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n<p><strong>大写字母<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∼</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">A\\sim Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span></strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>41</mn><mi>H</mi><mo>∼</mo><mn>5</mn><mi>A</mi><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">41H\\sim 5AH</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n<p><strong>小写字母<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>∼</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">a\\sim z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span></strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>61</mn><mi>H</mi><mo>∼</mo><mn>7</mn><mi>A</mi><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">61H\\sim7AH</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">7</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n<p><strong>空格</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>20</mn><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">20H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n<h2 id=\"补码\"><a class=\"markdownIt-Anchor\" href=\"#补码\">#</a> 补码</h2>\n<p>8 位二进制补码：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>128</mn><mo>∼</mo><mo>+</mo><mn>127</mn></mrow><annotation encoding=\"application/x-tex\">-128\\sim +127</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span></p>\n<p>16 位二进制补码：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>15</mn></msup><mo>∼</mo><mo>+</mo><msup><mn>2</mn><mn>15</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-2^{15}\\sim +2^{15}-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<p>32 位二进制补码：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup><mo>∼</mo><mo>+</mo><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-2^{31}\\sim +2^{31}-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<h2 id=\"微机的软件\"><a class=\"markdownIt-Anchor\" href=\"#微机的软件\">#</a> 微机的软件</h2>\n<p>应用软件：</p>\n<ul>\n<li>文本编辑器</li>\n<li>汇编程序</li>\n<li>链接程序</li>\n<li>调试程序</li>\n<li>集成化开发环境</li>\n</ul>\n<h1 id=\"微型计算机系统\"><a class=\"markdownIt-Anchor\" href=\"#微型计算机系统\">#</a> 微型计算机系统</h1>\n<p><img data-src=\"//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkhs7r1btj30cl0bmaal.jpg\" alt=\"\"></p>\n<p>主存空间分配：</p>\n<p>整个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi>M</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">1MB</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 主存空间从低位到高位地址可分为四个区域：</p>\n<ol>\n<li>基本 RAM 区（00000H-9FFFFH）：操作系统占掉一部分低地址，其他向用户程序开放</li>\n<li>保留 RAM 区（A0000H-BFFFFH）：为系统安排的 “显示缓存存储区”</li>\n<li>扩展 ROM 区（C0000H-DFFFFH）：用于为系统不直接提供支持的外设安排设备驱动程序</li>\n<li>系统 ROM 区（E0000H-FFFFFH）：由系统占用，主要提供 ROM-BIOS 程序</li>\n</ol>\n<h1 id=\"8086微处理器\"><a class=\"markdownIt-Anchor\" href=\"#8086微处理器\">#</a> 8086 微处理器</h1>\n<h2 id=\"结构\"><a class=\"markdownIt-Anchor\" href=\"#结构\">#</a> 结构</h2>\n<ul>\n<li>\n<p>总线接口单元 BIU：负责读取指令和操作数</p>\n</li>\n<li>\n<p>执行单元 EU：负责指令译码和执行</p>\n</li>\n</ul>\n<p><img data-src=\"//dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzkhtllt31j30ju0e9myy.jpg\" alt=\"\"></p>\n<ul>\n<li>地址总线是 20 位，8086 有 1 兆存储单元，1 兆是 20 位</li>\n<li>数据总线 16 位，8086 有 16 根数据线</li>\n</ul>\n<h2 id=\"寄存器\"><a class=\"markdownIt-Anchor\" href=\"#寄存器\">#</a> 寄存器</h2>\n<p><img data-src=\"//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhticjzfj30kf08yt9i.jpg\" alt=\"\"></p>\n<p><strong>数据寄存器</strong></p>\n<p><strong>AX</strong>：累加器，使用频度最高，用于算术、逻辑运算以及与外设传送信息等</p>\n<p><strong>BX</strong>：基址寄存器，常用做存放存储器地址</p>\n<p><strong>CX</strong>：计数器，作为循环和串操作等指令中的隐含计数器</p>\n<p><strong>DX</strong>：数据寄存器，常用来存放双字长数据的高 16 位，或存放外设端口地址。</p>\n<p><strong>变址寄存器</strong></p>\n<p><strong>SI</strong>：源变址寄存器</p>\n<p><strong>DI</strong>：目的变址寄存器</p>\n<p><strong>指针寄存器</strong></p>\n<p><strong>SP</strong> 为堆栈指针寄存器，指示栈顶的偏移地址，不能再用于其他目的，具有专用目的</p>\n<p><strong>BP</strong> 为基址指针寄存器，表示数据在堆栈段中的基地址</p>\n<p>SP 和 BP 寄存器与 SS 段寄存器联合使用确定堆栈段中的存储单元地址</p>\n<p><strong>标志寄存器</strong></p>\n<p><img data-src=\"//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkhtf1g7uj30jv02g0sy.jpg\" alt=\"\"></p>\n<p><strong>指针指令 IP</strong></p>\n<p>指令指针寄存器 IP，指示代码段中指令的偏移地址</p>\n<p>它与代码段寄存器 CS 联用，确定下一条指令的物理地址</p>\n<p>计算机通过 CS : IP 寄存器来控制指令序列的执行流程</p>\n<p><strong>段寄存器</strong></p>\n<p><strong>CS</strong>：指明代码段的起始地址</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>S</mi><mo>:</mo><mi>I</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">CS : IP</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 取得下一条要执行的指令</li>\n</ul>\n<p><strong>SS</strong>：指明堆栈段的起始地址</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>S</mi><mo>:</mo><mi>S</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">SS:SP</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 操作堆栈顶的数据</li>\n</ul>\n<p><strong>DS</strong>：指明数据段的起始地址</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>S</mi><mo>:</mo><mi>E</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">DS:EA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">A</span></span></span></span> 存取数据段中的数据</li>\n</ul>\n<p><strong>ES</strong>：指明附加段的起始地址</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mi>S</mi><mo>:</mo><mi>E</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">ES:EA</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">A</span></span></span></span> 存取附加段中的数据</li>\n<li>是串操作的目的区必须是附加段</li>\n</ul>\n<p><img data-src=\"//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkht7sualj30jo0ciabi.jpg\" alt=\"\"></p>\n<h2 id=\"数据地址对齐\"><a class=\"markdownIt-Anchor\" href=\"#数据地址对齐\">#</a> 数据地址对齐</h2>\n<p>字单元安排在偶地址（xxx0B）、双字单元安排在 模 4 地 址（xx00B)</p>\n<h2 id=\"存储器的分段管理\"><a class=\"markdownIt-Anchor\" href=\"#存储器的分段管理\">#</a> 存储器的分段管理</h2>\n<p>8086 CPU 有 20 条地址线但数据总线是 16 位</p>\n<ul>\n<li>\n<p>最大可寻址空间为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>20</mn></msup><mtext>＝</mtext><mn>1</mn><mi>M</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">2^{20}＝1MB</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">＝</span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span></p>\n</li>\n<li>\n<p>物理地址范围从<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>00000</mn><mi>H</mi><mtext>～</mtext><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">00000H～FFFFFH</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord cjk_fallback\">～</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n</li>\n</ul>\n<p>8086CPU 将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mi>M</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">1MB</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 空间分成许多逻辑段</p>\n<ul>\n<li>每个段最大限制为 64KB</li>\n<li>段地址的低 4 位为 0000B</li>\n</ul>\n<p>这样，一个存储单元除具有一个唯一的物理地址外，还具有多个逻辑地址</p>\n<p><strong>逻辑地址</strong>：段基地址：段内偏移地址</p>\n<ul>\n<li>段地址说明逻辑段在主存中的起始位置，8086 规定段地址必须是<strong>模 16 地址：xxxx0H</strong>，<strong>省略低 4 位 0000B</strong>，段地址就可以用 16 位数据表示，就能用 16 位段寄存器表达段地址</li>\n<li>偏移地址说明主存单元距离段起始位置的偏移量，每段不超过 64KB，偏移地址也可用 16 位数据表示</li>\n</ul>\n<p>将逻辑地址中的段地址左移 4 位，加上偏移地址就得到 20 位物理地址</p>\n<h2 id=\"1mb空间的分段\"><a class=\"markdownIt-Anchor\" href=\"#1mb空间的分段\">#</a> 1MB 空间的分段</h2>\n<p><img data-src=\"//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkht4l6brj30fx09ygmx.jpg\" alt=\"\"></p>\n<h1 id=\"指令的组成\"><a class=\"markdownIt-Anchor\" href=\"#指令的组成\">#</a> 指令的组成</h1>\n<p><img data-src=\"//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkht0pkc8j30hl02574j.jpg\" alt=\"\"></p>\n<p><strong>操作码</strong>：</p>\n<p><img data-src=\"//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkhsxgw6gj30j103o74l.jpg\" alt=\"\"></p>\n<p><img data-src=\"//dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzkhstzak5j30gr08hwfg.jpg\" alt=\"\"></p>\n<h1 id=\"8086的寻址方式\"><a class=\"markdownIt-Anchor\" href=\"#8086的寻址方式\">#</a> 8086 的寻址方式</h1>\n<h2 id=\"立即数寻址\"><a class=\"markdownIt-Anchor\" href=\"#立即数寻址\">#</a> 立即数寻址</h2>\n<p>指令中的操作数存放在机器代码中</p>\n<h2 id=\"寄存器寻址\"><a class=\"markdownIt-Anchor\" href=\"#寄存器寻址\">#</a> 寄存器寻址</h2>\n<p>操作数存放在 CPU 的内部寄存器 reg 中</p>\n<h2 id=\"存储器寻址\"><a class=\"markdownIt-Anchor\" href=\"#存储器寻址\">#</a> 存储器寻址</h2>\n<p>指令中给出操作数的主存地址信息（偏移地址，称之为有效地址 EA），而段地址在默认的或用段超越前缀指定的段寄存器中</p>\n<ol>\n<li>\n<p>直接寻址方式：指令中直接包含有效地址</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov ax, [2000H]</span><br><span class=\"line\">;AX &lt;- DS:[2000H]</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>寄存器间接寻址方式：有效地址存放在基址寄存器<strong> BX</strong> 或变址寄存器<strong> SI</strong>、<strong>DI</strong> 中</p>\n</li>\n<li>\n<p>寄存器相对寻址方式：有效地址是寄存器内容与有符号 8 位或 16 位位移量之和，寄存器可以是<strong> BX/BP</strong> 或<strong> SI/DI</strong></p>\n<ul>\n<li>BX/SI/DI 寄存器默认在<strong> DS</strong>，对应 BP 寄存器默认在<strong> SS</strong></li>\n</ul>\n</li>\n<li>\n<p>基址变址寻址方式：有效地址由基址寄存器（BX 或 BP）的内容加上变址寄存器（SI 或 DI）的内容构成：</p>\n<ul>\n<li><strong>有效地址＝BX/BP＋SI/DI</strong></li>\n<li>段地址对应 BX 基址寄存器默认是<strong> DS</strong>，对应 BP 基址寄存器默认是<strong> SS</strong>；可用段超越前缀</li>\n</ul>\n</li>\n<li>\n<p>相对基址变址寻址方式：有效地址是基址寄存器 (BX/BP)、变址寄存器 (SI/DI) 与一个 8 位或 16 位位移量之和：</p>\n<ul>\n<li><strong>有效地址＝BX/BP＋SI/DI＋8/16 位位移量</strong></li>\n<li>段地址对应 BX 基址寄存器默认是<strong> DS</strong>，对应 BP 基址寄存器默认是<strong> SS</strong>；可用段超越前缀</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"寻址的多种表示方式\"><a class=\"markdownIt-Anchor\" href=\"#寻址的多种表示方式\">#</a> 寻址的多种表示方式</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MOV AX,[BX][SI] </span><br><span class=\"line\">;MOV AX,[BX+SI]</span><br><span class=\"line\"></span><br><span class=\"line\">MOV AX,COUNT[SI] </span><br><span class=\"line\">;MOV AX,[SI+COUNT]</span><br><span class=\"line\"></span><br><span class=\"line\">MOV AX,WNUM[BX][SI]</span><br><span class=\"line\">;等同于 MOV AX,WNUM[BX+SI]</span><br><span class=\"line\">;等同于 MOV AX,[BX+SI+WNUM]</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据寻址的组合\"><a class=\"markdownIt-Anchor\" href=\"#数据寻址的组合\">#</a> 数据寻址的组合</h2>\n<p><img data-src=\"//dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzkhsnol5fj30j60c3aab.jpg\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reg, imm/reg/mem</span><br><span class=\"line\">mem, imm/reg</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "汇编"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/12/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--8086%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/",
            "url": "http://www.luckycyyyy.top/2024/12/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--8086%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/",
            "title": "8086指令系统",
            "date_published": "2024-12-11T06:15:49.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"数据传送指令\"><a class=\"markdownIt-Anchor\" href=\"#数据传送指令\">#</a> 数据传送指令</h1>\n<h2 id=\"mov\"><a class=\"markdownIt-Anchor\" href=\"#mov\">#</a> MOV</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov reg/mem, imm</span><br><span class=\"line\">mov reg/mem/seg, reg</span><br><span class=\"line\">mov reg/seg, mem</span><br><span class=\"line\">mov reg/mem, seg</span><br></pre></td></tr></table></figure>\n<p>注：</p>\n<ol>\n<li>当 src 是 imm，dest 是 mem 时，二者之一必须用 ptr 指定类型</li>\n<li>cs 不能做目的操作数，ip 既不能做源操作数也不能做目的操作数</li>\n<li>两个操作数必须类型一致</li>\n<li>立即数不能送<strong>直接寻址</strong>的内存单元</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;错误</span><br><span class=\"line\">mov word ptr[1000h],32A8h</span><br><span class=\"line\">;修改</span><br><span class=\"line\">mov ax, 21A8h</span><br><span class=\"line\">mov [1000h], ax</span><br></pre></td></tr></table></figure>\n<h2 id=\"xchg\"><a class=\"markdownIt-Anchor\" href=\"#xchg\">#</a> XCHG</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xchg reg, reg/mem</span><br><span class=\"line\">xchg reg/mem, reg</span><br></pre></td></tr></table></figure>\n<h1 id=\"堆栈操作指令\"><a class=\"markdownIt-Anchor\" href=\"#堆栈操作指令\">#</a> 堆栈操作指令</h1>\n<p><strong>栈顶</strong>是地址<strong>较小</strong>的一端</p>\n<p>修改 sp 值的操作：</p>\n<ul>\n<li>子程序调用 <code>CALL</code></li>\n<li>子程序返回 <code>RET</code></li>\n<li>中断调用 <code>INT</code></li>\n<li>中断返回 <code>IRET</code></li>\n</ul>\n<h2 id=\"push\"><a class=\"markdownIt-Anchor\" href=\"#push\">#</a> PUSH</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push r16/m16/seg\t;sp &lt;- sp - 2, ss:[sp] &lt;- r16/m16/seg</span><br></pre></td></tr></table></figure>\n<h2 id=\"pop\"><a class=\"markdownIt-Anchor\" href=\"#pop\">#</a> POP</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pop r16/m16/seg\t\t;r16/m16/seg &lt;- ss:[sp], sp &lt;- sp + 2, </span><br></pre></td></tr></table></figure>\n<h1 id=\"标志传送指令\"><a class=\"markdownIt-Anchor\" href=\"#标志传送指令\">#</a> 标志传送指令</h1>\n<h2 id=\"标志送ah指令lahf\"><a class=\"markdownIt-Anchor\" href=\"#标志送ah指令lahf\">#</a> 标志送 AH 指令 LAHF</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lahf\t;ah &lt;- flags的低字节</span><br></pre></td></tr></table></figure>\n<h2 id=\"ah送标志指令sahf\"><a class=\"markdownIt-Anchor\" href=\"#ah送标志指令sahf\">#</a> AH 送标志指令 SAHF</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sahf\t;flags的低字节 &lt;- ah</span><br></pre></td></tr></table></figure>\n<h2 id=\"标志进栈指令pushf\"><a class=\"markdownIt-Anchor\" href=\"#标志进栈指令pushf\">#</a> 标志进栈指令 PUSHF</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pushf\t;sp &lt;- sp - 2, ss:[sp] &lt;- flags</span><br></pre></td></tr></table></figure>\n<h2 id=\"标志出栈指令popf\"><a class=\"markdownIt-Anchor\" href=\"#标志出栈指令popf\">#</a> 标志出栈指令 POPF</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">popf\t;flags &lt;- ss:[sp], sp &lt;- sp + 2</span><br></pre></td></tr></table></figure>\n<h1 id=\"地址传送指令\"><a class=\"markdownIt-Anchor\" href=\"#地址传送指令\">#</a> 地址传送指令</h1>\n<h2 id=\"lea\"><a class=\"markdownIt-Anchor\" href=\"#lea\">#</a> LEA</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lea r16, mem\t;r16 &lt;- mem的有效地址</span><br></pre></td></tr></table></figure>\n<h2 id=\"ldsles\"><a class=\"markdownIt-Anchor\" href=\"#ldsles\">#</a> LDS&amp;LES</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lds r16, mem\t;r16 &lt;- mem的有效地址， ds &lt;- mem + 2</span><br><span class=\"line\">les r16, mem\t;r16 &lt;- mem的有效地址， es &lt;- mem + 2</span><br></pre></td></tr></table></figure>\n<h1 id=\"状态标志\"><a class=\"markdownIt-Anchor\" href=\"#状态标志\">#</a> 状态标志</h1>\n<p>进位标志 <code>CF</code>  是针对无符号整数运算设计的，反应无符号数据加减运算是否超出范围，是否需要利用进（借）位反映正确结果。</p>\n<ul>\n<li>N 位无符号数据加减运算结果范围是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><msup><mn>2</mn><mi>N</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0\\sim 2^N - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.924661em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n</ul>\n<p>溢出标志 <code>OF</code>  用于表示有符号整数进行加减运算的结果是否超出范围</p>\n<ul>\n<li>处理器默认采用补码的形式表示有符号整数，N 位补码表达的范围是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∼</mo><mo>+</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-2^{N-1}\\sim+2^{N-1}-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.924661em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.924661em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">标志</th>\n<th style=\"text-align:center\">0</th>\n<th style=\"text-align:center\">1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CF</td>\n<td style=\"text-align:center\">（加减）没有进位或借位</td>\n<td style=\"text-align:center\">（加减）有进位或借位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OF</td>\n<td style=\"text-align:center\">未超出范围</td>\n<td style=\"text-align:center\">超出范围</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ZF</td>\n<td style=\"text-align:center\">运算结果不是 0</td>\n<td style=\"text-align:center\">运算结果是 0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SF</td>\n<td style=\"text-align:center\">最高位为 0</td>\n<td style=\"text-align:center\">最高位为 1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PF</td>\n<td style=\"text-align:center\">最低字节中 &quot;1&quot; 的个数是奇数</td>\n<td style=\"text-align:center\">最低字节中 &quot;1&quot; 的个数是偶数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AF</td>\n<td style=\"text-align:center\">最低半字节无进位</td>\n<td style=\"text-align:center\">最低半字节有进位</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>只有当两个相同符号数相加（含两个不同符号数相减）而运算结果的符号与原数据符号相反时产生溢出</li>\n</ul>\n<p>符号值对应表：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">标志</th>\n<th style=\"text-align:center\">1</th>\n<th style=\"text-align:center\">0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CF</td>\n<td style=\"text-align:center\">CY</td>\n<td style=\"text-align:center\">NC</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OF</td>\n<td style=\"text-align:center\">OV</td>\n<td style=\"text-align:center\">NV</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ZF</td>\n<td style=\"text-align:center\">ZR</td>\n<td style=\"text-align:center\">NZ</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SF</td>\n<td style=\"text-align:center\">NG</td>\n<td style=\"text-align:center\">PL</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PF</td>\n<td style=\"text-align:center\">PE</td>\n<td style=\"text-align:center\">PO</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AF</td>\n<td style=\"text-align:center\">AC</td>\n<td style=\"text-align:center\">NA</td>\n</tr>\n</tbody>\n</table>\n<p>运算指令对标志位的影响：</p>\n<p>说明：0: 清零  ✓: 有影响  X: 无影响  -: 不确定 (未定义)</p>\n<p><img data-src=\"//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhqs7f6kj30zn0hzad6.jpg\" alt=\"\"></p>\n<h1 id=\"加法指令\"><a class=\"markdownIt-Anchor\" href=\"#加法指令\">#</a> 加法指令</h1>\n<h2 id=\"add\"><a class=\"markdownIt-Anchor\" href=\"#add\">#</a> ADD</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add reg, imm/reg/mem\t;reg &lt;- reg + imm/reg/mem</span><br><span class=\"line\">add mem, imm/reg\t\t;mem &lt;- mem + imm/reg</span><br></pre></td></tr></table></figure>\n<h2 id=\"adc\"><a class=\"markdownIt-Anchor\" href=\"#adc\">#</a> ADC</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adc reg, imm/reg/mem\t;reg &lt;- reg + imm/reg/mem + CF</span><br><span class=\"line\">adc mem, imm/reg\t\t;mem &lt;- mem + imm/reg + CF</span><br></pre></td></tr></table></figure>\n<h2 id=\"inc\"><a class=\"markdownIt-Anchor\" href=\"#inc\">#</a> INC</h2>\n<p><strong>不影响 CF</strong>，其他影响与 ADD 一致</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inc reg/mem\t\t;reg/mem &lt;- reg/mem + 1</span><br></pre></td></tr></table></figure>\n<h1 id=\"减法指令\"><a class=\"markdownIt-Anchor\" href=\"#减法指令\">#</a> 减法指令</h1>\n<h2 id=\"sub\"><a class=\"markdownIt-Anchor\" href=\"#sub\">#</a> SUB</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sub reg, imm/reg/mem\t;reg &lt;- reg - imm/reg/mem</span><br><span class=\"line\">sub mem, imm/reg\t\t;mem &lt;- mem - imm/reg</span><br></pre></td></tr></table></figure>\n<h2 id=\"sbb\"><a class=\"markdownIt-Anchor\" href=\"#sbb\">#</a> SBB</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sbb reg, imm/reg/mem\t;reg &lt;- reg - imm/reg/mem - CF</span><br><span class=\"line\">sbb mem, imm/reg\t\t;mem &lt;- mem - imm/reg - CF</span><br></pre></td></tr></table></figure>\n<h2 id=\"dec\"><a class=\"markdownIt-Anchor\" href=\"#dec\">#</a> DEC</h2>\n<p><strong>不影响 CF</strong>，其他影响与 SUB 一致</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dec reg/mem\t\t;reg/mem &lt;- reg/mem - 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"neg\"><a class=\"markdownIt-Anchor\" href=\"#neg\">#</a> NEG</h2>\n<p>对标志位的影响和<strong>用零做减法</strong>的 SUB 指令一样</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">neg reg/mem\t\t;reg/mem &lt;- 0 - reg/mem</span><br><span class=\"line\">\t\t\t\t;对操作数 取反+1</span><br></pre></td></tr></table></figure>\n<h2 id=\"cmp\"><a class=\"markdownIt-Anchor\" href=\"#cmp\">#</a> CMP</h2>\n<p>对标志位的影响<strong>和 sub 指令一样</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmp reg, imm/reg/mem\t;reg - imm/reg/mem</span><br><span class=\"line\">cmp mem, imm/reg\t\t;mem - imm/reg</span><br></pre></td></tr></table></figure>\n<h1 id=\"乘法指令\"><a class=\"markdownIt-Anchor\" href=\"#乘法指令\">#</a> 乘法指令</h1>\n<p>如果乘积的高一半（AH/DX）没有有效数值， <code>OF=CF=0</code> ，否则 <code>OF=CF=1</code></p>\n<h2 id=\"mul\"><a class=\"markdownIt-Anchor\" href=\"#mul\">#</a> MUL</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;无符号</span><br><span class=\"line\">mul r8/m8\t;ax &lt;- al × r8/m8</span><br><span class=\"line\">mul r16/m16\t;dx.ax &lt;- ax × r16/m16</span><br></pre></td></tr></table></figure>\n<h2 id=\"imul\"><a class=\"markdownIt-Anchor\" href=\"#imul\">#</a> iMUL</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;有符号</span><br><span class=\"line\">imul r8/m8\t;ax &lt;- al × r8/m8</span><br><span class=\"line\">imul r16/m16;dx.ax &lt;- ax × r16/m16</span><br></pre></td></tr></table></figure>\n<h1 id=\"除法指令\"><a class=\"markdownIt-Anchor\" href=\"#除法指令\">#</a> 除法指令</h1>\n<h2 id=\"div\"><a class=\"markdownIt-Anchor\" href=\"#div\">#</a> DIV</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;无符号</span><br><span class=\"line\">div r8/m8\t;al &lt;- ax ÷ r8/m8的商</span><br><span class=\"line\">\t\t\t;ah &lt;- ax ÷ r8/m8的余数</span><br><span class=\"line\">div r16/m16\t;ax &lt;- dx.ax ÷ r16/m16的商</span><br><span class=\"line\">\t\t\t;dx &lt;- dx.ax ÷ r16/m16的余数\t\t\t</span><br></pre></td></tr></table></figure>\n<h2 id=\"idiv\"><a class=\"markdownIt-Anchor\" href=\"#idiv\">#</a> iDIV</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;有符号\t余数和被除数符号相同</span><br><span class=\"line\">idiv r8/m8\t;al &lt;- ax ÷ r8/m8的商</span><br><span class=\"line\">\t\t\t;ah &lt;- ax ÷ r8/m8的余数</span><br><span class=\"line\">idiv r8/m8\t;ax &lt;- dx.ax ÷ r16/m16的商</span><br><span class=\"line\">\t\t\t;dx &lt;- dx.ax ÷ r16/m16的余数</span><br></pre></td></tr></table></figure>\n<h1 id=\"符号扩展指令\"><a class=\"markdownIt-Anchor\" href=\"#符号扩展指令\">#</a> 符号扩展指令</h1>\n<p><code>CBW</code>  将 <code>AL</code>  的最高有效位扩展到 <code>AH</code></p>\n<p><code>CWD</code>  将 <code>AX</code>  的内容符号扩展形成 <code>DX</code></p>\n<h1 id=\"逻辑运算指令\"><a class=\"markdownIt-Anchor\" href=\"#逻辑运算指令\">#</a> 逻辑运算指令</h1>\n<h2 id=\"andorxortest\"><a class=\"markdownIt-Anchor\" href=\"#andorxortest\">#</a> AND/OR/XOR/TEST</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">逻辑运算助记符 reg, imm/reg/mem\t;reg &lt;- reg 逻辑运算助记符 imm/reg/mem</span><br><span class=\"line\">逻辑运算助记符 mem, imm/reg\t\t;mem &lt;- mem 逻辑运算助记符 imm/reg</span><br></pre></td></tr></table></figure>\n<p>所有双操作数的逻辑指令均设置 <code>CF=OF=0</code></p>\n<h2 id=\"not\"><a class=\"markdownIt-Anchor\" href=\"#not\">#</a> NOT</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">not reg/mem\t\t;reg/mem &lt;- ~reg/mem</span><br></pre></td></tr></table></figure>\n<h1 id=\"移位指令\"><a class=\"markdownIt-Anchor\" href=\"#移位指令\">#</a> 移位指令</h1>\n<p>根据移入的位设置进位标志 <code>CF</code> ，根据移位后的结果影响 <code>SF ZF PF</code> ；当进行 1 位移动，根据最高符号位有变化设置 <code>OF = 1</code> ，移位超过 1 位， <code>OF</code>  不确定</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shl reg/mem, 1/cl\t;最低位补0， 最高位进入cf</span><br><span class=\"line\">shr reg/mem, 1/cl\t;最高位补0， 最低位进入cf</span><br><span class=\"line\">sal reg/mem, 1/cl\t;与shl相同</span><br><span class=\"line\">sar reg/mem, 1/cl\t;最高位不变， 最低位进入cf</span><br></pre></td></tr></table></figure>\n<h1 id=\"循环移位指令\"><a class=\"markdownIt-Anchor\" href=\"#循环移位指令\">#</a> 循环移位指令</h1>\n<p>根据移入的位设置进位标志 <code>CF</code> ，不影响 <code>SF ZF PF AF</code> ，对 <code>OF</code>  与移位指令影响一致</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rol reg/mem, 1/cl\t;不带进位循环左移</span><br><span class=\"line\">ror reg/mem, 1/cl\t;不带进位循环右移</span><br><span class=\"line\">rcl reg/mem, 1/cl\t;带进位循环左移</span><br><span class=\"line\">rcr reg/mem, 1/cl\t;带进位循环右移</span><br></pre></td></tr></table></figure>\n<h1 id=\"控制转移指令\"><a class=\"markdownIt-Anchor\" href=\"#控制转移指令\">#</a> 控制转移指令</h1>\n<p>三种寻址方式：</p>\n<p><img data-src=\"//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhqtjverj30zk09rt9f.jpg\" alt=\"\"></p>\n<p>比较无符号数的高低：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">助记符</th>\n<th style=\"text-align:center\">标志位</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">JB/JNAE</td>\n<td style=\"text-align:center\">CF = 1</td>\n<td style=\"text-align:center\">低于 / 不高于等于转移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JNB/JAE</td>\n<td style=\"text-align:center\">CF = 0</td>\n<td style=\"text-align:center\">不低于 / 高于等于转移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JBE/JNA</td>\n<td style=\"text-align:center\">CF = 1 或 ZF = 1</td>\n<td style=\"text-align:center\">低于等于 / 不高于转移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JNBE/JA</td>\n<td style=\"text-align:center\">CF = 0 且 ZF = 0</td>\n<td style=\"text-align:center\">不低于等于 / 高于</td>\n</tr>\n</tbody>\n</table>\n<p>比较有符号数的大小：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">助记符</th>\n<th style=\"text-align:center\">标志位</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">JL/JNGE</td>\n<td style=\"text-align:center\">SF<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo mathvariant=\"normal\">≠</mo></mrow><annotation encoding=\"application/x-tex\">\\neq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span></span></span></span>OF</td>\n<td style=\"text-align:center\">小于 / 不大于等于转移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JNL/JGE</td>\n<td style=\"text-align:center\">SF = OF</td>\n<td style=\"text-align:center\">不小于 / 大于等于转移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JLE/JNG</td>\n<td style=\"text-align:center\">SF<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo mathvariant=\"normal\">≠</mo></mrow><annotation encoding=\"application/x-tex\">\\neq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span></span></span></span>OF 或 ZF = 1</td>\n<td style=\"text-align:center\">小于等于 / 不大于转移</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JNLE/JG</td>\n<td style=\"text-align:center\">SF = OF 且 ZF = 0</td>\n<td style=\"text-align:center\">不小于等于 / 大于转移</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"子程序指令\"><a class=\"markdownIt-Anchor\" href=\"#子程序指令\">#</a> 子程序指令</h1>\n<h2 id=\"call\"><a class=\"markdownIt-Anchor\" href=\"#call\">#</a> CALL</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;段内调用</span><br><span class=\"line\">call label\t\t;sp &lt;- sp - 2, ss:[sp] &lt;- ip, ip &lt;- ip + 16</span><br><span class=\"line\">call r16/m16\t;sp &lt;- sp - 2, ss:[sp] &lt;- ip, ip &lt;- r16/m16</span><br><span class=\"line\">;段间调用</span><br><span class=\"line\">call far ptr label\t;sp &lt;- sp - 2, ss:[sp] &lt;- cs, sp &lt;- sp - 2, ss:[sp] &lt;- ip</span><br><span class=\"line\">\t\t\t\t\t;ip &lt;- label的偏移地址, cs &lt;- label的段地址</span><br><span class=\"line\">call far ptr mem\t;sp &lt;- sp - 2, ss:[sp] &lt;- cs, sp &lt;- sp - 2, ss[sp] &lt;- ip</span><br><span class=\"line\">\t\t\t\t\t;ip &lt;- [mem], cs &lt;- [mem + 2]</span><br></pre></td></tr></table></figure>\n<h2 id=\"ret\"><a class=\"markdownIt-Anchor\" href=\"#ret\">#</a> RET</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;段内返回</span><br><span class=\"line\">ret\t\t;ip &lt;- ss:[sp], sp &lt;- sp + 2</span><br><span class=\"line\">ret i16\t;ip &lt;- ss:[sp], sp &lt;- sp + 2, sp &lt;- sp + i16</span><br><span class=\"line\">;段间返回</span><br><span class=\"line\">ret\t\t;ip &lt;- ss:[sp], sp &lt;- sp + 2, cs &lt;- ss:[sp], sp &lt;- sp + 2</span><br><span class=\"line\">ret i16\t;ip &lt;- ss:[sp], sp &lt;- sp + 2, cs &lt;- ss:[sp], sp &lt;- sp + i16</span><br></pre></td></tr></table></figure>\n<h1 id=\"中断指令\"><a class=\"markdownIt-Anchor\" href=\"#中断指令\">#</a> 中断指令</h1>\n<h2 id=\"外部中断\"><a class=\"markdownIt-Anchor\" href=\"#外部中断\">#</a> 外部中断</h2>\n<p>外部中断 —— 来自 CPU 之外的原因引起的中断，又可以分成</p>\n<ul>\n<li>可屏蔽中断：可由 CPU 的中断允许标志 IF 控制</li>\n<li>非屏蔽中断：不受 CPU 的中断允许标志 IF 控制</li>\n</ul>\n<h2 id=\"内部中断\"><a class=\"markdownIt-Anchor\" href=\"#内部中断\">#</a> 内部中断</h2>\n<p>内部中断 ——CPU 内部<strong>执行程序</strong>引起的中断，又可以分成：</p>\n<ul>\n<li>除法错中断：执行除法指令，结果<strong>溢出</strong>产生的 0 号中断</li>\n<li>指令中断：执行中断调用指令 <code>INT i8</code>  产生的 i8 号中断</li>\n<li>断点中断：用于断点调试（ <code>INT 3</code> ）的 3 号中断</li>\n<li>溢出中断：执行溢出中断指令 <code>into</code> ，OF＝1 产生的 4 号中断</li>\n<li>单步中断：TF＝1 在每条指令执行后产生的 1 号中断</li>\n</ul>\n",
            "tags": [
                "汇编"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/12/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E6%A0%BC%E5%BC%8F/",
            "url": "http://www.luckycyyyy.top/2024/12/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E6%A0%BC%E5%BC%8F/",
            "title": "汇编语言程序格式",
            "date_published": "2024-12-03T05:54:35.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"汇编语言程序开发\"><a class=\"markdownIt-Anchor\" href=\"#汇编语言程序开发\">#</a> 汇编语言程序开发</h1>\n<h2 id=\"汇编语言程序的语句格式\"><a class=\"markdownIt-Anchor\" href=\"#汇编语言程序的语句格式\">#</a> 汇编语言程序的语句格式</h2>\n<h3 id=\"硬指令执行性语句\"><a class=\"markdownIt-Anchor\" href=\"#硬指令执行性语句\">#</a> 硬指令 &amp; 执行性语句</h3>\n<p><strong>硬指令</strong>：使 CPU 产生动作、并在程序执行时才处理的语句</p>\n<p><strong>执行性语句</strong> —— 表达处理器指令，由<strong>硬指令</strong>构成的语句，它通常对应一条机器指令，出现在程序的代码段中，格式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">标号: 硬指令助记符 操作数,操作数,... ;注释</span><br><span class=\"line\">again: mov dx, offset string\t;获得string的偏移地址并保存到dx中</span><br></pre></td></tr></table></figure>\n<p><strong>标号</strong>：反映硬指令位置（逻辑地址）的标识符，后跟一个冒号分隔</p>\n<p><strong>硬指令助记符</strong>：可以是任何一条处理器指令</p>\n<p>处理器指令的操作数可以是<strong>立即数、寄存器和存储单元</strong></p>\n<h3 id=\"伪指令说明性语句\"><a class=\"markdownIt-Anchor\" href=\"#伪指令说明性语句\">#</a> 伪指令 &amp; 说明性语句</h3>\n<p><strong>伪指令</strong> —— 不产生 CPU 动作、在程序执行前由汇编程序处理的说明性语句。伪指令与具体的处理器类型无关，但与汇编程序的版本有关</p>\n<p><strong>说明性语句</strong> —— 由<strong>伪指令</strong>构成的语句，它通常指示汇编程序如何汇编源程序：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">名字  伪指令助记符  参数,参数,...\t;注释</span><br><span class=\"line\">string db ‘Hello,world’\t\t\t;使用db伪指令定义一个字符串，使用变量名string表达其在主存中的逻辑地址(包含段基地址和逻辑地址)、</span><br></pre></td></tr></table></figure>\n<p><strong>名字</strong>：反映伪指令位置（逻辑地址）和属性的标识符，后跟空格或制表符分隔，没有冒号</p>\n<p><strong>伪指令助记符</strong>：定义字节数据和字符串的 DB 就是伪指令</p>\n<p>伪指令的参数可以是<strong>常数、变量名、表达式</strong>等，可以有多个，参数之间用<strong>逗号分隔</strong></p>\n<h3 id=\"标识符\"><a class=\"markdownIt-Anchor\" href=\"#标识符\">#</a> 标识符</h3>\n<blockquote>\n<p>标号和名字是符合汇编程序语法的用户自定义的标识符</p>\n</blockquote>\n<p>标识符一般最多由 31 个字母、数字及规定的特殊符号（如 _、$、?、@）组成，<strong>不能以数字开头</strong>。默认情况下，汇编程序不区别标识符中的字母大小写。一个程序中，每个标识符的定义是唯一的，还不能是汇编语言采用的保留字。</p>\n<p><strong>保留字</strong>是汇编程序已经利用的标识符，主要有：</p>\n<ul>\n<li>硬指令助记符 —— 例如： <code>MOV、ADD</code></li>\n<li>伪指令助记符 —— 例如： <code>DB、EQU</code></li>\n<li>操作符 —— 例如： <code>OFFSET、PTR</code></li>\n<li>寄存器名 —— 例如： <code>AX、CS</code></li>\n</ul>\n<h2 id=\"汇编语言源程序框架\"><a class=\"markdownIt-Anchor\" href=\"#汇编语言源程序框架\">#</a> 汇编语言源程序框架</h2>\n<h3 id=\"简化段定义的源程序框架\"><a class=\"markdownIt-Anchor\" href=\"#简化段定义的源程序框架\">#</a> 简化段定义的源程序框架</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.model small\t;存储模型伪指令.model，small表示小型模式</span><br><span class=\"line\">.stack\t\t\t;堆栈段</span><br><span class=\"line\">.data\t\t\t;数据段</span><br><span class=\"line\">...\t\t\t\t;数据定义</span><br><span class=\"line\">.code\t\t\t;代码段</span><br><span class=\"line\">.startup\t\t;指明程序的起始执行点，同时为程序的数据段、代码段、堆栈段设置相应的段寄存器值</span><br><span class=\"line\">...\t\t\t\t;主程序代码</span><br><span class=\"line\">.exit 0\t\t\t;返回DOS操作系统</span><br><span class=\"line\">...\t\t\t\t;子程序代码</span><br><span class=\"line\">end\t\t\t\t;汇编结束</span><br></pre></td></tr></table></figure>\n<p>MASM 5.0/5.1 不支持 <code>.startup</code>  和 <code>.exit</code> ，可修改如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.model small\t\t\t\t;存储模型伪指令.model，small表示小型模式</span><br><span class=\"line\">.stack\t\t\t\t\t\t;堆栈段</span><br><span class=\"line\">.data\t\t\t\t\t\t;数据段</span><br><span class=\"line\">...\t\t\t\t\t\t\t;数据定义</span><br><span class=\"line\">.code\t\t\t\t\t\t;代码段</span><br><span class=\"line\">;;.startup\t\t\t\t\t;指明程序的起始执行点，同时为程序的数据段、代码段、堆栈段设置相应的段寄存器值</span><br><span class=\"line\">start:\tmov ax, @data</span><br><span class=\"line\">\t\tmov ds, ax</span><br><span class=\"line\">...\t\t\t\t\t\t\t;主程序代码</span><br><span class=\"line\">;;.exit 0\t\t\t\t\t;返回DOS操作系统</span><br><span class=\"line\">\t\tmov ax, 4c00h</span><br><span class=\"line\">\t\tint 21h</span><br><span class=\"line\">...\t\t\t\t\t\t\t;子程序代码</span><br><span class=\"line\">;;end\t\t\t\t\t\t;汇编结束</span><br><span class=\"line\">end start</span><br></pre></td></tr></table></figure>\n<h3 id=\"完整段定义的源程序框架\"><a class=\"markdownIt-Anchor\" href=\"#完整段定义的源程序框架\">#</a> 完整段定义的源程序框架</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stack\tsegment stack</span><br><span class=\"line\">   \t \t...</span><br><span class=\"line\">stack\tends</span><br><span class=\"line\">data\tsegment</span><br><span class=\"line\">    \t...</span><br><span class=\"line\">data \tends</span><br><span class=\"line\">code\tsegment &#x27;code&#x27;</span><br><span class=\"line\">    \tassume cs:code, ds:data, ss:stack\t;assume将cs，ds，ss，依次指向名为code，data，stack逻辑段</span><br><span class=\"line\">start:\tmov ax, data</span><br><span class=\"line\">    \tmov ds, ax\t\t\t\t\t\t\t;因为assume不为ds赋值，所以在start中为ds赋值data逻辑段</span><br><span class=\"line\">    \t...</span><br><span class=\"line\">    \tmov ax, 4c00h</span><br><span class=\"line\">    \tint 21h</span><br><span class=\"line\">  \t\t...</span><br><span class=\"line\">code \tends</span><br><span class=\"line\">    \tend start</span><br></pre></td></tr></table></figure>\n<h2 id=\"汇编语言程序的开发过程\"><a class=\"markdownIt-Anchor\" href=\"#汇编语言程序的开发过程\">#</a> 汇编语言程序的开发过程</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202412031446517.jpg\" alt=\"\"></p>\n<h2 id=\"dos系统功能调用\"><a class=\"markdownIt-Anchor\" href=\"#dos系统功能调用\">#</a> DOS 系统功能调用</h2>\n<blockquote>\n<p>DOS 系统主要分配<strong> 21H 号</strong>中断，用于程序员调用 DOS 操作系统工功能</p>\n<ul>\n<li>中断调用指令： <code>INT 21H</code></li>\n</ul>\n<p>在 AH 寄存器中设置系统功能调用号</p>\n</blockquote>\n<h3 id=\"字符输入01h\"><a class=\"markdownIt-Anchor\" href=\"#字符输入01h\">#</a> 字符输入 (01H)</h3>\n<p>从键盘读入一个字符，并使用<strong> AL 保存出口参数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MOV AH,01H</span><br><span class=\"line\">INT 21H   ;读入的字符在AL寄存器</span><br></pre></td></tr></table></figure>\n<h3 id=\"字符输出02h\"><a class=\"markdownIt-Anchor\" href=\"#字符输出02h\">#</a> 字符输出 (02H)</h3>\n<p>在显示器当前光标位置显示给定字符，且光标右移一个字符位置，使用<strong> DL 作为入口参数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MOV AH,02H</span><br><span class=\"line\">MOV DL,字符  ;ASCII码，例如：41H</span><br><span class=\"line\">;MOV    DL,41H  ;输出‘A’，方法一</span><br><span class=\"line\">;MOV    DL,&#x27;A&#x27;  ;输出‘A’，方法二</span><br><span class=\"line\">INT 21H</span><br></pre></td></tr></table></figure>\n<h3 id=\"字符串输入0ah\"><a class=\"markdownIt-Anchor\" href=\"#字符串输入0ah\">#</a> 字符串输入 (0AH)</h3>\n<p>需要事先在主存设置用于保存输入字符串的缓冲区，使用 ** <code>DS：DX</code>  作为出口参数 **</p>\n<ul>\n<li>缓冲区的第 1 字节填入最多<strong>欲</strong>接收的字符个数（<strong>包括回车符</strong>）</li>\n<li>缓冲区的第 2 个字节存放<strong>实际</strong>输入的字符个数（<strong>不包括回车符</strong>）</li>\n<li>从第 3 个字节开始存放输入的字符串，实际输入字符数多余定义数时，多出的字符被<strong>丢弃</strong></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buffer \tdb\t81\t\t\t\t\t;可能输入的最大字符数</span><br><span class=\"line\">\t\tdb\t0\t\t\t\t\t;存放实际输入的字符数</span><br><span class=\"line\">\t\tdb\t81\tdup (0)\t\t\t;存放输入的字符串</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">\t\tmov\tah, 0AH\t\t\t\t;设置功能号</span><br><span class=\"line\">\t\tmov dx, seg buffer\t\t;提供入口参数，seg获得buffer的段地址</span><br><span class=\"line\">\t\tmov ds, dx\t\t\t\t;设置数据段</span><br><span class=\"line\">\t\tmov dx, offset buffer\t</span><br><span class=\"line\">\t\tint 21h\t\t\t\t\t</span><br></pre></td></tr></table></figure>\n<h3 id=\"字符串输出09h\"><a class=\"markdownIt-Anchor\" href=\"#字符串输出09h\">#</a> 字符串输出 (09H)</h3>\n<p>需要事先将欲显示的字符串保存在主存中</p>\n<ul>\n<li>设置 ** 入口参数 <code>DS:DX</code> ** 等于该字符串在主存中的首地址</li>\n<li>字符串必须以 <code>$(24H)</code>  结束</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string\tdb\t&#x27;hello,everybody&#x27;,&#x27;$&#x27;</span><br><span class=\"line\">\t\tmov\tah, 09h</span><br><span class=\"line\">\t\tmov dx, offset string</span><br><span class=\"line\">\t\tint 21h</span><br></pre></td></tr></table></figure>\n<h3 id=\"按键判断0bh\"><a class=\"markdownIt-Anchor\" href=\"#按键判断0bh\">#</a> 按键判断 (0BH)</h3>\n<p>仅判断当前是否有按下的键，设置<strong>输出参数 AL</strong> 后退出。</p>\n<ul>\n<li><code>AL = 0</code>  没有按键</li>\n<li><code>AL = FFH</code>  已经按键</li>\n</ul>\n<h1 id=\"参数变量标号\"><a class=\"markdownIt-Anchor\" href=\"#参数变量标号\">#</a> 参数 &amp; 变量 &amp; 标号</h1>\n<h2 id=\"数值型参数\"><a class=\"markdownIt-Anchor\" href=\"#数值型参数\">#</a> 数值型参数</h2>\n<h3 id=\"常数\"><a class=\"markdownIt-Anchor\" href=\"#常数\">#</a> 常数</h3>\n<p>十进制常数 – 以 D/d 结尾，默认情况后缀可省略</p>\n<p>十六进制常数 – 以 H/h 结尾</p>\n<p>八进制 – 以 Q/q 结尾</p>\n<p>二进制 – 以 B/b 结尾</p>\n<p>字符串常数 – 用英文缩略号括起来的单个字符或多个字符</p>\n<p>符号常数 – 利用一个标识符表达一个数值。符号定义伪指令有<strong> EQU</strong> 和 **=**</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">符号名 equ 数值表达式</span><br><span class=\"line\">符号名 equ &lt;字符串&gt;\t;该字符串可以是一条处理器指令</span><br><span class=\"line\">符号名 = 数值表达式</span><br></pre></td></tr></table></figure>\n<p>EQU 用于数值等价时不能重复定义符号名，但是 &quot;=&quot; 允许重复赋值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">x = 7\t\t;x equ 7同样正确</span><br><span class=\"line\">x = x + 5\t;但是x equ x + 5错误</span><br></pre></td></tr></table></figure>\n<h3 id=\"数值表达式\"><a class=\"markdownIt-Anchor\" href=\"#数值表达式\">#</a> 数值表达式</h3>\n<p>算术运算符： <code>+,-,*,/,mod</code></p>\n<p>逻辑运算符： <code>and,or,xor(异或),not</code></p>\n<p>移位运算符： <code>shl,shr</code></p>\n<p>关系运算符： <code>eq,ne,gt(大于),lt(小于),ge(大于等于),le(小于等于)</code></p>\n<ul>\n<li>用 FFFFH (补码 - 1) 表示真</li>\n<li>用 0000H 表示假</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">mov bx, ((port lt 5) and 20) or ((port ge 5) and 30)</span><br><span class=\"line\">;当port &lt; 5时，mov bx, 20</span><br><span class=\"line\">;当port &gt;= 5时，mov bx, 30</span><br></pre></td></tr></table></figure>\n<p>高低分离符： <code>high(高字节), low(低字节), highword(高字),lowword(低字)</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov ah, high 8765h\t</span><br><span class=\"line\">;等价于mov ah, 87h</span><br></pre></td></tr></table></figure>\n<h2 id=\"变量定义伪指令\"><a class=\"markdownIt-Anchor\" href=\"#变量定义伪指令\">#</a> 变量定义伪指令</h2>\n<p>格式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">变量名 伪指令 初值表</span><br></pre></td></tr></table></figure>\n<ol>\n<li>\n<p>变量名：用户自定义的标识符，表示初值表首元素的<strong>逻辑地址</strong>。变量名可以没有，在此情况下直接为初值表分配空间，无符号地址</p>\n</li>\n<li>\n<p>初值表：用 &quot;,&quot; 分隔的参数，主要由<strong>数值常数、表达式、&quot;?&quot;，&quot;DUP&quot; 组成</strong></p>\n<ul>\n<li>&quot;?&quot; 表示初值不确定</li>\n<li>重复初值可以用 DUP 进行定义</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重复次数 dup(重复参数)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>变量定义伪指令有 <code>DB、DW、DD、DF、DQ、DT</code></li>\n</ol>\n<h3 id=\"定义字节单元伪指令db\"><a class=\"markdownIt-Anchor\" href=\"#定义字节单元伪指令db\">#</a> 定义字节单元伪指令 DB</h3>\n<p>用于分配一字节或多<strong>字节</strong>单元，初值表中的每个数据一定是字节量 (Byte)，可以是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>255</mn></mrow><annotation encoding=\"application/x-tex\">0\\sim 255</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">5</span><span class=\"mord\">5</span></span></span></span> 的无符号数，或<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>128</mn><mo>∼</mo><mo>+</mo><mn>127</mn></mrow><annotation encoding=\"application/x-tex\">-128\\sim +127</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span> 带符号数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data</span><br><span class=\"line\">x\tdb &#x27;A&#x27;, -5</span><br><span class=\"line\">\tdb 2dup(100), ?</span><br><span class=\"line\">y\tdb &#x27;ABC&#x27;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">存储单元</th>\n<th style=\"text-align:center\">偏移地址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">43h©</td>\n<td style=\"text-align:center\">0007H</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">42h(B)</td>\n<td style=\"text-align:center\">0006H</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">41h(A)</td>\n<td style=\"text-align:center\">0005H</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">——(?)</td>\n<td style=\"text-align:center\">0004H</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">64h(100)</td>\n<td style=\"text-align:center\">0003H</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">64h(100)</td>\n<td style=\"text-align:center\">0002H</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fbh(-5)</td>\n<td style=\"text-align:center\">0001H</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">61h(a)</td>\n<td style=\"text-align:center\">0000H</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"定义字单元伪指令dw\"><a class=\"markdownIt-Anchor\" href=\"#定义字单元伪指令dw\">#</a> 定义字单元伪指令 DW</h3>\n<p>用于分配一个或多个<strong>字</strong>单元，初值表中的每个数据一定是字量 (Word)，一个字单元可用于存放任何<strong> 16 位</strong>数据，如：一个段地址、一个偏移地址、两个字符、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>65535</mn></mrow><annotation encoding=\"application/x-tex\">0\\sim 65535</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">5</span><span class=\"mord\">3</span><span class=\"mord\">5</span></span></span></span> 之间的无符号数、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>32768</mn><mo>∼</mo><mo>+</mo><mn>32767</mn></mrow><annotation encoding=\"application/x-tex\">-32768\\sim +32767</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">3</span><span class=\"mord\">2</span><span class=\"mord\">7</span><span class=\"mord\">6</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">3</span><span class=\"mord\">2</span><span class=\"mord\">7</span><span class=\"mord\">6</span><span class=\"mord\">7</span></span></span></span> 之间的带符号数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wnum\tequ 5678h\t;定义wnum为常量</span><br><span class=\"line\">count\tdw 20h\t\t;定义count为变量</span><br><span class=\"line\">\t\t\t\t\t;假设count在的数据段的偏移地址是10h</span><br><span class=\"line\"></span><br><span class=\"line\">mov\tax, [bx + si + wnum]\t\t;mov\tax, [bx + si + 5678h]</span><br><span class=\"line\">mov\tax, count\t\t\t\t\t;mov\tax, [0010h]</span><br><span class=\"line\">mov\tax, [si + count]\t\t\t;mov\tax, [si + 10h]</span><br><span class=\"line\">\t\t\t\t\t\t\t\t;mov\tax, count[si]</span><br><span class=\"line\">lea\tbx, count\t\t\t\t\t;lea\tbx, [0010h]</span><br><span class=\"line\">\t\t\t\t\t\t\t\t;mov\tbx, 0010h</span><br><span class=\"line\">mov\tbx, offset count\t\t\t;mov \tbx, 0010h</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p><strong>变量实质表达的是主存地址</strong></p>\n</li>\n<li>\n<p><strong>仅使用变量名或者加个常量是直接寻址</strong></p>\n</li>\n<li>\n<p><strong>再加一个寄存器是寄存器相对寻址</strong></p>\n</li>\n<li>\n<p><strong>加两个寄存器是基址变址相对寻址</strong></p>\n</li>\n</ul>\n<h3 id=\"定义双字单元伪指令dd\"><a class=\"markdownIt-Anchor\" href=\"#定义双字单元伪指令dd\">#</a> 定义双字单元伪指令 DD</h3>\n<p>用于分配一个或多个<strong>双字</strong>单元，初值表中的每个数据一定是一个<strong> 32 位</strong>的双字量</p>\n<p>可以用来表达 16 位段地址和 16 位偏移地址的远指针</p>\n<h3 id=\"其他数据定义伪指令dfdqdt\"><a class=\"markdownIt-Anchor\" href=\"#其他数据定义伪指令dfdqdt\">#</a> 其他数据定义伪指令 DF&amp;DQ&amp;DT</h3>\n<p>定义 3 字伪指令 DF：为一个或多个 6 字节变量分配空间及初始化</p>\n<p>定义 4 字伪指令 DQ：为一个或多个 8 字节变量分配空间及初始化</p>\n<p>定义 10 字节伪指令 DT：为一个或多个 10 字节变量分配空间及初始化</p>\n<p>** 练习：** 定义一个缓冲区，包含 33H、34H、35H、36H 四个字节字符，把这四个数据复制 20 遍，存入接着的缓冲区，最后显示出复制结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source\tdb\t33j, 34h, 35h, 36h</span><br><span class=\"line\">target\tdb\t80dp(?)\t\t\t\t;紧接着分配80个空间</span><br><span class=\"line\"></span><br><span class=\"line\">;分别指向源和目的的偏移地址首部</span><br><span class=\"line\">mov\tsi, offset source</span><br><span class=\"line\">mov\tdi, offset target</span><br><span class=\"line\"></span><br><span class=\"line\">mov cx 80</span><br><span class=\"line\">again1:\tmov\tal. [si]</span><br><span class=\"line\">\t\tmov\t[di], al</span><br><span class=\"line\">\t\tinc\tsi</span><br><span class=\"line\">\t\tint\tdi</span><br><span class=\"line\">\t\tloop again1</span><br><span class=\"line\">mov\tdi, 0</span><br><span class=\"line\">again2:\tmov dl, target[di]</span><br><span class=\"line\">        mov\tah, 2</span><br><span class=\"line\">        int\t21h</span><br><span class=\"line\">        inc\tdi</span><br><span class=\"line\">        cmp\tdi, 80</span><br><span class=\"line\">        jb\tagain2</span><br></pre></td></tr></table></figure>\n<h3 id=\"定位伪指针orgevenalign\"><a class=\"markdownIt-Anchor\" href=\"#定位伪指针orgevenalign\">#</a> 定位伪指针 ORG&amp;EVEN&amp;ALIGN</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$表示当前的偏移地址</span><br><span class=\"line\"></span><br><span class=\"line\">```assembly</span><br><span class=\"line\">;在偏移地址100H单元开始定义</span><br><span class=\"line\">dw 1, 2, $ + 4, $ + 4</span><br><span class=\"line\">;在104H单元的值为108H，106H单元的值为10AH</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">```ALIGN n```：使它后面的数据或指令从n的整数倍开始，如果不是就加上$1\\sim n-1$中的一个数</span><br><span class=\"line\"></span><br><span class=\"line\">n是2的乘方，且小于所在段的定位属性值</span><br><span class=\"line\"></span><br><span class=\"line\">## 变量和标号的属性</span><br><span class=\"line\"></span><br><span class=\"line\">### 地址操作符</span><br><span class=\"line\"></span><br><span class=\"line\">```[]```表示将括起来的表达式作为存储器地址指针</span><br><span class=\"line\"></span><br><span class=\"line\">```$```表示当前偏移地址</span><br><span class=\"line\"></span><br><span class=\"line\">```:```表示采用指定的段地址寄存器</span><br><span class=\"line\"></span><br><span class=\"line\">```offset```返回偏移地址</span><br><span class=\"line\"></span><br><span class=\"line\">```seg```返回段地址</span><br><span class=\"line\"></span><br><span class=\"line\">### 类型操作符</span><br><span class=\"line\"></span><br><span class=\"line\">1. ```ptr```</span><br><span class=\"line\"></span><br><span class=\"line\">   ```类型名 ptr 名字/标号```</span><br><span class=\"line\"></span><br><span class=\"line\">2. ```this```</span><br><span class=\"line\"></span><br><span class=\"line\">   创建时采用当前地址，但为指定类型的操作数</span><br><span class=\"line\"></span><br><span class=\"line\">   ```assembly</span><br><span class=\"line\">   ;b_var 和 w_var 地址相同</span><br><span class=\"line\">   b_var equ this byte ;按字节访问b_var</span><br><span class=\"line\">   w_var dw 10 dup(0)`;按字访问w_var</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p><code>type 名字/标号</code></p>\n<p>返回一个字量数值，表明名字或标号的类型；对字节、字、双字变量依次返回 1，2，4</p>\n</li>\n</ol>\n",
            "tags": [
                "汇编"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E9%93%BE%E8%B7%AF%E5%B1%82/",
            "url": "http://www.luckycyyyy.top/2024/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E9%93%BE%E8%B7%AF%E5%B1%82/",
            "title": "链路层",
            "date_published": "2024-11-14T05:22:23.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMzYwOTk2NDAyL2NoYW5uZWwvc2VyaWVzZGV0YWlsP3NpZD0xNzIxODgy\">文章参考–湖科大教书匠</span></p>\n<h1 id=\"链路层概述\"><a class=\"markdownIt-Anchor\" href=\"#链路层概述\">#</a> 链路层概述</h1>\n<h2 id=\"链路层提供的服务\"><a class=\"markdownIt-Anchor\" href=\"#链路层提供的服务\">#</a> 链路层提供的服务</h2>\n<p><strong>成帧</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141436390.png\" alt=\"\"></p>\n<ul>\n<li>将数据加上头部和尾部，封装成数据帧</li>\n<li>帧头部用 MAC 地址标识源和目的（不同于 IP 地址）</li>\n<li>MSS = MTU - IP 头部长度 - TCP 头部长度</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141429164.png\" alt=\"\"></p>\n<p>透明传输中因为对传输数据没有任何限制，即允许数据中存在帧定界符，所以接收方可能把数据中的那段数据错认成帧定界符。</p>\n<p>解决方法：</p>\n<ol>\n<li>对帧界定符进行 “转义”，在其之前加上 ESC</li>\n<li>在数据中与转义字符相同的数据段中填充 0</li>\n</ol>\n<p>eg：<br>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141435145.png\" alt=\"\"></p>\n<p><strong>链路接入</strong></p>\n<ul>\n<li>共享介质的信道访问</li>\n</ul>\n<p><strong>可靠交付</strong></p>\n<ul>\n<li>\n<p>很少用于误码率低的链路（光纤、双绞线链路）</p>\n</li>\n<li>\n<p>用于误码率高的链路（无线链路）</p>\n</li>\n</ul>\n<p><strong>差错检测和纠正</strong></p>\n<ul>\n<li>\n<p>信号衰减和电磁干扰噪声导致出错</p>\n</li>\n<li>\n<p>接收方检测到错误存在：</p>\n<ul>\n<li>给发送方发送信号要求重传或丢弃该数据帧</li>\n<li>接收方检测和纠正帧中错误，不用重传</li>\n</ul>\n</li>\n</ul>\n<p><strong>流量控制</strong></p>\n<ul>\n<li>在相邻的收发节点间限制流量</li>\n</ul>\n<p><strong>半双工和全双工</strong></p>\n<ul>\n<li>半双工时，链路两端的节点都能传输分组，但不能同时传输</li>\n</ul>\n<h2 id=\"链路层实现地点\"><a class=\"markdownIt-Anchor\" href=\"#链路层实现地点\">#</a> 链路层实现地点</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141422284.png\" alt=\"\"></p>\n<h1 id=\"差错检测和纠正技术\"><a class=\"markdownIt-Anchor\" href=\"#差错检测和纠正技术\">#</a> 差错检测和纠正技术</h1>\n<h2 id=\"奇偶校验\"><a class=\"markdownIt-Anchor\" href=\"#奇偶校验\">#</a> 奇偶校验</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141441883.png\" alt=\"\"></p>\n<h2 id=\"循环冗余校验\"><a class=\"markdownIt-Anchor\" href=\"#循环冗余校验\">#</a> 循环冗余校验</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141517355.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141517857.png\" alt=\"\"></p>\n<p>发送方：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141516661.png\" alt=\"\"></p>\n<ol>\n<li>” 除法 “实质上是异或运算</li>\n<li>是否够除，是看位数是否足够</li>\n</ol>\n<p>接收方：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141516573.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141516644.png\" alt=\"\"></p>\n<h2 id=\"因特网检查和\"><a class=\"markdownIt-Anchor\" href=\"#因特网检查和\">#</a> 因特网检查和</h2>\n<p><strong>分组</strong>：首先，将数据（或数据包）分为若干个 16 位的字（即每个字为两个字节）。如果数据长度不是 16 位的倍数，最后的一个部分将补充零填充。</p>\n<p><strong>求和</strong>：将所有 16 位的字相加，如果出现溢出（即超过 16 位），将溢出的部分加到和的最低位。也就是说，要进行 “循环加法”。</p>\n<p><strong>取反</strong>：对最终的和值进行按位取反（将 0 变为 1，1 变为 0），得到检查和。这个和值就是<strong>校验和</strong>。</p>\n<p><strong>校验</strong>：接收方收到数据后，执行相同的操作，计算出一个校验和。若计算出的校验和为全 1，则认为数据无误；如果不为全 1，表示数据在传输过程中可能发生了错误。</p>\n<h1 id=\"多路访问链路和协议\"><a class=\"markdownIt-Anchor\" href=\"#多路访问链路和协议\">#</a> 多路访问链路和协议</h1>\n<p><strong>广播链路的特点</strong></p>\n<blockquote>\n<p>广播链路是指在一个通信系统中，信号从单个源设备发送出去，所有处于链路上的接收设备都能接收到该信号。广播通常用于无线通信或广播电视中。</p>\n</blockquote>\n<ul>\n<li>\n<p>单个共享广播信道</p>\n</li>\n<li>\n<p>两个或多个节点同时传输：相互干扰</p>\n</li>\n<li>\n<p>碰撞：一个节点同时收到两个或多个信号</p>\n</li>\n</ul>\n<p><strong>多路访问协议</strong></p>\n<blockquote>\n<p>多路访问是指多个设备在同一时间使用共享的通信介质进行通信。为了避免冲突，多路访问需要一些协议来协调不同设备的传输。常见的多路访问方法包括时分多路访问（TDMA）、频分多路访问（FDMA）、码分多路访问（CDMA）等。</p>\n</blockquote>\n<ul>\n<li>\n<p>分布式算法决定节点如何共享信道，如节点何时可以传输数据</p>\n</li>\n<li>\n<p>** 特别注意：** 有关共享信道的通信（协商）需使用信道本身</p>\n</li>\n<li>\n<p>没有额外的信道来进行协调</p>\n</li>\n</ul>\n<p><strong>多址访问协议分类</strong></p>\n<blockquote>\n<p>多址访问实际上是多路访问的一个子集，特指如何在多个设备之间有效地分配通信资源。在多址访问中，每个设备有一个独立的标识（地址），这样设备之间可以根据地址来区分不同的通信流。</p>\n</blockquote>\n<ul>\n<li>\n<p>信道划分协议</p>\n<ul>\n<li>将信道划分成小的 “片”（时隙、频率、编码）</li>\n<li>将 “片” 分配给节点使用</li>\n</ul>\n</li>\n<li>\n<p>随机接入（访问）协议</p>\n<ul>\n<li>\n<p>信道没有被分割，允许碰撞</p>\n</li>\n<li>\n<p>碰撞恢复</p>\n</li>\n</ul>\n</li>\n<li>\n<p>轮流协议</p>\n<ul>\n<li>节点轮流传送，但数据量大的节点轮流更长时间</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"信道的划分\"><a class=\"markdownIt-Anchor\" href=\"#信道的划分\">#</a> 信道的划分</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150913515.png\" alt=\"\"></p>\n<h3 id=\"静态信道划分\"><a class=\"markdownIt-Anchor\" href=\"#静态信道划分\">#</a> 静态信道划分</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150806445.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150806602.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150807071.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150812909.png\" alt=\"\"></p>\n<h3 id=\"动态信道划分\"><a class=\"markdownIt-Anchor\" href=\"#动态信道划分\">#</a> 动态信道划分</h3>\n<h4 id=\"aloha\"><a class=\"markdownIt-Anchor\" href=\"#aloha\">#</a> ALOHA</h4>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150918169.png\" alt=\"\"></p>\n<p><strong>时隙 ALOHA</strong>：</p>\n<ul>\n<li>\n<p>所有的帧大小相同</p>\n</li>\n<li>\n<p>时间被划分为相同大小的时隙，一个时隙等于传输一帧的时间</p>\n</li>\n<li>\n<p>节点只在时隙的开始传输帧</p>\n</li>\n<li>\n<p>节点被同步</p>\n</li>\n<li>\n<p>若有两个或多个节点在一个时隙内传送，则所有节点都能在该时隙内检测到冲突</p>\n</li>\n<li>\n<p>当节点有新的帧发送，它等到下一个时隙发送</p>\n</li>\n<li>\n<p>若没有碰撞，节点能在下一时隙传送完新帧</p>\n</li>\n<li>\n<p>若有碰撞，节点以概率 p 在后续的每一个时隙重传该帧，即在发生冲突后会随机间隔 n 个时隙进行重发</p>\n</li>\n</ul>\n<p><strong>优点：</strong></p>\n<ul>\n<li>\n<p>单个活动节点能以全速 R 连续传输</p>\n</li>\n<li>\n<p>高度分散：时隙只在节点同步</p>\n</li>\n<li>\n<p>简单</p>\n</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>\n<p>碰撞，浪费时隙</p>\n</li>\n<li>\n<p>时隙空闲</p>\n</li>\n<li>\n<p>节点需要在分组传送时间以内检测到碰撞</p>\n</li>\n<li>\n<p>时钟同步</p>\n</li>\n</ul>\n<p><strong>效率：</strong></p>\n<p>时隙 ALOHA：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150926401.png\" alt=\"\"></p>\n<p>纯 ALOHA：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150927423.png\" alt=\"\"></p>\n<h4 id=\"csmacd\"><a class=\"markdownIt-Anchor\" href=\"#csmacd\">#</a> CSMA/CD</h4>\n<h5 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h5>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150933829.png\" alt=\"\"></p>\n<p><strong>分类：</strong></p>\n<p><strong>非坚持 CSMA</strong>：一旦监听到信道忙（即发现有其他站在发送数据），就不再坚持听下去，而是根据协议的算法<strong>延迟一个随机的时间后</strong>重新再监听。若进行载波监听时发现信道空闲，则将准备好的帧发送出去。</p>\n<p><strong>时隙非坚持 CSMA：<strong>采用划分时隙的随机接入 CSMA 协议，协议规定只能</strong>在每个时隙开始时</strong>才能发送帧。</p>\n<p><strong>1 坚持 CSMA：<strong>当一个站点要传送数据时，首先侦听信道，看是否有其他站点正在传送。如果信道正忙，它就</strong>持续等待直到它侦听到信道空闲</strong>时，便将数据送出。若发生<strong>冲突</strong>，站点就<strong>等待一个随机长的时间</strong>，然后重新开始。</p>\n<p><strong>P 坚持 CSMA：<strong>当一个站点要传送数据时，首先侦听信道，看是否有其他站点正在传送。如果信道正忙，它就</strong>持续等待直到它侦听到信道空闲</strong>时，以<strong>概率 P 发送数据</strong>，而<strong>以概率（1－P）延迟一段时间 τ</strong>（网络中最远的端到端的传播时延），重新监听信道。若发生冲突，站点就等待一个随机长的时间，然后重新开始。</p>\n<p><strong>CSMA 比较：</strong></p>\n<ul>\n<li>\n<p>非坚持：不能充分利用信道刚刚转入空闲期的这段时间。</p>\n</li>\n<li>\n<p>1 坚持：容易在上述这段时间产生冲突。</p>\n</li>\n<li>\n<p>P 坚持：可以在一定程度上克服这些缺点，但却很难选择一个能用于各种通信量强度的 P 值。</p>\n</li>\n</ul>\n<p><strong>在实际网络中常选择 1 坚持</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151015046.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150940320.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150942115.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150943083.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150945231.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150947490.png\" alt=\"\"></p>\n<h5 id=\"习题\"><a class=\"markdownIt-Anchor\" href=\"#习题\">#</a> 习题</h5>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151000035.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151003140.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151003086.png\" alt=\"\"></p>\n<h5 id=\"发送流程\"><a class=\"markdownIt-Anchor\" href=\"#发送流程\">#</a> 发送流程</h5>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150948941.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150948573.png\" alt=\"\"></p>\n<h4 id=\"轮流协议\"><a class=\"markdownIt-Anchor\" href=\"#轮流协议\">#</a> 轮流协议</h4>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151019498.png\" alt=\"\"></p>\n<p><strong>三者比较</strong></p>\n<p><strong>信道划分协议</strong></p>\n<ul>\n<li>\n<p>在重负荷时，共享信道有效、公平</p>\n</li>\n<li>\n<p>在轻负荷时效率低：信道访问延时，即使只有一个活动节点，也只能分配到 1/N 的带宽</p>\n</li>\n</ul>\n<p><strong>随机访问协议</strong></p>\n<ul>\n<li>\n<p>轻负荷时效率高：只有一个节点时，能充分利用信道</p>\n</li>\n<li>\n<p>在重负荷下：碰撞的开销</p>\n</li>\n</ul>\n<p><strong>轮流协议</strong></p>\n<ul>\n<li>在两个方面寻求最佳的解决方案！</li>\n</ul>\n<h1 id=\"交换局域网\"><a class=\"markdownIt-Anchor\" href=\"#交换局域网\">#</a> 交换局域网</h1>\n<h2 id=\"链路层寻址和arp\"><a class=\"markdownIt-Anchor\" href=\"#链路层寻址和arp\">#</a> 链路层寻址和 ARP</h2>\n<p><strong>Q</strong>：既然有 IP 地址，为何要 MAC 地址</p>\n<p><strong>A</strong>：局域网设备不能够识别 IP 地址（工作在链路层），只能通过 MAC 地址寻找主机</p>\n<p><strong>Q</strong>：进程产生的套接字是端口号 + IP 地址，在局域网中如何找到目的主机</p>\n<p><strong>A</strong>：通过 IP 地址获取 MAC 地址</p>\n<p><strong>Q</strong>：如何在已知 IP 地址的情况下，获得 MAC 地址</p>\n<p><strong>A</strong>：地址解析协议（ARP）</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151045976.png\" alt=\"\"></p>\n<h3 id=\"mac地址lan地址物理地址\"><a class=\"markdownIt-Anchor\" href=\"#mac地址lan地址物理地址\">#</a> MAC 地址（LAN 地址，物理地址）</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047259.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047902.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047332.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151045825.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047437.png\" alt=\"\"></p>\n<blockquote>\n<p>物理地址指的是 MAC 地址，在数据链路层上</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151046083.png\" alt=\"\"></p>\n<h3 id=\"arp\"><a class=\"markdownIt-Anchor\" href=\"#arp\">#</a> ARP</h3>\n<blockquote>\n<p>根据目标的 IP 地址获取其 MAC 地址</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411172037484.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151057305.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151057575.png\" alt=\"\"></p>\n<blockquote>\n<p>ARP 协议只能在一段链路或一个网络上使用，而不能跨网络使用</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151058910.png\" alt=\"\"></p>\n<h2 id=\"以太网\"><a class=\"markdownIt-Anchor\" href=\"#以太网\">#</a> 以太网</h2>\n<h3 id=\"以太网类型\"><a class=\"markdownIt-Anchor\" href=\"#以太网类型\">#</a> 以太网类型</h3>\n<ul>\n<li>总线式以太网</li>\n<li>交换式以太网</li>\n</ul>\n<h3 id=\"以太网的帧结构\"><a class=\"markdownIt-Anchor\" href=\"#以太网的帧结构\">#</a> 以太网的帧结构</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161124022.png\" alt=\"\"></p>\n<p><strong>数据字段</strong>：（46 字节～1500 字节）</p>\n<p><strong>前同步码</strong>：</p>\n<ul>\n<li>\n<p>总共 8 字节，前 7 字节的格式为 10101010 ，最后一个字节格式为 10101011</p>\n</li>\n<li>\n<p>用于同步发送方与接收方时钟</p>\n</li>\n</ul>\n<p><strong>地址</strong>：6 字节</p>\n<ul>\n<li>若适配器收到以太网帧，目的地址为自己的 MAC 地址或广播地址（如 ARP 包），就将帧中的数据传给网络层。</li>\n<li>否则，适配器丢弃该帧</li>\n</ul>\n<p><strong>类型</strong>：上层协议类型 （大多为 IP 协议，也支持其它协议如 Novell IPX 和 AppleTalk）</p>\n<p><strong>CRC</strong>：由接收方检查，若检测到错误，就将该帧丢弃</p>\n<h3 id=\"以太网提供的服务\"><a class=\"markdownIt-Anchor\" href=\"#以太网提供的服务\">#</a> 以太网提供的服务</h3>\n<ul>\n<li>\n<p><strong>无连接服务</strong>：在发送适配器和接收适配器之间不需要握手</p>\n</li>\n<li>\n<p><strong>不可靠服务</strong>：接收适配器不发送确认帧或否认帧给发送方</p>\n<ul>\n<li>交给网络层的数据报可能存在间隙</li>\n<li>若应用使用 TCP，间隙会被填充</li>\n<li>否则，应用就会看见间隙</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"以太网使用的csmacd\"><a class=\"markdownIt-Anchor\" href=\"#以太网使用的csmacd\">#</a> 以太网使用的 CSMA/CD</h3>\n<p><strong>特点</strong></p>\n<ul>\n<li>\n<p>没有时隙</p>\n</li>\n<li>\n<p>当适配器侦听到其它适配器在传输，则不传输帧，即<strong>载波侦听</strong></p>\n</li>\n<li>\n<p>正在传输的适配器若检测到其它适配器也在传输，则它中止自己的传输，即<strong>碰撞检测</strong></p>\n</li>\n<li>\n<p>在重新传输之前，适配器要等待一段随机时间，即<strong>随机访问</strong></p>\n</li>\n</ul>\n<p><strong>算法</strong></p>\n<ol>\n<li>适配器收到来自网络层的数据报，创建帧</li>\n<li>若适配器检测到信道空闲，则开始传输帧；若检测到信道忙，就开始等待，直到信道空闲再开始传输该帧</li>\n<li>若适配器传输了整个帧而没有检测到其它适配器的传输，则该适配器完成该帧的传输</li>\n<li>若适配器在传输时检测到其它适配器也在传输，则停止传输，发送拥塞信号</li>\n<li>中止传输后，适配器进入指数回退阶段，在经历第 m 次碰撞后，适配器随机从<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mtext>，</mtext><mn>1</mn><mtext>，</mtext><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msup><mn>2</mn><mi>m</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">{0，1，2，…，2^m-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span></span> 中选择 K 值。适配器在等待 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mtext>·</mtext><mn>512</mn></mrow><annotation encoding=\"application/x-tex\">K·512</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">·</span><span class=\"mord\">5</span><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span></span> 比特时间后，返回第 2 步</li>\n</ol>\n<p><strong>重要特性</strong></p>\n<ul>\n<li>\n<p>使用 CSMA/CD 协议的以太网不能进行<strong>全双工通信</strong>而只能进行双向交替通信（<strong>半双工通信</strong>）。</p>\n</li>\n<li>\n<p>每个站在发送数据之后的一小段时间内，存在着遭遇碰撞的可能性。</p>\n</li>\n<li>\n<p>这种发送的不确定性使整个以太网的平均通信量远小于以太网的最高数据率。</p>\n</li>\n</ul>\n<h3 id=\"传统以太网的物理层\"><a class=\"markdownIt-Anchor\" href=\"#传统以太网的物理层\">#</a> 传统以太网的物理层</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161429974.png\" alt=\"\"></p>\n<p><strong>10BASE5</strong></p>\n<ul>\n<li>\n<p>10 表示传输速率为 10Mbps</p>\n</li>\n<li>\n<p>BASE 表示基带传输：将信源的数据经过变换变为数字基带信号直接传输，信号不经过频谱搬移。</p>\n<ul>\n<li>基带数字信号在传输过程中，随着传输距离加大，信号衰减及噪声干扰会使得数字信号波形产生<strong>失真</strong>。</li>\n<li>为消除失真，每隔一定传输距离加设一个<strong>中继器</strong>。</li>\n<li><strong>中继器</strong>工作在<strong>物理层</strong>，把一端电缆的信号放大后传到另一端的电缆中。</li>\n</ul>\n</li>\n<li>\n<p>5 表示最远传输距离为 500m</p>\n</li>\n</ul>\n<h3 id=\"吉比特以太网千兆以太网\"><a class=\"markdownIt-Anchor\" href=\"#吉比特以太网千兆以太网\">#</a> 吉比特以太网（千兆以太网）</h3>\n<ul>\n<li>\n<p>使用标准以太网帧格式</p>\n</li>\n<li>\n<p>允许点对点链路和共享的广播信道</p>\n</li>\n<li>\n<p>共享信道时，使用 CSMA/CD; 为了得到可接受的效率，节点之间的距离要短</p>\n</li>\n<li>\n<p>对于点到点链路，可以以 1Gbps 的速率全双工工作</p>\n</li>\n<li>\n<p>2006 年达到 10 Gbps</p>\n</li>\n</ul>\n<h3 id=\"信号编码\"><a class=\"markdownIt-Anchor\" href=\"#信号编码\">#</a> 信号编码</h3>\n<p><strong>曼彻斯特编码</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161530621.png\" alt=\"\"></p>\n<p><strong>编码规则</strong></p>\n<ol>\n<li>每个比特周期分为两个部分（前半周期和后半周期）。</li>\n<li>逻辑 <code>0</code>\n<ul>\n<li>前半周期为高电平，后半周期为低电平（高到低跳变）。</li>\n</ul>\n</li>\n<li>逻辑 <code>1</code>\n<ul>\n<li>前半周期为低电平，后半周期为高电平（低到高跳变）。</li>\n</ul>\n</li>\n</ol>\n<p>也可以简单记为：</p>\n<ul>\n<li>电平<strong>高到低</strong>表示 <code>0</code> 。</li>\n<li>电平<strong>低到高</strong>表示 <code>1</code> 。</li>\n</ul>\n<p><strong>特性</strong></p>\n<ol>\n<li>同步性\n<ul>\n<li>每个比特周期都有一个中间跳变（高到低或低到高），提供了时钟同步信号。</li>\n</ul>\n</li>\n<li>直流平衡\n<ul>\n<li>平均电平为零，不存在直流分量（频谱更适合传输介质）。</li>\n</ul>\n</li>\n<li>抗干扰性\n<ul>\n<li>即使传输中发生一些干扰，由于信号变化的频率较高，接收端更容易检测和恢复信号。</li>\n</ul>\n</li>\n</ol>\n<p><strong>差分曼彻斯特编码</strong></p>\n<p>基于信号的物理层编码技术，常用于数字通信中，用于将比特数据转换成电信号传输。它结合了差分编码和曼彻斯特编码的优点，具有良好的抗干扰能力和同步特性。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161538118.png\" alt=\"\"></p>\n<ol>\n<li>\n<p><strong>编码规则</strong>：</p>\n<ul>\n<li><strong>逻辑 “0”</strong>：在比特开始时进行<strong>翻转</strong>（电平从高到低，或低到高）。</li>\n<li><strong>逻辑 “1”</strong>：在比特开始时<strong>不翻转</strong>（电平保持上一位结束时的状态）。</li>\n<li><strong>同步跳变</strong>：每个比特周期中间（即位间隔中点）必须<strong>翻转</strong>，确保同步信号的存在。</li>\n</ul>\n<p><strong>NRZ 信号</strong>：</p>\n<ul>\n<li>作为对比，NRZ 信号直接用高低电平表示逻辑 “1” 和逻辑 “0”。</li>\n<li>无中点翻转，容易因长时间电平不变而丢失同步。</li>\n</ul>\n<p><strong>差分曼彻斯特信号</strong>：</p>\n<ul>\n<li>每位的中点始终有一次<strong>固定翻转</strong>（用于时钟同步）。</li>\n<li>根据开始时是否翻转来区分逻辑 “0” 和 “1”。</li>\n<li>不同于普通曼彻斯特编码，差分曼彻斯特编码对信号极性反转不敏感。</li>\n</ul>\n</li>\n</ol>\n<p><strong>信号解读</strong></p>\n<p>以图中的比特流  <code>0 1 0 0 1 1 0 1 0</code>  为例，逐位分析：</p>\n<p>在最开头的高横线表示之前的状态</p>\n<ul>\n<li>第一位  <code>0</code>\n<ul>\n<li>开始时翻转（横线高到低）。</li>\n<li>中点时翻转（横线低到高）。</li>\n</ul>\n</li>\n<li>第二位 <code>1</code>\n<ul>\n<li>开始时不翻转，保持上一位结束时的状态（横线高）。</li>\n<li>中点时翻转（横线高到低）。</li>\n</ul>\n</li>\n<li>第三位  <code>0</code>\n<ul>\n<li>开始时翻转（横线低到高）。</li>\n<li>中点时翻转（横线高到低）。</li>\n</ul>\n</li>\n<li>后续位依次按规则进行。</li>\n</ul>\n<h2 id=\"链路交换机\"><a class=\"markdownIt-Anchor\" href=\"#链路交换机\">#</a> 链路交换机</h2>\n<h3 id=\"集线器\"><a class=\"markdownIt-Anchor\" href=\"#集线器\">#</a> 集线器</h3>\n<p>集线器本质上是<strong>物理层</strong>的中继器：</p>\n<ul>\n<li>\n<p>从一个接口收到的比特流会传给其它所有接口</p>\n</li>\n<li>\n<p>同样速率</p>\n</li>\n<li>\n<p>没有帧缓存</p>\n</li>\n<li>\n<p>集线器没有 CSMA/CD ：由适配器检测碰撞</p>\n</li>\n<li>\n<p>提供网络管理功能（可网管、智能、网络分段）</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161547157.png\" alt=\"\"></p>\n<h3 id=\"交换机\"><a class=\"markdownIt-Anchor\" href=\"#交换机\">#</a> 交换机</h3>\n<ul>\n<li>\n<p>数据链路层 + 物理层</p>\n</li>\n<li>\n<p>主机<strong>直接连接</strong>到交换机</p>\n</li>\n<li>\n<p>交换机<strong>缓存</strong>数据包</p>\n</li>\n<li>\n<p>每一条链路都采用了以太网协议，但之间<strong>没有冲突，全双工通信</strong></p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161612362.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161553650.png\" alt=\"\"></p>\n<p><strong>自学习转发</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161612013.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161612196.png\" alt=\"\"></p>\n<p>每条记录都有自己的有效时间，到期会自动删除；因为 MAC 地址和结构的关系不是永久的。</p>\n<p><strong>习题</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161614140.png\" alt=\"\"></p>\n<h3 id=\"网桥\"><a class=\"markdownIt-Anchor\" href=\"#网桥\">#</a> 网桥</h3>\n<p>网桥实质上就是一种存储转发设备，用来实现 MAC 层的 LAN 互连</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161620742.png\" alt=\"\"></p>\n<p><strong>网桥的工作原理</strong></p>\n<ul>\n<li>\n<p>不断监听各端口是否有信号</p>\n</li>\n<li>\n<p>收到无差错的帧则缓存，反之将差错帧丢弃</p>\n</li>\n<li>\n<p>若所收帧的目的 MAC 地址属另一网段，则通过站表决定向何端口转发</p>\n</li>\n<li>\n<p>网桥不转发同一 “网段” 内通信的帧</p>\n</li>\n<li>\n<p>目的主机和源主机不连接在网桥的同一接口上才会转发</p>\n</li>\n<li>\n<p>网桥不修改所转发的帧的源地址</p>\n</li>\n</ul>\n<p><strong>网桥的优势</strong></p>\n<ul>\n<li>\n<p>过滤通信量</p>\n</li>\n<li>\n<p>扩大了局域网的物理范围</p>\n</li>\n<li>\n<p>提高了可靠性</p>\n</li>\n<li>\n<p>可互连不同物理层、不同 MAC 子层和不同速率的局域网</p>\n</li>\n</ul>\n<p><strong>网桥的缺点</strong></p>\n<ul>\n<li>\n<p>由于要接收和转发，增加了时延</p>\n</li>\n<li>\n<p>MAC 子层没有流量控制功能，网络负荷重时，网桥缓存空间可能发生溢出，产生帧丢失现象</p>\n</li>\n<li>\n<p>不同 MAC 子层的网段桥接时，在转发帧之前要修改帧的某些字段，这也需要耗费时间</p>\n</li>\n<li>\n<p>出现<strong>广播风暴</strong>。网桥只适合用户少于几百个和通信量不太大的局域网，否则有时会因传播过多广播信息而产生网络拥塞</p>\n</li>\n</ul>\n<p><strong>网桥和集线器的区别</strong></p>\n<ul>\n<li>\n<p>集线器只是将网络的覆盖距离简单的延长，而且距离有限，具体实现在<strong>物理层</strong>；网桥不仅具有将 LAN 的覆盖距离延长的作用，而且理论上可做到无限延长（?），具体实现在<strong> MAC 层</strong>。</p>\n<ul>\n<li><strong>MAC 层</strong>（媒体访问控制层）是计算机网络中的一个子层，属于数据链路层。MAC 层的主要职责是控制设备如何访问物理介质并实现数据帧的可靠传输。它是网络中通信设备之间协同工作、避免冲突的重要机制。</li>\n</ul>\n</li>\n<li>\n<p>集线器仅具有简单的信号整形和放大的功能；网桥则属于一种智能互连设备，它主要提供<strong>信号的存储 / 转发、数据过滤、路由选择</strong>等能力。</p>\n</li>\n<li>\n<p>集线器仅是一种<strong>硬设备</strong>，而网桥既包括<strong>硬件又包括软件</strong>。</p>\n</li>\n<li>\n<p>集线器仅只能互连<strong>同类 LAN</strong>，而网桥可支持<strong>不同类型的 LAN</strong> 互连。</p>\n</li>\n</ul>\n<p><strong>透明网桥</strong></p>\n<p>这里所谓 “透明” 是指局域网上的每个站并不知道所发送的帧将经过哪几个网桥，即网桥对各站来说是看不见的</p>\n<p><strong>存在问题一一兜圈子</strong></p>\n<p>假设网络中存在多个互联网桥 A、B、C，形成了一个环路。当某设备发送广播帧时：</p>\n<ol>\n<li>广播帧从网桥 A 被转发到网桥 B，然后又被转发到网桥 C，再返回到网桥 A。</li>\n<li>每个网桥不断将广播帧转发到其他网桥，帧在环路中不断循环，形成广播风暴。</li>\n<li>在此过程中，各网桥不断更新 MAC 地址表，但无法正确确定设备的位置</li>\n</ol>\n<p><strong>解决方案 —— 支撑树算法</strong></p>\n<ul>\n<li>\n<p>互连在一起的网桥彼此通信后，就能找出原来的网络拓扑的一个子集，在这个子集里整个连通的网络中<strong>不存在回路</strong>。一旦支撑树确定了网桥就会将某些端口断开，以确保从原来的拓扑得出一个支撑树</p>\n</li>\n<li>\n<p>支撑树算法选择<strong>一个网桥为树的根</strong>，然后以最短路径为依据，找到树上的每一个结点</p>\n</li>\n<li>\n<p>为了让支撑树能反映网络拓扑的变化，每隔几秒钟每个网桥要广播其标识号，和它所知道的所有其他网桥</p>\n</li>\n</ul>\n<p><strong>缺点</strong>：互连局域网数目非常大时，支撑树算法可能花很多时间。</p>\n<p><strong>以太网交换机 —— 多端口网桥</strong></p>\n<ul>\n<li>\n<p>链路层设备</p>\n</li>\n<li>\n<p>存储和转发以太网帧</p>\n</li>\n<li>\n<p>检查帧头部，根据目的 MAC 地址转发帧</p>\n</li>\n<li>\n<p>当帧转发到 LAN 网段，用 CSMA/CD 访问 LAN 网段</p>\n</li>\n<li>\n<p>透明主机不知道交换机的存在</p>\n</li>\n<li>\n<p>即插即用，自学习，交换机不需配置</p>\n</li>\n<li>\n<p>直通交换：帧从入端口转发到出端口不需收集整个帧</p>\n</li>\n<li>\n<p>能少量减少延迟</p>\n</li>\n<li>\n<p>共享 / 专用的、10/100/1000Mbps 接口的结合</p>\n</li>\n</ul>\n<h3 id=\"对比\"><a class=\"markdownIt-Anchor\" href=\"#对比\">#</a> 对比</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161638793.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161558608.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161639568.png\" alt=\"\"></p>\n<h2 id=\"虚拟局域网\"><a class=\"markdownIt-Anchor\" href=\"#虚拟局域网\">#</a> 虚拟局域网</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161657489.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161657254.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658542.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658986.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658713.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658779.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658977.png\" alt=\"\"></p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658761.png\" style=\"zoom: 50%;\" />\n<p><strong>习题</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161659018.png\" alt=\"\"></p>\n",
            "tags": [
                "计网"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E7%BD%91%E7%BB%9C%E5%B1%82/",
            "url": "http://www.luckycyyyy.top/2024/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E7%BD%91%E7%BB%9C%E5%B1%82/",
            "title": "网络层",
            "date_published": "2024-11-13T11:46:24.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMzYwOTk2NDAyL2NoYW5uZWwvc2VyaWVzZGV0YWlsP3NpZD0xNzIxODgy\">文章参考：湖科大教书匠</span></p>\n<h1 id=\"网络层概述\"><a class=\"markdownIt-Anchor\" href=\"#网络层概述\">#</a> 网络层概述</h1>\n<h2 id=\"主要功能\"><a class=\"markdownIt-Anchor\" href=\"#主要功能\">#</a> 主要功能</h2>\n<ul>\n<li>\n<p>在全局范畴为主机之间的通信进行<strong>选路</strong>，选路的结果反映为分组交换机（设备）上的<strong>转发表</strong> <strong>(控制层面）</strong></p>\n</li>\n<li>\n<p>分组交换机（设备）上的网络层根据<strong>转发表</strong>以及<strong>分组头部信息</strong>，将分组向适当链路进行<strong>转发（数据层面）</strong></p>\n</li>\n<li>\n<p>对于面向连接的网络层服务，提供<strong>连接建立</strong>的功能</p>\n</li>\n</ul>\n<h2 id=\"分组交换机分类\"><a class=\"markdownIt-Anchor\" href=\"#分组交换机分类\">#</a> 分组交换机分类</h2>\n<p>交换机：</p>\n<ul>\n<li>连接不同 pc 端，连接到同一个局域网中</li>\n</ul>\n<p>路由器：</p>\n<ul>\n<li>连接不同网段</li>\n<li>转换网络地址，私网和公网的转换</li>\n</ul>\n<p>根据<strong>链路层首部信息</strong>进行转发的 ——<strong> 链路层节点交换机</strong></p>\n<p>根据<strong>网络层首部信息</strong>进行转发的 ——<strong> 路由器</strong></p>\n<h1 id=\"虚电路和数据报网络\"><a class=\"markdownIt-Anchor\" href=\"#虚电路和数据报网络\">#</a> 虚电路和数据报网络</h1>\n<p>面向连接的服务 ——<strong> 虚电路</strong>，需事先握手</p>\n<p>面向无连接的服务 ——<strong> 数据报</strong>，无需握手</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132002702.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132002216.png\" alt=\"\"></p>\n<h1 id=\"路由器工作原理\"><a class=\"markdownIt-Anchor\" href=\"#路由器工作原理\">#</a> 路由器工作原理</h1>\n<p>最长前缀匹配：查找给定目标地址的转发表项时，请使用与目标地址匹配的最长地址前缀</p>\n<h2 id=\"交换结构\"><a class=\"markdownIt-Anchor\" href=\"#交换结构\">#</a> 交换结构</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132006397.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132006004.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132007513.png\" alt=\"\"></p>\n<h2 id=\"路由器的拥塞问题\"><a class=\"markdownIt-Anchor\" href=\"#路由器的拥塞问题\">#</a> 路由器的拥塞问题</h2>\n<h3 id=\"缓冲区大小\"><a class=\"markdownIt-Anchor\" href=\"#缓冲区大小\">#</a> 缓冲区大小</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132023542.png\" alt=\"\"></p>\n<h3 id=\"分组调度策略\"><a class=\"markdownIt-Anchor\" href=\"#分组调度策略\">#</a> 分组调度策略</h3>\n<p>尾部丢弃：丢弃到达的数据包</p>\n<p>优先级：按优先级丢弃 / 删除</p>\n<p>随机：随机丢弃 / 移除</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132023291.png\" alt=\"\"></p>\n<h1 id=\"ip数据报的分片和重组\"><a class=\"markdownIt-Anchor\" href=\"#ip数据报的分片和重组\">#</a> ip 数据报的分片和重组</h1>\n<p>网络链路具有 <strong>MTU</strong> (最大传输单位) 属性 —— 是由链路层最大帧的限制决定的</p>\n<ul>\n<li>不同类型的链路有不同的<strong> MTU</strong> 值</li>\n</ul>\n<p>大的<strong> IP</strong> 数据报在网络中会被分成小的分片</p>\n<ul>\n<li>\n<p>一个数据报变成了几个数据报</p>\n</li>\n<li>\n<p>重组只在目的主机进行</p>\n</li>\n<li>\n<p>数据报头部的<strong>标识</strong>、<strong>标志</strong>以及片<strong>偏移字段</strong>用于目的主机对接收的分片进行重组</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132023505.png\" alt=\"\"></p>\n<ul>\n<li>每个小的分片都需要包含头部信息</li>\n<li>标志：1 为未结束，0 为结束（分片）</li>\n<li>片偏移量：每个分片在整个报文中的位置，偏移以 8 字节为单位，所以需要除以 8</li>\n</ul>\n<h1 id=\"ipv4地址概述\"><a class=\"markdownIt-Anchor\" href=\"#ipv4地址概述\">#</a> ipv4 地址概述</h1>\n<h2 id=\"分类编址\"><a class=\"markdownIt-Anchor\" href=\"#分类编址\">#</a> 分类编址</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132035454.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132029638.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132031570.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132034998.png\" alt=\"\"></p>\n<p>习题：</p>\n<p 注意解析3=\"\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132037574.png\" alt=\"\"></p>\n<p 0.0.0.0只能作为源地址=\"\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132041724.png\" alt=\"\"></p>\n<h2 id=\"划分子网\"><a class=\"markdownIt-Anchor\" href=\"#划分子网\">#</a> 划分子网</h2>\n<p>子网划分的方法：从主机号中借用一部分位数作为子网号</p>\n<p>子网掩码：通过在网络号的子网号相应的位置全置 1，主机号相应的位置全置 0，即可得到子网掩码</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132045035.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132047630.png\" alt=\"\"></p>\n<h3 id=\"cidr\"><a class=\"markdownIt-Anchor\" href=\"#cidr\">#</a> CIDR</h3>\n<p>构造超网</p>\n<p><strong>CIDR 编址格式</strong></p>\n<ul>\n<li &lt;网络前缀,=\"\" &lt;主机号=\"\">\n<p>IP 地址 ::=</p>\n</li>\n<li>\n<p>斜线记法：192.168.0.1/24</p>\n</li>\n<li>\n<p>简写记法：10.0.0.0/10 10/10</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132051121.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132056925.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132057231.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132059897.png\" alt=\"\"></p>\n<h1 id=\"ip数据报的发送和转发过程\"><a class=\"markdownIt-Anchor\" href=\"#ip数据报的发送和转发过程\">#</a> ip 数据报的发送和转发过程</h1>\n<p><strong>广播地址</strong>路由器<strong>不转发</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132124697.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132125993.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132126920.png\" alt=\"\"></p>\n<h2 id=\"cidr路由表\"><a class=\"markdownIt-Anchor\" href=\"#cidr路由表\">#</a> CIDR 路由表</h2>\n<p>使用 CIDR 时，路由表中的每个项目由 “网络前缀” 和 “下一跳地址” 组成。在查找路由表时可能会得到不止一个匹配结果。</p>\n<p>应当从匹配结果中选择具有最长网络前缀的路由：<strong>最长前缀匹配</strong>。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132130033.png\" alt=\"\"></p>\n<h1 id=\"获得ip地址\"><a class=\"markdownIt-Anchor\" href=\"#获得ip地址\">#</a> 获得 ip 地址</h1>\n<p>手工配置</p>\n<p>DHCP: 动态主机配置协议：从服务器上动态获取 IP 地址</p>\n<ul>\n<li>工作在应用层</li>\n<li>使用 UDP 协议工作</li>\n<li>DHCP 有 3 个端口</li>\n<li>67 和 68 为正常的 DHCP 服务端口，分别作为 DHCP Server 和 DHCP Client 的服务端口</li>\n<li>546 号端口用于 DHCPv6 Client，而不用于 DHCPv4，是为 DHCP failover 服务，这是需要特别开启的服务，DHCP failover 是用来做 “双机热备” 的</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132135450.png\" alt=\"\"></p>\n<h1 id=\"icmp协议\"><a class=\"markdownIt-Anchor\" href=\"#icmp协议\">#</a> ICMP 协议</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140757622.png\" alt=\"\"></p>\n<h1 id=\"nat\"><a class=\"markdownIt-Anchor\" href=\"#nat\">#</a> NAT</h1>\n<p>动机：本地网络只要使用<strong>一个 IP 地址</strong>就可以和外部网络相连 :</p>\n<ul>\n<li>\n<p>不需要从 ISP 处获得大批 IP 地址：所有设备可以使用<strong>同一个 IP 地址</strong></p>\n</li>\n<li>\n<p>可以在不通知外部网络的情况下改变内网主机的 IP 地址</p>\n</li>\n<li>\n<p>即使改变了 ISP 也无须改变内网主机的 IP 地址</p>\n</li>\n<li>\n<p>内网主机对外网主机而言是不可见的、不可寻址的。(这也算是一项安全措施).</p>\n</li>\n</ul>\n<p>三种地址转换方式</p>\n<ul>\n<li>\n<p>静态 NAT：一个本地地址对应一个全球地址</p>\n</li>\n<li>\n<p>动态 NAT：一个全球地址对应多个本地地址</p>\n</li>\n<li>\n<p>端口 NAT：一个本地地址的端口对应到一个全球地址的端口</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140819564.png\" alt=\"\"></p>\n<h1 id=\"选路算法\"><a class=\"markdownIt-Anchor\" href=\"#选路算法\">#</a> 选路算法</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140843643.png\" alt=\"\"></p>\n<h2 id=\"路由信息协议rip\"><a class=\"markdownIt-Anchor\" href=\"#路由信息协议rip\">#</a> 路由信息协议 RIP</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140824352.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140825681.png\" alt=\"\"></p>\n<blockquote>\n<p>RIP 路由器更新规则</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140825568.png\" alt=\"\"></p>\n<blockquote>\n<p>RIP 协议中，距离 16 表示不可达</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140826283.png\" alt=\"\"></p>\n<blockquote>\n<p>坏消息传的慢</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140827705.png\" alt=\"\"></p>\n<h2 id=\"开放最短路优先ospf\"><a class=\"markdownIt-Anchor\" href=\"#开放最短路优先ospf\">#</a> 开放最短路优先 OSPF</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140831734.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140832764.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140832541.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140836018.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140832664.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140834167.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140835313.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140836785.png\" alt=\"\"></p>\n<h2 id=\"外部网关协议bgp\"><a class=\"markdownIt-Anchor\" href=\"#外部网关协议bgp\">#</a> 外部网关协议 BGP</h2>\n<p>因特网上的 AS 间路由 ——BGP4</p>\n<ul>\n<li>\n<p>因特网的规模太大，使得自治系统之间路由选择非常困难。对于自治系统之间的路由选择，要寻找最佳路由是很不现实的。自治系统之间的路由选择必须考虑有关策略</p>\n</li>\n<li>\n<p>BGP 为每个 AS 提供一种手段，以处理</p>\n<ul>\n<li><strong>eBGP</strong>: 从相邻 AS 获取子网可达性信息</li>\n<li><strong>iBGP</strong>: 向该 AS 内部的所有路由器传播这些可达性信息</li>\n</ul>\n</li>\n<li>\n<p>基于该可达性信息和 AS 策略，决定到达子网的 “好” 路由</p>\n<ul>\n<li>边界网关协议 BGP 只能是力求寻找一条能够到达目的网络且<strong>比较好</strong>的路由（不能兜圈子），而并非要寻找一条最佳路由</li>\n</ul>\n</li>\n</ul>\n<p>BGP 会话：两个 BGP 路由器间通过半永久的<strong> TCP</strong> 连接来交换 BGP 消息</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140842520.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140842052.png\" alt=\"\"></p>\n",
            "tags": [
                "计网"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/10/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E5%BA%94%E7%94%A8%E5%B1%82/",
            "url": "http://www.luckycyyyy.top/2024/10/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E5%BA%94%E7%94%A8%E5%B1%82/",
            "title": "应用层",
            "date_published": "2024-10-18T06:54:14.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"应用层协议原理\"><a class=\"markdownIt-Anchor\" href=\"#应用层协议原理\">#</a> 应用层协议原理</h1>\n<h2 id=\"网络应用的架构\"><a class=\"markdownIt-Anchor\" href=\"#网络应用的架构\">#</a> 网络应用的架构</h2>\n<p><strong>客户端 / 服务器（Client/Server，C/S)</strong></p>\n<p>服务器：</p>\n<ul>\n<li>\n<p>总是打开</p>\n</li>\n<li>\n<p>拥有一个固定的地址</p>\n</li>\n<li>\n<p>缩放的数据中心</p>\n</li>\n</ul>\n<p>客户端：</p>\n<ul>\n<li>与服务器通信</li>\n<li>可能是间歇性连接</li>\n<li>可能有动态的 IP 地址</li>\n<li>客户端之间不能相互通信</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170837220.png\" alt=\"\"></p>\n<p><strong>对等网（Peer-to-Peer，P2P）</strong></p>\n<ul>\n<li>不一定总在线</li>\n<li>结点之间可以直接通信</li>\n<li>结点的地址以及他们之间的连接可能随时发生变化</li>\n<li>任何一方既提供服务又享受服务，自扩展：新的节点带来新的服务能力，同时也带来新的服务需求</li>\n<li>节点之间是间歇性连接、地址也是变化的</li>\n<li>管理非常复杂</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170838469.png\" alt=\"\"></p>\n<p><strong>混合体系结构</strong>： C/S+P2P</p>\n<h2 id=\"安全性\"><a class=\"markdownIt-Anchor\" href=\"#安全性\">#</a> 安全性</h2>\n<ul>\n<li>\n<p>TCP/UDP 天生不具备安全性</p>\n</li>\n<li>\n<p>安全套接字层 SSL</p>\n<ul>\n<li>提供加密的 TCP 连接</li>\n<li>数据的完整性检查</li>\n<li>端点身份鉴别</li>\n<li>SSL 位于应用层与 TCP 之间</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"web和http\"><a class=\"markdownIt-Anchor\" href=\"#web和http\">#</a> WEB 和 HTTP</h1>\n<h2 id=\"web的构成\"><a class=\"markdownIt-Anchor\" href=\"#web的构成\">#</a> WEB 的构成</h2>\n<blockquote>\n<p>WEB 属于 C/S 模式</p>\n</blockquote>\n<p><strong>WEB 服务器</strong>：IIS、Apache、TomCat……</p>\n<p><strong>浏览器</strong>：IE、Maxthon、Firefox</p>\n<p><strong>协议</strong></p>\n<ul>\n<li>信息<strong>表达</strong>的协议 ——HTML</li>\n<li>信息<strong>传输</strong>的协议 ——HTTP</li>\n</ul>\n<h2 id=\"http\"><a class=\"markdownIt-Anchor\" href=\"#http\">#</a> HTTP</h2>\n<h3 id=\"客户端服务器模式\"><a class=\"markdownIt-Anchor\" href=\"#客户端服务器模式\">#</a> 客户端 / 服务器模式</h3>\n<p><strong>客户端:</strong> 浏览器<strong>请求、接收、展示</strong> Web 对象</p>\n<p><strong>服务器</strong>: Web 服务器发送对象对请求进行<strong>响应</strong></p>\n<h3 id=\"tcp-传输服务\"><a class=\"markdownIt-Anchor\" href=\"#tcp-传输服务\">#</a> TCP 传输服务</h3>\n<p>客户端启动 TCP 连接 (创建套接字) 到服务器，端口 <strong>80</strong></p>\n<p>服务器接受来自客户端的 TCP 连接</p>\n<ul>\n<li>\n<p>http 报文 (应用层协议报文) 在浏览器 (http client) 和 Web 服务器 (http server) 之间进行交换</p>\n</li>\n<li>\n<p>关闭 TCP 连接</p>\n</li>\n</ul>\n<p>HTTP 是 “<strong>无状态有连接</strong> &quot; 的，服务器<strong>不保留</strong>任何访问过的请求信息</p>\n<h3 id=\"http连接\"><a class=\"markdownIt-Anchor\" href=\"#http连接\">#</a> HTTP 连接</h3>\n<p><strong>非持续 HTTP</strong></p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182105298.png\" style=\"zoom:67%;\" />\n<p>总时间 = 2RTT + 文件传输时间</p>\n<ul>\n<li>\n<p>通过 TCP 连接最多发送一个对象</p>\n</li>\n<li>\n<p>连接然后被关闭</p>\n</li>\n<li>\n<p>下载多个对象需要建立多个连接</p>\n</li>\n</ul>\n<p><strong>持续 HTTP</strong></p>\n<ul>\n<li>客户端和服务器之间的单个 TCP 连接上可以发送<strong>多个</strong>对象</li>\n<li>服务器在发送响应后，<strong>不再断开 TCP 连接</strong>，而是保持该连接，用于后续对象的传送，直至该连接 “休息” 了一个较长的时间后，方断开该连接</li>\n<li>减少了对服务器端连接数的需要，从而减少了对服务器端套接字资源的占用，提高了服务器的负载能力</li>\n<li>持久连接又可以分为\n<ol>\n<li><strong>非流水线</strong>方式：一个<strong>对象传输完成</strong>方能传输下一个</li>\n<li><strong>流水线</strong>方式：可以<strong>一次性发送所有请求</strong>，慢慢接收</li>\n</ol>\n</li>\n</ul>\n<p><strong>HTTP 请求报文</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170854337.png\" alt=\"\"></p>\n<p><strong>HTTP 响应报文</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170854380.png\" alt=\"\"></p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170855360.png\" style=\"zoom: 67%;\" />\n<h1 id=\"用户-服务器交互cookie\"><a class=\"markdownIt-Anchor\" href=\"#用户-服务器交互cookie\">#</a> 用户 - 服务器交互：Cookie</h1>\n<p><strong>Cookie</strong> 是一种由服务器生成并存储在用户浏览器中的小型文本文件，用于在客户端和服务器之间保存状态信息。它主要用于以下几种场景：</p>\n<p><strong>Cookie 的主要用途</strong></p>\n<ol>\n<li><strong>会话管理</strong>\n<ul>\n<li>例如用户登录状态、购物车信息、游戏进度等。</li>\n<li>当用户访问网站时，服务器可以通过 Cookie 识别用户是否已经登录，或者存储用户的偏好设置。</li>\n</ul>\n</li>\n<li><strong>个性化设置</strong>\n<ul>\n<li>网站可以通过 Cookie 存储用户的语言偏好、主题选择等，使用户获得更符合个人习惯的浏览体验。</li>\n</ul>\n</li>\n<li><strong>跟踪与分析</strong>\n<ul>\n<li>Cookie 被用来记录用户在网站上的行为，例如访问的页面、点击的内容等。这对广告投放和数据分析非常重要。</li>\n</ul>\n</li>\n</ol>\n<p><strong>Cookie 技术的组成部分:</strong></p>\n<ul>\n<li>\n<p>在 HTTP 响应报文中有一个 Cookie 首部行</p>\n</li>\n<li>\n<p>在 HTTP 请求报文中也有一个 Cookie 首部行</p>\n</li>\n<li>\n<p>在用户的端系统中保留了一个 Cookie 文件，由用户浏览器负责管理</p>\n</li>\n<li>\n<p>在 Web 站点有一个后端数据库</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170859642.png\" alt=\"\"></p>\n<h1 id=\"文件传输协议ftp\"><a class=\"markdownIt-Anchor\" href=\"#文件传输协议ftp\">#</a> 文件传输协议：FTP</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171002874.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170958896.png\" alt=\"\"></p>\n<p>习题：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170957442.png\" alt=\"\"></p>\n<h1 id=\"电子邮件\"><a class=\"markdownIt-Anchor\" href=\"#电子邮件\">#</a> 电子邮件</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171021688.png\" alt=\"\"></p>\n<h2 id=\"实现过程\"><a class=\"markdownIt-Anchor\" href=\"#实现过程\">#</a> 实现过程</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171004259.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171005173.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171007958.png\" alt=\"\"></p>\n<p>习题：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171023889.png\" alt=\"\"></p>\n<h2 id=\"邮件格式\"><a class=\"markdownIt-Anchor\" href=\"#邮件格式\">#</a> 邮件格式</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171022811.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171019582.png\" alt=\"\"></p>\n<h2 id=\"邮件读取格式\"><a class=\"markdownIt-Anchor\" href=\"#邮件读取格式\">#</a> 邮件读取格式</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171022358.png\" alt=\"\"></p>\n<h2 id=\"基于万维网的电子邮件\"><a class=\"markdownIt-Anchor\" href=\"#基于万维网的电子邮件\">#</a> 基于万维网的电子邮件</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171023126.png\" alt=\"\"></p>\n<h1 id=\"dns\"><a class=\"markdownIt-Anchor\" href=\"#dns\">#</a> DNS</h1>\n<h2 id=\"简况\"><a class=\"markdownIt-Anchor\" href=\"#简况\">#</a> 简况</h2>\n<ul>\n<li>\n<p>DNS 是一个分布式数据库，由很多台 DNS 服务器按照层次结构组织起来</p>\n</li>\n<li>\n<p>DNS 运行在端到端系统上，且使用 UDP 协议（53 号端口）进行报文传输，因此 DNS 是应用层协议</p>\n</li>\n<li>\n<p>DNS 以 C/S 的模式工作</p>\n</li>\n<li>\n<p>DNS 不直接和用户打交道，而是因特网的核心功能</p>\n</li>\n</ul>\n<h2 id=\"结构\"><a class=\"markdownIt-Anchor\" href=\"#结构\">#</a> 结构</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171053144.png\" alt=\"\"></p>\n<p><strong>根 DNS 服务器</strong>：如果域名映射未知，则向授权域名服务器查询；取得映射；将映射返回本地域名服务器</p>\n<p><strong>顶级域 DNS 服务器</strong>：负责顶级域名和所有国家的顶级域名解析工作，例如：com, org, net, gov, uk, cn, jp 等</p>\n<p><strong>权威 DNS 服务器</strong>：属于某个组织的 DNS 服务器，为组织的服务器提供一个权威的域名到 IP 地址的映射服务 (例如：Web 和 mail)</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171056288.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171056669.png\" alt=\"\"></p>\n<h2 id=\"域名解析过程\"><a class=\"markdownIt-Anchor\" href=\"#域名解析过程\">#</a> 域名解析过程</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171057358.png\" alt=\"\"></p>\n<h2 id=\"dns缓存\"><a class=\"markdownIt-Anchor\" href=\"#dns缓存\">#</a> DNS 缓存</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171058954.png\" alt=\"\"></p>\n<p>习题：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171058034.png\" alt=\"\"></p>\n<h2 id=\"dns提供服务\"><a class=\"markdownIt-Anchor\" href=\"#dns提供服务\">#</a> DNS 提供服务</h2>\n<ul>\n<li>域名到 IP 地址的转换</li>\n<li>主机 / 邮件服务器别名：为不好记的规范主机 / 邮件服务器名提供一个易记的别名 e.g. <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ob3RtYWlsLmNvbQ==\">www.hotmail.com</span> -&gt; <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ob3RtYWlsLmFhdGUubnNhdGMubmV0\">www.hotmail.aate.nsatc.net</span></li>\n<li>负载均衡\n<ul>\n<li>一个域名对应多个 IP</li>\n<li>DNS 服务器在多个 IP 中进行轮转</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171100551.png\" alt=\"\"></p>\n<h1 id=\"p2p文件共享\"><a class=\"markdownIt-Anchor\" href=\"#p2p文件共享\">#</a> P2P 文件共享</h1>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171105425.png\" style=\"zoom:67%;\" />",
            "tags": [
                "计网"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/10/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E8%BF%90%E8%BE%93%E5%B1%82/",
            "url": "http://www.luckycyyyy.top/2024/10/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E8%BF%90%E8%BE%93%E5%B1%82/",
            "title": "运输层",
            "date_published": "2024-10-11T04:48:23.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"概述运输层服务\"><a class=\"markdownIt-Anchor\" href=\"#概述运输层服务\">#</a> 概述运输层服务</h1>\n<p>运输层为运行在<strong>不同</strong>主机上的<strong>应用进程</strong>提供直接的通信服务。</p>\n<p>运输层协议是在<strong>端系统</strong>中而不是在路由器中实现的。具体实现过程如下：</p>\n<ol>\n<li>\n<p><strong>发送端</strong>：运输层将从发送应用程序进程接收到的报文转换成运输层分组，即运输层报文段（先将应用报文划分成小块，再加上运输层首部）。运输层将这些报文段发送给网络层，网络层将其封装成网络分组（即数据报）并向目的地发送。<strong>网络路由器</strong>只作用于数据报的<strong>网络层字段</strong>，而<strong>不</strong>检查封装在该数据报运输层报文段的字段。</p>\n</li>\n<li>\n<p><strong>接收端</strong>：网络层从数据报中提取运输层报文段并将该报文段向上交给运输层。</p>\n</li>\n</ol>\n<h2 id=\"运输层和网络层的关系\"><a class=\"markdownIt-Anchor\" href=\"#运输层和网络层的关系\">#</a> 运输层和网络层的关系</h2>\n<p>网络层提供<strong>主机</strong>间的逻辑通信，运输层为运行在<strong>不同主机上的进程</strong>之间提供逻辑通信。</p>\n<p>在端系统中运输层协议将来自应用进程的报文<strong>移动到网络边缘</strong>（即网络层）。</p>\n<p>计算机网络中可以安排多种运输层协议，每种协议为应用程序提供<strong>不同</strong>的服务模型。</p>\n<p>运输层协议能够提供的服务尝尝<strong>受制于</strong>底层网络层协议的服务模型。</p>\n<p>即使网络层不能保证运输层报文段的机密性，运输协议也能使用加密来确保应用程序报文不被入侵者读取。</p>\n<h2 id=\"运输层概述\"><a class=\"markdownIt-Anchor\" href=\"#运输层概述\">#</a> 运输层概述</h2>\n<p>UDP（用户数据报协议）：提供不可靠、无连接的服务，只能提供数据交付和差错检查。</p>\n<p>TCP（传输控制协议）：提供可靠的、面向连接的服务。</p>\n<h1 id=\"多路复用与多路分解\"><a class=\"markdownIt-Anchor\" href=\"#多路复用与多路分解\">#</a> 多路复用与多路分解</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191132567.png\" alt=\"\"></p>\n<p>一个进程有一个或多个套接字（ip + 端口号），接收主机怎样将一个到达的运输层报文段定向到适当的套接字？</p>\n<p><strong>多路分解</strong>：在接收端，运输层检查这些字段，标识出接收套接字，进而将报文段定向到该套接字。将运输层报文段中的数据交付到正确的套接字的工作称为多路分解。</p>\n<p><strong>多路复用</strong>：在源主机从不同套接字中收集数据块，并为每个数据块封装上首部信息从而生成报文段，然后将报文段传递到网络层，这所有的工作称为多路复用。</p>\n<p>运输层报文段的结构：</p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111333486.png\" style=\"zoom: 50%;\" />\n<p>应用程序的客户端让运输层自动地分配端口号，服务器端则分配一个特定的端口号。</p>\n<p>UDP 套接字由一个<strong>二元组</strong>全面标识，该二元组包含一个目的 ip 和一个目的端口号。</p>\n<p>TCP 套接字由一个<strong>四元组</strong>全面标识，该四元组包含源 ip 地址、源端口号、目的 ip 地址、目的端口号。</p>\n<h1 id=\"udp和tcp对比\"><a class=\"markdownIt-Anchor\" href=\"#udp和tcp对比\">#</a> UDP 和 TCP 对比</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191146630.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191148024.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191149976.png\" alt=\"\"></p>\n<h1 id=\"无连接运输udp\"><a class=\"markdownIt-Anchor\" href=\"#无连接运输udp\">#</a> 无连接运输：UDP</h1>\n<p><strong>UDP 优点：</strong></p>\n<ol>\n<li>关于发送什么数据以及何时发送的应用层控制更为精细（没有拥塞控制机制），按需随时发送。</li>\n<li>无需建立连接，不会引入建立连接的时延。</li>\n<li>无连接状态，TCP 维护连接状态需要维护包括接收和发送缓存、拥塞控制参数、序号与确认号的参数，而 UDP 不需要，因此当应用程序运行在 UDP 上，某些专门用于某种特定应用的服务器一般都能支持更多的活跃用户。</li>\n<li>首部开销小。UDP：8Byte，TCP：20Byte</li>\n</ol>\n<p>但是因为 UDP 没有拥塞控制，所以如果网络进入拥塞状态，UDP 的<strong>高丢包率</strong>会引起<strong> TCP</strong> 的发送方大大<strong>减小</strong>它们的<strong>速率</strong>。</p>\n<p><strong>采用 UDP 的应用：</strong></p>\n<ol>\n<li>远程文件服务器（NFS）</li>\n<li>流式多媒体</li>\n<li>因特网电话</li>\n<li>网络管理（SNMP）</li>\n<li>选路协议（RIP）</li>\n<li>域名解析（NDS）</li>\n</ol>\n<p><strong>UDP 报文段：</strong></p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111413149.jpg\" style=\"zoom: 25%;\" />\n<p>UDP 首部有 4 个字段，每个字段由两个字节组成。</p>\n<p>长度：首部 + 数据。</p>\n<p>接收方通过检验和检查该报文段是否出现问题。</p>\n<p><strong>UDP 检验和</strong>：</p>\n<ol>\n<li>将报文段切成 16bit 的数据</li>\n<li>对报文段中所有 16 比特字的和进行反码运算，求和时任何溢出都被回卷（进的位回到个位）</li>\n<li>因为原码 + 反码 = 全 1，所以检查是否为全 1 即可</li>\n</ol>\n<h1 id=\"可靠数据传输原理\"><a class=\"markdownIt-Anchor\" href=\"#可靠数据传输原理\">#</a> 可靠数据传输原理</h1>\n<blockquote>\n<p>rdt1.0~rdt3.0 都使用停等协议</p>\n<p>停等协议：发送方发送数据后等待接收方的响应</p>\n</blockquote>\n<h2 id=\"经完全可靠的信道的可靠信息传输rdt10\"><a class=\"markdownIt-Anchor\" href=\"#经完全可靠的信道的可靠信息传输rdt10\">#</a> 经完全可靠的信道的可靠信息传输：rdt1.0</h2>\n<p>底层信道完全可靠。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111431075.png\" alt=\"\"></p>\n<p>有限状态机（FSM）</p>\n<p>因为底层信道完全可靠，所以接收方不需要反馈信息给发送方。</p>\n<h2 id=\"经具有比特差错信道的可靠数据传输rdt2x\"><a class=\"markdownIt-Anchor\" href=\"#经具有比特差错信道的可靠数据传输rdt2x\">#</a> 经具有比特差错信道的可靠数据传输：rdt2.x</h2>\n<blockquote>\n<p>2.x 解决了流控问题</p>\n</blockquote>\n<p>底层信道分组中的比特可能受损。</p>\n<h3 id=\"20-发送的数据受损\"><a class=\"markdownIt-Anchor\" href=\"#20-发送的数据受损\">#</a> 2.0 发送的数据受损</h3>\n<p>采用自动重传请求协议（ARQ），进行差错检测、接收方反馈（ACK/NAK）、重传</p>\n<p>重传：使用缓冲区缓存已发出但未收到反馈的报文段</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111441861.png\" alt=\"\"></p>\n<h3 id=\"21-acknak受损\"><a class=\"markdownIt-Anchor\" href=\"#21-acknak受损\">#</a> 2.1 ACK/NAK 受损</h3>\n<p>发送方不知道接收方的情况，只能重传。</p>\n<p>但是可能导致接收方的重复接收，那么接收方怎么知道收到的分组是新的还是一次重传？于是引入分组编号。</p>\n<p>因为只有两种状态：新的分组或者重传，所以只需要编号 0 和 1。如果收到的分组和上一次收到的分组编号一致，说明是一次重传</p>\n<h3 id=\"22-使用一个无nak的可靠数据传输协议\"><a class=\"markdownIt-Anchor\" href=\"#22-使用一个无nak的可靠数据传输协议\">#</a> 2.2 使用一个无 NAK 的可靠数据传输协议</h3>\n<p><strong>重复的 ACK = NAK</strong>：不发送 NAK，而是对上次正确接收的分组发送一个 ACK；即当发送方接收到冗余的 ACK，就知道接收方没有正确接收到跟在被确认两次的分组后的分组。</p>\n<h2 id=\"经具有比特差错的丢包信道的可靠数据传输rdt30\"><a class=\"markdownIt-Anchor\" href=\"#经具有比特差错的丢包信道的可靠数据传输rdt30\">#</a> 经具有比特差错的丢包信道的可靠数据传输：rdt3.0</h2>\n<p>除了比特受损外，底层信道还会丢包。</p>\n<p>设置倒计数定时器，面对超时的数据进行重传。如果数据本身未丢失只是超时了，就会导致冗余数据分组，直接忽略即可。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111509160.jpg\" alt=\"\"></p>\n<h2 id=\"流水线可靠数据传输协议\"><a class=\"markdownIt-Anchor\" href=\"#流水线可靠数据传输协议\">#</a> 流水线可靠数据传输协议</h2>\n<p>因为 rdt3.0 使用的是停等协议，所以效率较低，于是使用流水线技术。</p>\n<p>允许发送方发送多个分组并无需等待确认</p>\n<ol>\n<li>原本的两个序号（0,1）不够用，必须增大序号范围</li>\n<li>发送方最低限度应能缓存那些已发送但未被确认的分组</li>\n<li>接收方需缓存那些已经正确接收的分组</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111519103.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111522171.png\" alt=\"\"></p>\n<p>当流水线技术中丢失一个分组，差错恢复有两种方法：<strong>回退 N 步</strong>和<strong>选择重传</strong>。</p>\n<h3 id=\"回退n步协议gbn\"><a class=\"markdownIt-Anchor\" href=\"#回退n步协议gbn\">#</a> 回退 N 步协议（GBN）</h3>\n<p><strong>累计确认 ACK (n)</strong>：接收方对序号 n 之前包括 n 在内的所有分组进行确认</p>\n<p><strong>超时事件</strong>：发送方重传所有已发送但未被确认的分组，发送方只使用一个定时器，如果收到一个 ACK 但是仍有已发送但未被确认的分组，则定时器被重新启动。</p>\n<p><strong>分组失序</strong>：接收方无缓存，所以直接丢弃，重发按序到达的最高序号后面的分组</p>\n<p><strong>滑动窗口大小</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mrow><mtext>发送端</mtext><mo>≤</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn><mtext>，接收端</mtext><mo>=</mo><mn>1</mn></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{发送端\\leq 2^{k}-1，接收端=1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.985078em;vertical-align:-0.13597em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord cjk_fallback\" style=\"color:red;\">发</span><span class=\"mord cjk_fallback\" style=\"color:red;\">送</span><span class=\"mord cjk_fallback\" style=\"color:red;\">端</span><span class=\"mspace\" style=\"color:red;margin-right:0.2777777777777778em;\"></span><span class=\"mrel\" style=\"color:red;\">≤</span><span class=\"mspace\" style=\"color:red;margin-right:0.2777777777777778em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord\" style=\"color:red;\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;color:red;\">k</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"color:red;margin-right:0.2222222222222222em;\"></span><span class=\"mbin\" style=\"color:red;\">−</span><span class=\"mspace\" style=\"color:red;margin-right:0.2222222222222222em;\"></span><span class=\"mord\" style=\"color:red;\">1</span><span class=\"mord cjk_fallback\" style=\"color:red;\">，</span><span class=\"mord cjk_fallback\" style=\"color:red;\">接</span><span class=\"mord cjk_fallback\" style=\"color:red;\">收</span><span class=\"mord cjk_fallback\" style=\"color:red;\">端</span><span class=\"mspace\" style=\"color:red;margin-right:0.2777777777777778em;\"></span><span class=\"mrel\" style=\"color:red;\">=</span><span class=\"mspace\" style=\"color:red;margin-right:0.2777777777777778em;\"></span><span class=\"mord\" style=\"color:red;\">1</span></span></span></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191437793.png\" alt=\"\"></p>\n<h3 id=\"选择重传sr\"><a class=\"markdownIt-Anchor\" href=\"#选择重传sr\">#</a> 选择重传（SR）</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191444933.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191448175.png\" alt=\"\"></p>\n<p><strong>发送方</strong>：</p>\n<ol>\n<li>从上层收到数据：如果下一个可用于该分组的序号在窗口内，则将数据打包并发送。</li>\n<li>超时（n）：为每个分组定义定时器；重传分组 n，重置定时器</li>\n<li>收到确认（n）在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>s</mi><mi>e</mi><mi>n</mi><mi>d</mi><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>e</mi><mi>n</mi><mi>d</mi><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>+</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[sendbase,sendbase+N-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 范围内：标记分组 n 为已接收，如果 n 是发送方窗口基序号 sendbase，则将窗口基序号推到下一个未确认序号</li>\n</ol>\n<p><strong>接收方</strong>：</p>\n<ol>\n<li>分组序号 n 在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>r</mi><mi>c</mi><mi>v</mi><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>c</mi><mi>v</mi><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mo>+</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[rcvbase,rcvbase+N-1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 范围内\n<ul>\n<li>发送 n 的确认 ACK（n）</li>\n<li>如果分组序号失序，将其缓存</li>\n<li>按序分组：将该分组以及以前的缓存的序号连续的分组一起交付给上层，将窗口前推到下一个未收到的分组。</li>\n<li>再次发送 n 的确认 ACK</li>\n</ul>\n</li>\n<li>其他情况，忽略该分组</li>\n</ol>\n<p>接收方窗口 **<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\leq 2^{k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>**，即窗口的长度必须小于等于序号空间大小的一半</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410120031874.png\" alt=\"\"></p>\n<h1 id=\"面向连接的运输tcp\"><a class=\"markdownIt-Anchor\" href=\"#面向连接的运输tcp\">#</a> 面向连接的运输：TCP</h1>\n<h2 id=\"tcp的特点\"><a class=\"markdownIt-Anchor\" href=\"#tcp的特点\">#</a> TCP 的特点</h2>\n<p><strong>面向连接</strong>：必须相互发送某些预备报文段，以建立确保数据传输的参数。</p>\n<p><strong>全双工服务</strong>：可双向同时传输数据。</p>\n<p><strong>点对点连接</strong>：仅能存在于两个端系统之间。</p>\n<p><strong>三次握手</strong>：客户端先发送一个特殊的 TCP 报文段，服务器用一个特殊的报文段进行响应，这两个报文段都不含应用层数据；最后客户端用第三个特殊报文段作为响应，第三个报文段可以承载有效数据。</p>\n<p><strong>可靠的字节流</strong>：TCP 可以从缓存中取出并放入报文段中的数据数量受限于最大报文段长度 MSS，MSS 由本地发送主机发送的最大链路层帧长度【即最大运输单元 MTU】设置。MSS 要保证加上 TCP/IP 首部长度（通常是 40 字节）将适合单个链路层帧。</p>\n<p>注意：MSS 是指报文段中<strong>应用层数据的最大长度</strong>，而<strong>不是</strong>指包括首部的 TCP 报文段的最大长度。</p>\n<h2 id=\"tcp报文段结构\"><a class=\"markdownIt-Anchor\" href=\"#tcp报文段结构\">#</a> TCP 报文段结构</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410141051586.png\" alt=\"\"></p>\n<p><strong>源端口和目的端口</strong>：各占 2 字节，端口是应用层和运输层的服务端口。运输层的复用和分解都需要通过端口实现。</p>\n<p><strong>序号</strong>：占 4 字节，TCP 连接中传输的数据流的每一个字节都有一个序号，序号字段的值指的是本报文段所发送的数据的第一个字节在整个报文字节流中的序号。</p>\n<p><strong>确认号</strong>：占 4 字节，是期望收到对方的下一个报文段的数据段的第一个字节的序号。</p>\n<p><strong>首部长度</strong>：占 4bit，该字段指示了以 32bit 的字为单位的 TCP 首部长度。（通常选项字段为空，TCP 首部典型长度是 20 字节）</p>\n<p><strong>保留字段</strong>：占 6bit，保留为今后使用，但目前应置为 0。</p>\n<p><strong>URG</strong>：紧急比特，UGR=1 表明此报文段中有紧急数据，应尽快送达。</p>\n<p><strong>ACK</strong>：确认 ACK，只有当 ACK=1 时确认号字段才有效；ACK=0 时，确认号无效。</p>\n<p><strong>PSH</strong>：接收到 PSH=1 的报文段，就尽快交付给接收应用进程，而不再等到整个缓存都填满再向上交付。</p>\n<p><strong>RST</strong>：当 RST=1 时，表名 TCP 连接中出现严重差错，必须释放连接，然后再重新建立运输链接。</p>\n<p><strong>SYN</strong>：同步比特，SYN=1，这是一个连接请求或连接接收的报文。</p>\n<p><strong>FIN</strong>：释放一个链接，当 FIN=1，此报文段的发送端的数据已经发送完毕，并要求释放运输链接。</p>\n<p><strong>窗口</strong>：占 2 字节，窗口字段用来控制对方发送的数据量，单位为字节。</p>\n<p><strong>检验和</strong>：占 2 字节，检验范围包括首部和数据两部分，计算时要在 TCP 报文段的前面加上 12 字节的伪首部。</p>\n<p><strong>紧急指针</strong>：占 2 字节，指出本报文段中紧急数据的最后一个字节的序号。</p>\n<p><strong>填充</strong>：为了使整个首部的长度是 4 字节的整数倍。</p>\n<h2 id=\"估计往返时间rtt\"><a class=\"markdownIt-Anchor\" href=\"#估计往返时间rtt\">#</a> 估计往返时间 RTT</h2>\n<p>在任意时刻，仅为一个已发送但目前尚未被确定的报文段估计 SampleRTT，从而产生一个接近每个 RTT 的新的 SampleRTT。</p>\n<p>TCP 不为已被重传的报文段计算 SampleRTT。</p>\n<p>因为 RTT 有波动，所以利用加权平均值计算 EstimatedRTT</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>=</mo><mn>0.875</mn><mo>∗</mo><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><mn>0.125</mn><mo>∗</mo><mi>S</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>R</mi><mi>T</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">EstimatedRTT=0.875*EstimatedRTT+0.125*SampleRTT\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">8</span><span class=\"mord\">7</span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></p>\n<p>估算 SampleRTT 偏离 EstimatedRTT 的程度：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>v</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>D</mi><mi>e</mi><mi>v</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><mi>β</mi><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mi>S</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>−</mo><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mi mathvariant=\"normal\">∣</mi><mo separator=\"true\">,</mo><mi>β</mi><mtext>推荐值为</mtext><mn>0.25</mn></mrow><annotation encoding=\"application/x-tex\">DevRTT=(1-\\beta)\\cdot DevRTT+\\beta\\cdot|SampleRTT-EstimatedRTT|,\\beta推荐值为0.25\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\">∣</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord cjk_fallback\">推</span><span class=\"mord cjk_fallback\">荐</span><span class=\"mord cjk_fallback\">值</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">2</span><span class=\"mord\">5</span></span></span></span></span></p>\n<p>第一次计算时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mi>e</mi><mi>v</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>=</mo><mn>0.5</mn><mo>∗</mo><mi>S</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>R</mi><mi>T</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">DevRTT=0.5*SampleRTT</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></p>\n<p>TCP 中确定重传超时间隔的方法：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>T</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>o</mi><mi>u</mi><mi>t</mi><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>v</mi><mi>a</mi><mi>l</mi><mo>=</mo><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><mn>4</mn><mo>⋅</mo><mi>D</mi><mi>e</mi><mi>v</mi><mi>R</mi><mi>T</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">TimeoutInterval=EstimatedRTT+4\\cdot DevRTT\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></p>\n<p>推荐初始的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>o</mi><mi>u</mi><mi>t</mi><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>v</mi><mi>a</mi><mi>l</mi><mo>=</mo><mn>1</mn><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">TimeoutInterval = 1s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">s</span></span></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191411344.png\" alt=\"\"></p>\n<p>出现超时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>T</mi><mi>O</mi><mo>∗</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">RTO*2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span></p>\n<h2 id=\"可靠数据传输\"><a class=\"markdownIt-Anchor\" href=\"#可靠数据传输\">#</a> 可靠数据传输</h2>\n<p>TCP 使用<strong>单一定时器</strong>。</p>\n<p>从上面应用程序收到数据 e：如果当前定时器没有运行，启动定时器并向 IP 传递报文段。</p>\n<p>定时器超时：重传具有最小序号但仍未应答的报文段并启动定时器。</p>\n<p>收到 ACK，具有 ACK 字段值 y：如果 <code>y &gt; SendBase</code> ，重置 <code>Sendbase = y</code> ，如果仍有尚未确认的报文段，启动定时器。</p>\n<p>（SendBase 是最早未被确认的字节的序号，SendBase - 1 是指接收方已正确按序接收到的数据的最后一个字节的序号）</p>\n<p><strong>超时间隔加倍</strong>：每次超时时间发生，TCP 重传时都会将下一次的超时时间间隔设为先前的两倍。</p>\n<p><strong>快速重传</strong>：当 TCP 接收方检测到了数据流中的一个间隔，就会不断重发它期望的这个 ACK，当冗余 ACK 的数量达到 3 的时候，就采用快速重传机制，在超时之前就重传该分组。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410141803966.png\" alt=\"\"></p>\n<h2 id=\"流量控制\"><a class=\"markdownIt-Anchor\" href=\"#流量控制\">#</a> 流量控制</h2>\n<p>接收方在反馈时，将缓冲区剩余空间的大小填充在报文段首部的窗口字段中，通知发送方</p>\n<p>主机 A 向主机 B 发送文件，主机 B 接收缓存的大小是 RcvBuffer；主机 B 上的应用进程从缓存读出的数据流的最后一个字节的编号是 LastByteRead；从网络中到达的并且已放入主机 B 接收缓存中的数据流的最后一个字节的编号。</p>\n<p>接收窗口的大小：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>w</mi><mi>n</mi><mi>d</mi><mo>=</mo><mi>R</mi><mi>c</mi><mi>v</mi><mi>B</mi><mi>u</mi><mi>f</mi><mi>f</mi><mi>e</mi><mi>r</mi><mo>−</mo><mo stretchy=\"false\">(</mo><mi>L</mi><mi>a</mi><mi>s</mi><mi>t</mi><mi>B</mi><mi>y</mi><mi>t</mi><mi>e</mi><mi>R</mi><mi>e</mi><mi>a</mi><mi>d</mi><mo>−</mo><mi>L</mi><mi>a</mi><mi>s</mi><mi>t</mi><mi>B</mi><mi>y</mi><mi>t</mi><mi>e</mi><mi>R</mi><mi>e</mi><mi>a</mi><mi>d</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">rwnd = RcvBuffer - (LastByteRead - LastByteRead)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>为让发送方在接收方的缓存满了之后可以及时了解什么时候又有新的空间，发送方持续向接收方发送只有<strong>一字节</strong>数据的报文段。</p>\n<h2 id=\"tcp连接管理\"><a class=\"markdownIt-Anchor\" href=\"#tcp连接管理\">#</a> TCP 连接管理</h2>\n<p>3 次握手，4 次分手</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191517080.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191509839.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191514191.png\" alt=\"\"></p>\n<h1 id=\"拥塞控制协议\"><a class=\"markdownIt-Anchor\" href=\"#拥塞控制协议\">#</a> 拥塞控制协议</h1>\n<p><strong>拥塞控制方法</strong>：</p>\n<p><strong>网络辅助的拥塞控制</strong></p>\n<ul>\n<li>\n<p>直接网络反馈：<strong>路由器</strong>以阻塞分组的形式通知发送方 “网络拥塞了”</p>\n</li>\n<li>\n<p>经由接收方的网络反馈：路由器标识从发送方流向接收方分组中的某个字段以指示拥塞的产生，由<strong>接收方</strong>通知发送方 “网络拥塞了”（至少要经过一个完整的往返时间）</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181313027.jpg\" alt=\"\"></p>\n<p><strong>端到端拥塞控制</strong></p>\n<ul>\n<li>\n<p>网络层不为拥塞控制提供任何帮助和支持</p>\n</li>\n<li>\n<p>端系统通过对网络行为（丢包或时延增加）的观测判断网络是否发生拥塞</p>\n</li>\n<li>\n<p>目前 TCP 采用该种方法（通过三个冗余的 ACK 实现）</p>\n</li>\n</ul>\n<h1 id=\"tcp拥塞控制\"><a class=\"markdownIt-Anchor\" href=\"#tcp拥塞控制\">#</a> TCP 拥塞控制</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191357221.png\" alt=\"\"></p>\n<h2 id=\"reno算法\"><a class=\"markdownIt-Anchor\" href=\"#reno算法\">#</a> Reno 算法</h2>\n<p><strong>加性增，乘性减（AIMD）</strong></p>\n<ol>\n<li>\n<p>出现丢包事件后将当前 CongWin 大小<strong>减半</strong>，可以大大减少注入到网络中的分组数</p>\n</li>\n<li>\n<p>当<strong>没有丢包</strong>事件发生了，每个 RTT 之后将 CongWin<strong> 增大 1 个 MSS</strong>，使拥塞窗口缓慢增大，以防止网络过早出现拥塞</p>\n</li>\n</ol>\n<h3 id=\"慢启动和拥塞避免\"><a class=\"markdownIt-Anchor\" href=\"#慢启动和拥塞避免\">#</a> 慢启动和拥塞避免</h3>\n<p><strong>建立连接时，CongWin = 1 MSS</strong></p>\n<p>eg：</p>\n<ol>\n<li><strong>MSS（最大报文段大小）</strong> = 500 字节</li>\n<li><strong>CongWin</strong> = 1 MSS = 500 字节 = 500 * 8 比特</li>\n<li><strong>RTT</strong> = 200 毫秒</li>\n</ol>\n<p>所以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>初始速率</mtext><mo>=</mo><mfrac><mrow><mn>500</mn><mo>∗</mo><mn>8</mn></mrow><mn>200</mn></mfrac><mo>=</mo><mn>20</mn><mi>k</mi><mi>b</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">初始速率=\\frac{500 * 8}{200}=20kbps</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">初</span><span class=\"mord cjk_fallback\">始</span><span class=\"mord cjk_fallback\">速</span><span class=\"mord cjk_fallback\">率</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">0</span><span class=\"mbin mtight\">∗</span><span class=\"mord mtight\">8</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">s</span></span></span></span></p>\n<p><strong>可用带宽 &gt;&gt; MSS/RTT</strong></p>\n<ul>\n<li>\n<p>初始阶段以指数的速度增加发送速率</p>\n</li>\n<li>\n<p>连接初始阶段，以<strong>指数的速度</strong>增加发送速率，直到发生一个丢包事件为止</p>\n</li>\n<li>\n<p>每收到一次确认则将 CongWin 的值<strong>增加一个 MSS</strong></p>\n</li>\n</ul>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181412990.png\" style=\"zoom: 50%;\" />\n<p>对收到<strong> 3 个重复 ACK</strong> 的反应</p>\n<ul>\n<li>\n<p>将<strong> CongWin 减</strong>为原来的<strong>一半</strong></p>\n</li>\n<li>\n<p><strong>线性增大</strong>拥塞窗口</p>\n</li>\n</ul>\n<p>对<strong>超时</strong>事件的反应</p>\n<ul>\n<li>\n<p><strong>门限值</strong>设为当前 CongWin 的<strong>一半</strong>（门限值初始值 65kB）</p>\n</li>\n<li>\n<p>将<strong> CongWin</strong> 设为<strong> 1 个 MSS</strong> 大小；</p>\n</li>\n<li>\n<p>窗口以<strong>指数</strong>速度增大</p>\n</li>\n<li>\n<p>窗口增大到<strong>门限值</strong>之后，再以<strong>线性</strong>速度增大</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181421162.png\" alt=\"\"></p>\n<ol>\n<li>当 TCP 连接进行初始化时，将<strong>拥塞窗口置为 1</strong>。图中的窗口单位不使用字节而使用<strong>报文段</strong>。慢开始门限的初始值设置为 16 个报文段，即 ssthresh = 16。</li>\n<li>发送端的发送窗口不能超过<strong>拥塞窗口 cwnd</strong> 和<strong>接收端窗口 rwnd</strong> 中的<strong>最小值</strong>。我们假定接收端窗口足够大，因此现在发送窗口的数值等于拥塞窗口的数值。</li>\n<li>当拥塞窗口 cwnd 增长到<strong>慢开始门限值 ssthresh</strong> 时（即当 cwnd = 16 时），就改为执行<strong>拥塞避免算法</strong>，拥塞窗口按<strong>线性规律</strong>增长。</li>\n</ol>\n<h3 id=\"快速恢复\"><a class=\"markdownIt-Anchor\" href=\"#快速恢复\">#</a> 快速恢复</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181425437.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>3 个冗余 ACK 进入快速重传后</p>\n</li>\n<li>\n<p>每收到一个<strong>冗余</strong> ACK：<strong>CongWin++</strong></p>\n</li>\n<li>\n<p>直至收到一个<strong>新的</strong> ACK：<strong>CongWin = 门限值</strong>，重新进入拥塞避免；因为已经收到了三个冗余 ACK，所以实际 cwnd = 门限值 + 3</p>\n</li>\n<li>\n<p>在进入<strong>快速恢复之后</strong>及重新<strong>进入拥塞避免之间</strong>，如果出现<strong>超时</strong>现象，直接<strong>按</strong>照前述<strong>超时事件</strong>进行<strong>处理</strong></p>\n</li>\n</ul>\n<p><strong>总结</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181430514.png\" alt=\"\"></p>\n<h2 id=\"tcp吞吐量\"><a class=\"markdownIt-Anchor\" href=\"#tcp吞吐量\">#</a> TCP 吞吐量</h2>\n<p>假定当丢包事件发生时，窗口大小为 W，此时吞吐量为 W/RTT</p>\n<p>丢包事件发生后，窗口大小减为 W/2, 吞吐量为 W/2RTT，因此平均吞吐量为: 0.75 W/RTT</p>\n<p>吞吐量是丢包率 (L) 的函数:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mn>1.22</mn><mo>⋅</mo><mi>M</mi><mi>S</mi><mi>S</mi></mrow><mrow><mi>R</mi><mi>T</mi><mi>T</mi><msqrt><mi>L</mi></msqrt></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1.22\\cdot MSS}{RTT\\sqrt{L}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.410331em;vertical-align:-0.538em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.872331em;\"><span style=\"top:-2.537397em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322900000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal mtight\">L</span></span></span><span style=\"top:-2.89229em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.10770999999999997em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">2</span><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.538em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<h2 id=\"并行tcp连接\"><a class=\"markdownIt-Anchor\" href=\"#并行tcp连接\">#</a> 并行 TCP 连接</h2>\n<p>考虑一段速率为 R 且支持 9 个在线客户 - 服务器应用的链路，每个应用使用一条 TCP 连接，如果一个新的应用加入进来</p>\n<ul>\n<li 10=\"\">如果新的应用也使用一条 TCP 连接，则每个应用得到差不多相同的传输速率\\frac{R}</li>\n<li>如果新的应用使用了 11 个并行的 TCP 连接，那这个应用就会不公平的分到超过<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>R</mi><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{R}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.217331em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.872331em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 的带宽</li>\n</ul>\n",
            "tags": [
                "计网"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/09/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/",
            "url": "http://www.luckycyyyy.top/2024/09/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/",
            "title": "数据库系统",
            "date_published": "2024-09-28T01:41:45.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"绪论\"><a class=\"markdownIt-Anchor\" href=\"#绪论\">#</a> 绪论</h1>\n<h2 id=\"数据库系统概述\"><a class=\"markdownIt-Anchor\" href=\"#数据库系统概述\">#</a> 数据库系统概述</h2>\n<h3 id=\"基本概念\"><a class=\"markdownIt-Anchor\" href=\"#基本概念\">#</a> 基本概念</h3>\n<p><strong>数据</strong></p>\n<p><strong>数据库 (DB)</strong>：是长期储存在计算机内、有组织的、可共享的大量数据的集合，数据按一定的数据模型组织、描述和储存</p>\n<ul>\n<li>可为各种用户共享</li>\n<li>冗余度较小</li>\n<li>数据独立性较高</li>\n<li>易扩展</li>\n</ul>\n<p><strong>数据库管理系统 (DBMS)</strong></p>\n<ul>\n<li>数据定义功能，数据定义语言：DDL</li>\n<li>数据组织、存储和管理</li>\n<li>数据操纵功能，数据操纵语言：DML</li>\n<li>数据库的事务管理和运行管理</li>\n<li>数据库的建立和维护功能</li>\n<li>其他功能</li>\n</ul>\n<p><strong>数据库系统 (DBS)</strong>：由数据库（DB）、数据库管理系统（DBMS）、应用程序和数据库管理员（DBA）组成的存储、管理、处理和维护数据的系统。</p>\n<h3 id=\"数据管理技术的产生和发展\"><a class=\"markdownIt-Anchor\" href=\"#数据管理技术的产生和发展\">#</a> 数据管理技术的产生和发展</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410311024522.jpg\" alt=\"\"></p>\n<p>文件系统：即专门处理数据的应用，程序员要关注记录的结构和不同文件中记录之间的联系，使用文件系统提供的 <code>fopen</code>  等操作来进行编程</p>\n<p>数据库系统：只用一条语句就能实现查询操作</p>\n<h3 id=\"数据库系统特点\"><a class=\"markdownIt-Anchor\" href=\"#数据库系统特点\">#</a> 数据库系统特点</h3>\n<ol>\n<li>\n<p><strong>数据结构化</strong>：实现整体数据的结构化，是数据库系统与文件系统的本质区别。“整体” 指的是数据库中的数据不再针对某一个应用，而是面向整个组织</p>\n</li>\n<li>\n<p><strong>数据的共享性高，冗余度低且易扩充</strong>：数据共享可以大大减少数据冗余，节约存储空间，且能避免数据之间的不相容性与不一致性；还容易添加新的应用，使得数据库系统弹性大，易于扩充。</p>\n</li>\n<li>\n<p><strong>数据独立性高</strong>：利用<strong>二级映像</strong>功能实现，简化应用程序的编制，减少应用程序的维护和修改</p>\n<ul>\n<li>物理独立性：用户的应用程序与数据库中数据的物理存储是相互独立的</li>\n<li>逻辑独立性：用户的应用程序与数据库的逻辑结构是相互独立的</li>\n</ul>\n</li>\n<li>\n<p>数据由数据库管理系统<strong>统一</strong>管理和控制</p>\n<ul>\n<li>数据的安全性保护：防止不合法使用造成的数据泄露和破坏</li>\n<li>数据的完整性检查：保证数据的正确性、有效性和相容性</li>\n<li>并发控制</li>\n<li>数据库恢复</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"数据模型\"><a class=\"markdownIt-Anchor\" href=\"#数据模型\">#</a> 数据模型</h2>\n<h3 id=\"组成要素\"><a class=\"markdownIt-Anchor\" href=\"#组成要素\">#</a> 组成要素</h3>\n<p>数据结构：描述数据库的组成对象，以及对象之间的联系。数据结构是对系统<strong>静态特性</strong>的描述</p>\n<p>数据的操作：查询，增删改。数据操作是对系统<strong>动态特性</strong>的描述</p>\n<p>数据的完整性约束：给定的数据模型中数据及其联系所具有的制约和依存规则</p>\n<h3 id=\"概念模型\"><a class=\"markdownIt-Anchor\" href=\"#概念模型\">#</a> 概念模型</h3>\n<p>也称信息模型，按用户的观点对数据和信息建模</p>\n<p><strong>基本概念</strong></p>\n<p>实体：客观存在并可相互区别的事物</p>\n<p>属性：实体所具有的某一特性成为属性</p>\n<p>码：唯一标识实体的属性</p>\n<p>联系：是一支箭的联系通常是指不同实体集之间的联系。有一对一、一对多、多对多的类型</p>\n<p><strong>表示方式</strong></p>\n<p>实体 - 联系方法，即 E-R 模型</p>\n<h3 id=\"逻辑模型\"><a class=\"markdownIt-Anchor\" href=\"#逻辑模型\">#</a> 逻辑模型</h3>\n<p><strong>层次模型</strong></p>\n<p><strong>网状模型</strong></p>\n<p><strong>关系模型</strong></p>\n<p>关系模型中数据的逻辑结构是一张二维表，它由行和列组成</p>\n<p>关系：一个关系对应通常说的一张表。关系的每一个分量必须是一个不可分的数据项。</p>\n<p>元组：表中的一行即为一个元组</p>\n<p>属性：表中的一列即为一个属性，给每一个属性起一个名称即属性名</p>\n<p>主码：也称码键。表中的某个属性组，它可以唯一确定一个元组</p>\n<p>域：一组具有相同数据类型的值的集合</p>\n<p>分量：元组中的一个属性值</p>\n<p><strong>优点</strong></p>\n<ul>\n<li>建立在严格的数学概念的基础上（关系代数等）</li>\n<li>概念单一：实体和各类联系都用关系来表示，对数据的检索结果也是关系，数据结构简单清晰、用户易懂易用</li>\n<li>关系模型的存取路径对用户透明，具有更高的数据独立性，更好的安全保密性，简化了程序员的工作和数据库开发建立的工作</li>\n</ul>\n<p><strong>半结构化数据模型</strong></p>\n<h3 id=\"物理模型\"><a class=\"markdownIt-Anchor\" href=\"#物理模型\">#</a> 物理模型</h3>\n<p>描述数据在系统内部的表示方式和存取方式，或在磁盘或磁带上的存储方式和存取方式</p>\n<h2 id=\"数据库系统结构\"><a class=\"markdownIt-Anchor\" href=\"#数据库系统结构\">#</a> 数据库系统结构</h2>\n<h3 id=\"三级模式结构\"><a class=\"markdownIt-Anchor\" href=\"#三级模式结构\">#</a> 三级模式结构</h3>\n<p>数据库系统通常采用<strong>三级模式结构</strong>，是数据库系统内部的系统结构</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410311121223.png\" alt=\"\"></p>\n<p><strong>模式</strong>：数据库中<strong>全体</strong>数据的逻辑结构和特征的描述</p>\n<p><strong>外模式</strong>：数据库用户使用的<strong>局部</strong>数据的逻辑结构和特征的描述，是与<strong>某一应用有关</strong>的数据的逻辑表示</p>\n<p><strong>内模式</strong>：是数据<strong>物理结构和存储方式</strong>的描述，是数据在数据库<strong>内部</strong>的表示方式</p>\n<h3 id=\"二级映射功能与数据独立性\"><a class=\"markdownIt-Anchor\" href=\"#二级映射功能与数据独立性\">#</a> 二级映射功能与数据独立性</h3>\n<ul>\n<li>外模式 / 模式映像</li>\n<li>模式 / 内模式映像</li>\n</ul>\n<p>保证数据的<strong>逻辑独立性</strong>和<strong>物理独立性</strong></p>\n<p>保证数据的<strong>逻辑独立性</strong>：当模式改变时，数据库管理员对外模式／模式映象作相应改变，使外模式保持不变，从而应用程序不必修改</p>\n<p>保证数据的<strong>物理独立性</strong>：当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，模式保持不变</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410311125281.png\" alt=\"\"></p>\n<h1 id=\"关系数据库\"><a class=\"markdownIt-Anchor\" href=\"#关系数据库\">#</a> 关系数据库</h1>\n<h2 id=\"关系数据结构及形式化定义\"><a class=\"markdownIt-Anchor\" href=\"#关系数据结构及形式化定义\">#</a> 关系数据结构及形式化定义</h2>\n<p><strong>域</strong>：是一组具有相同数据类型的值的集合。</p>\n<p><strong>关系</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mn>1</mn><mo>×</mo><mi>D</mi><mn>2</mn><mo>×</mo><mo>…</mo><mo>×</mo><mi>D</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">D1×D2×…×Dn</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">n</span></span></span></span> 的子集叫作在域<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>D</mi><mn>1</mn><mtext>，</mtext><mi>D</mi><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>D</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">D1，D2，…，Dn</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">n</span></span></span></span> 上的关系，表示为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mtext>（</mtext><mi>D</mi><mn>1</mn><mtext>，</mtext><mi>D</mi><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>D</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R（D1，D2，…，Dn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord cjk_fallback\">（</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，（R：关系名，n：关系的目或度）</p>\n<p><strong>关系的表示</strong>：关系是一个二维表，表的每行对应一个元组，表的每列对应一个域</p>\n<p><strong>属性</strong>：关系中不同列可以对应相同的域，必须对每列起一个名字，称为属性，n 目关系必有 n 个属性</p>\n<p><strong>码</strong></p>\n<ul>\n<li><strong>候选码</strong>：若关系中的某一属性组的值能<strong>唯一</strong>地标识一个元组，而其子集不能，则称该属性组为候选码（特例：候选码只包含一个属性）</li>\n<li><strong>主属性</strong>：候选码的诸属性称为主属性，其他为非主属性</li>\n<li><strong>主码</strong>：若一个关系有多个候选码，则选定其中一个为主码</li>\n<li><strong>全码</strong>：关系模式的所有属性组是这个关系模式的候选码，称为全码</li>\n</ul>\n<p><strong>关系的类型</strong>：</p>\n<ul>\n<li>基本关系：又称基本表或基表，是实际存在的表，是实际存储数据的逻辑表表示</li>\n<li>查询表：查询结果对应的表</li>\n<li>视图表：是由基本表或其他视图表导出的表，是虚表</li>\n</ul>\n<p><strong>关系的性质</strong></p>\n<ol>\n<li>列是同质的。每一列中的分量必须来自同一个域，必须是同一类型数据。</li>\n<li>不同的列可出自同一个域。不同的属性要给予不同的属性名</li>\n<li>列的顺序无所谓，列的次序可以任意交换</li>\n<li>任意两个元组的候选码不能相同</li>\n<li>行的顺序无所谓，行的次序可以任意交换</li>\n<li>属性分量必须取原子值。属性不能是表格，包含多个值的组合。关系的每一个分量必须是一个不可分的数据项。</li>\n</ol>\n<p><strong>关系模式</strong></p>\n<p>关系模式</p>\n<ul>\n<li>对关系的描述</li>\n<li>是静态的、稳定的</li>\n</ul>\n<p>关系</p>\n<ul>\n<li>\n<p>关系模式在某一时刻的状态或内容</p>\n</li>\n<li>\n<p>是动态的、随时间不断变化的</p>\n</li>\n</ul>\n<p>关系模式和关系往往笼统称为关系</p>\n<p><strong>关系数据库</strong></p>\n<p>在一个给定的应用领域中，所有关系的集合构成一个关系数据库</p>\n<p><strong>关系数据库的型与值</strong>：</p>\n<p>关系数据库的型：关系数据库<strong>模式</strong>，是对关系数据库的<strong>描述</strong></p>\n<p>关系数据库的值：关系模式在<strong>某一时刻对应</strong>的关系的集合，通常称为关系数据库</p>\n<h2 id=\"关系操作\"><a class=\"markdownIt-Anchor\" href=\"#关系操作\">#</a> 关系操作</h2>\n<p>集合操作方式。操作的<strong>对象和结果都是集合</strong>，<strong>一次一集合</strong>的方式</p>\n<h2 id=\"关系的完整性\"><a class=\"markdownIt-Anchor\" href=\"#关系的完整性\">#</a> 关系的完整性</h2>\n<h3 id=\"实体完整性\"><a class=\"markdownIt-Anchor\" href=\"#实体完整性\">#</a> 实体完整性</h3>\n<p>若属性<em> A</em> 是基本关系<em> R</em> 的主属性，则属性<em> A</em> 不能取空值</p>\n<h3 id=\"参照完整性\"><a class=\"markdownIt-Anchor\" href=\"#参照完整性\">#</a> 参照完整性</h3>\n<p>若属性（或属性组）F 是基本关系 R 的外码，它与基本关系 S 的主码 Ks 相对应（基本关系 R 和 S 不一定是不同的关系），则对于 R 中每个元组在 F 上的值必须为：</p>\n<ul>\n<li>取空值（F 的每个属性值均为空值）</li>\n<li>等于 S 中某个元组的主码值</li>\n</ul>\n<h3 id=\"用户定义的完整性\"><a class=\"markdownIt-Anchor\" href=\"#用户定义的完整性\">#</a> 用户定义的完整性</h3>\n<p>针对某一具体关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的<strong>语义要求</strong></p>\n<p>关系模型应提供<strong>定义和检验</strong>这类完整性的机制，以便用统一的系统的方法处理它们，而不需由应用程序承担这一功能</p>\n<h2 id=\"关系代数\"><a class=\"markdownIt-Anchor\" href=\"#关系代数\">#</a> 关系代数</h2>\n<p><strong>关系运算的记号</strong></p>\n<ol>\n<li>\n<p>设关系模式为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mn>1</mn><mtext>，</mtext><mi>A</mi><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>A</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(A1，A2，…，An)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，它的一个关系设为 R，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">t\\in R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65418em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 表示 t 是 R 的一个元组，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo stretchy=\"false\">[</mo><msub><mi>A</mi><mi>i</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">t [A_i ]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 则表示元组<em> t</em> 中相应于属性 Ai 的一个分量</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mtext>，</mtext><mi>t</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo stretchy=\"false\">]</mo><mtext>，</mtext><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">A，t[A]， \\overline {A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.13333em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>，</p>\n<ul>\n<li>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence=\"true\">{</mo><mi>A</mi><mi>i</mi><mn>1</mn><mtext>，</mtext><mi>A</mi><mi>i</mi><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>A</mi><mi>i</mi><mi>k</mi><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">A= \\left \\{Ai1，Ai2，…，Aik\\right \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>i</mi><mn>1</mn><mtext>，</mtext><mi>A</mi><mi>i</mi><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>A</mi><mi>i</mi><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">Ai1，Ai2，…，Aik</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mn>1</mn><mtext>，</mtext><mi>A</mi><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>A</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">A1，A2，…，An</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">n</span></span></span></span> 中的一部分，则<em> A</em> 称为属性列或属性组。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mi>i</mi><mn>1</mn><mo stretchy=\"false\">]</mo><mtext>，</mtext><mi>t</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mn>2</mn><mo stretchy=\"false\">]</mo><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>t</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">t[A]=(t[Ai1]，t[A2]，…，t[Ak])</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">2</span><span class=\"mclose\">]</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span> 表示元组<em> t</em> 在属性列 A 上诸分量的集合。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>A</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8833300000000001em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833300000000001em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-3.80333em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span> 则表示<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mi>A</mi><mn>1</mn><mtext>，</mtext><mi>A</mi><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>A</mi><mi>n</mi><mo fence=\"true\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\left\\{ A1，A2，…，An\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">，</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">n</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span> 中去掉<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mi>A</mi><mi>i</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>A</mi><mi>i</mi><mn>2</mn><mo>…</mo><mtext>，</mtext><mi>A</mi><mi>i</mi><mi>k</mi><mo fence=\"true\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\left\\{ Ai1,Ai2…，Aik\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span> 后剩余的属性组。</li>\n</ul>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi><mover><mo><mi>t</mi><mi>r</mi><mi>t</mi><mi>s</mi></mo><mstyle mathsize=\"1.728em\"><mo lspace=\"0em\" rspace=\"0em\">⌢</mo></mstyle></mover></mi></mrow><annotation encoding=\"application/x-tex\">\\overset{\\LARGE{\\frown}}{trts}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5330819200000003em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5330819200000003em;\"><span style=\"top:-3.7279999999999998em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span><span class=\"mop\"><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span></span></span></span><span style=\"top:-4.54308em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sizing reset-size3 size9\"><span class=\"mrel\">⌢</span></span></span></span></span></span></span></span></span></span></span></span></span>，R 为 n 目关系，S 为 m 目关系。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>r</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">tr\\in R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65418em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>s</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">ts\\in S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65418em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi><mover><mo><mi>t</mi><mi>r</mi><mi>t</mi><mi>s</mi></mo><mstyle mathsize=\"1.728em\"><mo lspace=\"0em\" rspace=\"0em\">⌢</mo></mstyle></mover></mi></mrow><annotation encoding=\"application/x-tex\">\\overset{\\LARGE{\\frown}}{trts}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5330819200000003em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5330819200000003em;\"><span style=\"top:-3.7279999999999998em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span><span class=\"mop\"><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span></span></span></span><span style=\"top:-4.54308em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sizing reset-size3 size9\"><span class=\"mrel\">⌢</span></span></span></span></span></span></span></span></span></span></span></span></span> 称为元组的连接。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi><mover><mo><mi>t</mi><mi>r</mi><mi>t</mi><mi>s</mi></mo><mstyle mathsize=\"1.728em\"><mo lspace=\"0em\" rspace=\"0em\">⌢</mo></mstyle></mover></mi></mrow><annotation encoding=\"application/x-tex\">\\overset{\\LARGE{\\frown}}{trts}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5330819200000003em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5330819200000003em;\"><span style=\"top:-3.7279999999999998em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span><span class=\"mop\"><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span></span></span></span><span style=\"top:-4.54308em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sizing reset-size3 size9\"><span class=\"mrel\">⌢</span></span></span></span></span></span></span></span></span></span></span></span></span> 是一个 n + m 列的元组，前 n 个分量为 R 中的一</p>\n<p>个 n 元组，后 m 个分量为 S 中的一个 m 元组。</p>\n</li>\n<li>\n<p>象集<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">Zx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mord mathnormal\">x</span></span></span></span></p>\n<p>给定一个关系<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mtext>，</mtext><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(X，Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span>，X 和 Z 为属性组。当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">t[X]=x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 时，x 在 R 中的象集为：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">{</mo><mi>t</mi><mo stretchy=\"false\">[</mo><mi>Z</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mo>∈</mo><mi>R</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>x</mi><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">x= \\left\\{t[Z]|t\\in R,t[x]=x\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">]</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span>，它表示<em> R</em> 中属性组 X 上值为<em> x</em> 的诸元组在上分量的集合</p>\n</li>\n</ol>\n<p><strong>关系运算</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411041601528.png\" alt=\"\"></p>\n<p><strong>选择</strong></p>\n<blockquote>\n<p>取出行</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411041640163.png\" alt=\"\"></p>\n<p><strong>投影</strong></p>\n<blockquote>\n<p>取出列</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411051000832.png\" alt=\"\"></p>\n<p><strong>连接</strong></p>\n<blockquote>\n<p>扩展 列、行</p>\n</blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>⋈</mo><msub><mi>S</mi><mrow><mi>A</mi><mi>θ</mi><mi>B</mi></mrow></msub><mo>=</mo><mrow><mo fence=\"true\">{</mo><mi><mover><mo><mi>t</mi><mi>r</mi><mi>t</mi><mi>s</mi></mo><mstyle mathsize=\"1.728em\"><mo lspace=\"0em\" rspace=\"0em\">⌢</mo></mstyle></mover></mi><mi mathvariant=\"normal\">∣</mi><mi>t</mi><mi>r</mi><mo>∈</mo><mi>R</mi><mo>∧</mo><mi>t</mi><mi>s</mi><mo>∈</mo><mi>S</mi><mo>∧</mo><mi>t</mi><mi>r</mi><mo stretchy=\"false\">[</mo><mi>A</mi><mo stretchy=\"false\">]</mo><mi>θ</mi><mi>t</mi><mi>s</mi><mo stretchy=\"false\">[</mo><mi>B</mi><mo stretchy=\"false\">]</mo><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R\\Join S_{A\\theta B}=\\left\\{ \\overset{\\LARGE{\\frown}}{trts}|tr\\in R\\wedge ts\\in S∧tr[A]θts[B]\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68833em;vertical-align:-0.005em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⋈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4831119200000003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5330819200000003em;\"><span style=\"top:-3.7279999999999998em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span><span class=\"mop\"><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span></span></span></span><span style=\"top:-4.54308em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.7279999999999998em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sizing reset-size3 size9\"><span class=\"mrel\">⌢</span></span></span></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">]</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">]</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">}</span></span></span></span></span></span></p>\n<ul>\n<li>A 和 B：分别为<em> R</em> 和<em> S</em> 上度数相等且可比的属性组</li>\n<li>θ：比较运算符</li>\n</ul>\n<p><strong>等值连接</strong></p>\n<p>θ 为 “＝” 的连接运算称为等值连接</p>\n<p><strong>自然连接</strong></p>\n<p>自然连接是一种特殊的等值连接</p>\n<ul>\n<li>\n<p>两个关系中进行比较的分量必须是相同的属性组</p>\n</li>\n<li>\n<p>在结果中把<strong>重复的属性列去掉</strong></p>\n</li>\n</ul>\n<p><strong>悬浮元组</strong></p>\n<p>两个关系 R 和 S 在做自然连接时，关系<em> R</em> 中某些元组有可能在 S 中<strong>不存在</strong>公共属性上值相等的元组，这些元组称为悬浮元组。</p>\n<p><strong>外连接</strong></p>\n<p>如果把悬浮元组也保存在结果关系中，而在其他属性上<strong>填空值 (Null)</strong>，就叫做外连接</p>\n<p><strong>除运算</strong></p>\n<p>给定关系<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mtext>，</mtext><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R (X，Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mtext>，</mtext><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S(Y，Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mtext>，</mtext><mi>Y</mi><mtext>，</mtext><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X，Y，Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 为属性组。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 中的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 中的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 可以有不同的属性名，但必须出自相同的域集。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 的除运算得到一个新的关系<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 中满足下列条件的元组在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 属性列上的投影：元组在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 上分量值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的象集<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Y</mi><mi>x</mi></msub></mrow><annotation encoding=\"application/x-tex\">Y_x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 包含<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 上投影的集合</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411051000845.png\" alt=\"\"></p>\n<p>先对 SC 关系在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator=\"true\">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(Sno,Cno)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mclose\">)</span></span></span></span> 属性上建立投影，然后逐一求出每一学生<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(Sno)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mclose\">)</span></span></span></span> 的象集，并检查这些象集是否包含 K</p>\n<p>k：<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411051000578.png\" alt=\"image-20241104172918463\" style=\"zoom: 50%;\" /></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msub><mo>∏</mo><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo separator=\"true\">,</mo><mi>C</mi><mi>n</mi><mi>o</mi></mrow></msub></mstyle><mo stretchy=\"false\">(</mo><mi>S</mi><mi>C</mi><mo stretchy=\"false\">)</mo><mo lspace=\"0em\" rspace=\"0em\">÷</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">{\\textstyle \\prod_{Sno,Cno}}(SC){\\div}  K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.185818em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17862099999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\">÷</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span></p>\n<h1 id=\"sql\"><a class=\"markdownIt-Anchor\" href=\"#sql\">#</a> SQl</h1>\n<h2 id=\"sql特点\"><a class=\"markdownIt-Anchor\" href=\"#sql特点\">#</a> SQL 特点</h2>\n<ol>\n<li>\n<p><strong>综合统一</strong>：SQL 语言集 DDL，DML，DCL 的功能于一体</p>\n<p><strong>DDL（数据定义语言，Data Definition Language）</strong><br>\nDDL 语句用于定义或修改数据库结构，包括数据库、表、视图等。常见的 DDL 命令有：</p>\n<ul>\n<li><code>CREATE</code> ：创建数据库、表、视图等。</li>\n<li><code>ALTER</code> ：修改已有的数据库对象，例如添加、删除或修改表中的列。</li>\n<li><code>DROP</code> ：删除数据库对象，如删除表或数据库。</li>\n<li><code>TRUNCATE</code> ：清空表中所有数据，但保留表结构。</li>\n</ul>\n<p><strong>用途</strong>：主要用于定义数据库的结构。</p>\n<p><strong>DML（数据操纵语言，Data Manipulation Language）</strong><br>\nDML 语句用于操作数据，包括插入、更新、删除和查询数据。常见的 DML 命令有：</p>\n<ul>\n<li><code>INSERT</code> ：插入数据到表中。</li>\n<li><code>UPDATE</code> ：更新表中的数据。</li>\n<li><code>DELETE</code> ：删除表中的数据。</li>\n<li><code>SELECT</code> ：查询表中的数据。</li>\n</ul>\n<p><strong>用途</strong>：主要用于增删改查数据库中的数据。</p>\n<p><strong>DCL（数据控制语言，Data Control Language）</strong><br>\nDCL 语句用于管理数据库的权限和安全性，控制用户对数据的访问。常见的 DCL 命令有：</p>\n<ul>\n<li><code>GRANT</code> ：授予用户特定的权限。</li>\n<li><code>REVOKE</code> ：撤销用户的特定权限。</li>\n</ul>\n<p><strong>用途</strong>：主要用于数据库的访问控制和权限管理。</p>\n</li>\n<li>\n<p><strong>高度非过程化</strong>，无需了解存储路径，存储路径的选择以及 SQL 的操作过程由系统自动完成</p>\n</li>\n<li>\n<p><strong>面向集合的操作方式</strong></p>\n</li>\n<li>\n<p><strong>SQL 既是自含式语言又是嵌入式语言</strong></p>\n</li>\n<li>\n<p>语言简洁，易学易用</p>\n</li>\n</ol>\n<h2 id=\"数据定义\"><a class=\"markdownIt-Anchor\" href=\"#数据定义\">#</a> 数据定义</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411051411984.png\" alt=\"\"></p>\n<h3 id=\"模式\"><a class=\"markdownIt-Anchor\" href=\"#模式\">#</a> 模式</h3>\n<h4 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\">#</a> 定义</h4>\n<p><code>CREATE SCHEMA &lt;模式名&gt; AUTHORIZATION &lt;用户名&gt; [&lt;表定义子句&gt;|&lt;视图定义字句&gt;|&lt;授权定义子句&gt;]</code></p>\n<p>即：在 <code>CREATE SCHEMA</code>  中可以接受 <code>CREATE TABLE,CREATE VIEW,GRANT</code>  子句</p>\n<ul>\n<li>如果没有指定 &lt;模式名&gt;，那么 &lt; 模式名 &gt; 隐含为 &lt; 用户名 &gt;</li>\n</ul>\n<p><strong>eg</strong>：为用户 ZHANG 创建一个模式 TEST，并且在其中定义一个表 TAB1</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> SCHEMA TEST <span class=\"keyword\">AUTHORIZATION</span> ZHANG</span><br><span class=\"line\">CREATER <span class=\"keyword\">TABLE</span> TAB1(COL1 <span class=\"type\">SMALLINT</span>,</span><br><span class=\"line\">                   COL2 <span class=\"type\">INT</span>,</span><br><span class=\"line\">                   COL3 <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">                   COL4 <span class=\"type\">NUMERIC</span>(<span class=\"number\">10</span>, <span class=\"number\">3</span>),<span class=\"comment\">-- 共10位，整数部分7位，小数点后3位</span></span><br><span class=\"line\">                   COL5 <span class=\"type\">DECIMAL</span>(<span class=\"number\">5</span>, <span class=\"number\">2</span>)<span class=\"comment\">-- 整数部分加小数部分总长度是5，小数部分长度是2，如果超过2会发生截断，不足2会补齐</span></span><br><span class=\"line\">                  );</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除\"><a class=\"markdownIt-Anchor\" href=\"#删除\">#</a> 删除</h4>\n<p><code>Drop SCHEMA &lt;模式名&gt;&lt;CASCADE|RESTRICT&gt;</code></p>\n<ul>\n<li><code>CASCADE</code>  表示同时把该模式中所有的数据库对象全部删除</li>\n<li><code>RESTRICT</code>  表示如果模式中已经定义了下属的数据库对象，则拒绝执行删除该语句</li>\n</ul>\n<h3 id=\"基本表\"><a class=\"markdownIt-Anchor\" href=\"#基本表\">#</a> 基本表</h3>\n<h4 id=\"定义-2\"><a class=\"markdownIt-Anchor\" href=\"#定义-2\">#</a> 定义</h4>\n<h5 id=\"表\"><a class=\"markdownIt-Anchor\" href=\"#表\">#</a> 表：</h5>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CEATE <span class=\"keyword\">TABLE</span> <span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span>(<span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span>数据类型<span class=\"operator\">&gt;</span> [列级完整性约束条件]</span><br><span class=\"line\">                  [,<span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span>数据类型<span class=\"operator\">&gt;</span>[列级完整性约束条件]]</span><br><span class=\"line\">                  ...</span><br><span class=\"line\">                  [,<span class=\"operator\">&lt;</span>表级完整性约束条件<span class=\"operator\">&gt;</span>]);</span><br></pre></td></tr></table></figure>\n<p><strong>eg</strong>：创建一个 “课程” 表 Course</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Course(</span><br><span class=\"line\">    Cno <span class=\"type\">CHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">PRIMARY</span> KEY, <span class=\"comment\">-- 列级完整性约束条件，Cno是主码</span></span><br><span class=\"line\">    Cname <span class=\"type\">CHAR</span>(<span class=\"number\">40</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>, <span class=\"comment\">-- 列级完整性约束条件，Cname不能取空值</span></span><br><span class=\"line\">    Cpno <span class=\"type\">CHAR</span>(<span class=\"number\">4</span>),</span><br><span class=\"line\">    Ccredit <span class=\"type\">SMALLINT</span>,</span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN</span> KEY(Cpno) <span class=\"keyword\">REFERENCES</span> Course(Cno) <span class=\"comment\">-- 表级完整性约束条件，Cpno是外码，被参照表是Course，被参照列是Cno</span></span><br><span class=\"line\">    <span class=\"comment\">/*由此可见参照表和被参照表可以是同一个表*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h5 id=\"表所属模式\"><a class=\"markdownIt-Anchor\" href=\"#表所属模式\">#</a> 表所属模式：</h5>\n<p><strong>法一</strong>：在表名中明显给出模式名</p>\n<p>eg： <code>CREATE TABLE &quot;S-T&quot;.Student(...);</code>  表示 <code>Student</code>  所属的模式是 <code>S-T</code></p>\n<p><strong>法二</strong>：在创建模式语句同时建立表，例子见模式定义</p>\n<p><strong>法三</strong>：根据搜索路径来确定对象所属模式</p>\n<p>搜索路径默认是 <code>$user, PUBLIC</code> ，表示先搜索与用户名相同的模式名，如果该模式名不存在，就使用 <code>PUBLIC</code>  模式</p>\n<p>数据库管理员也可以自己设置搜索路径，eg： <code>SET search_path To &quot;S-T&quot;, PUBLIC;</code> ，然后定义基本表；那么如果 <code>S-T</code>  存在基本表就定义在了 <code>S-T</code>  模式中</p>\n<h4 id=\"修改\"><a class=\"markdownIt-Anchor\" href=\"#修改\">#</a> 修改</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALERT <span class=\"keyword\">TABLE</span><span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span></span><br><span class=\"line\">[<span class=\"keyword\">ADD</span> [<span class=\"keyword\">COLUMN</span>] <span class=\"operator\">&lt;</span>新列名<span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span>数据类型<span class=\"operator\">&gt;</span> [完整性约束]]</span><br><span class=\"line\">[<span class=\"keyword\">ADD</span> <span class=\"operator\">&lt;</span>表级完整性约束<span class=\"operator\">&gt;</span>]</span><br><span class=\"line\">[<span class=\"keyword\">DROP</span> [<span class=\"keyword\">COLUMN</span>] <span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span> [CASCADE<span class=\"operator\">|</span>RESTRICT]]</span><br><span class=\"line\">[<span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span><span class=\"operator\">&lt;</span>完整性约束名<span class=\"operator\">&gt;</span> [CASCADE<span class=\"operator\">|</span>RESTRICT]]</span><br><span class=\"line\">[<span class=\"keyword\">ALTER</span> <span class=\"keyword\">COLUMN</span> <span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span>数据类型<span class=\"operator\">&gt;</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除-2\"><a class=\"markdownIt-Anchor\" href=\"#删除-2\">#</a> 删除</h4>\n<p><code>DROP TABLE &lt;表名&gt; [CASCADE|RESTRICT];</code></p>\n<h3 id=\"索引\"><a class=\"markdownIt-Anchor\" href=\"#索引\">#</a> 索引</h3>\n<h4 id=\"建立\"><a class=\"markdownIt-Anchor\" href=\"#建立\">#</a> 建立</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> [<span class=\"keyword\">UNIQUE</span>] [CLUSTER] INDEX <span class=\"operator\">&lt;</span>索引名<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"comment\">-- UNIQUE表示每一个索引值只对应唯一的数据记录</span></span><br><span class=\"line\"><span class=\"comment\">-- CLUSTER表示建立的索引是聚簇索引</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span>(<span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span>[<span class=\"operator\">&lt;</span>次序<span class=\"operator\">&gt;</span>][,<span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span>[<span class=\"operator\">&lt;</span>次序<span class=\"operator\">&gt;</span>]]...);</span><br></pre></td></tr></table></figure>\n<p>次序： <code>ASC</code> （升序）， <code>DESC</code> （降序）；默认 <code>ASC</code></p>\n<p><strong>eg</strong>： <code>CREATE UNIQUE INDEX Scno ON SC (Sno ASC, Cno DESC)</code> ，表示 SC 表按学号升序和课程号降序建立唯一索引</p>\n<h4 id=\"修改-2\"><a class=\"markdownIt-Anchor\" href=\"#修改-2\">#</a> 修改</h4>\n<p><code>ALTER INDEX &lt;旧索引名&gt; RENAME TO &lt;新索引名&gt;</code></p>\n<h4 id=\"删除-3\"><a class=\"markdownIt-Anchor\" href=\"#删除-3\">#</a> 删除</h4>\n<p><code>DROP INDEX &lt;索引名&gt;</code></p>\n<h2 id=\"数据查询\"><a class=\"markdownIt-Anchor\" href=\"#数据查询\">#</a> 数据查询</h2>\n<h3 id=\"单表查询\"><a class=\"markdownIt-Anchor\" href=\"#单表查询\">#</a> 单表查询</h3>\n<h4 id=\"选择表中的若干列\"><a class=\"markdownIt-Anchor\" href=\"#选择表中的若干列\">#</a> 选择表中的若干列</h4>\n<ol>\n<li>\n<p>查询指定列：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列表题别名][,<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列标题别名]]... <span class=\"comment\">-- 目标表达式可以是算术表达式、字符串常量、函数等</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>eg</strong>：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname NAME, <span class=\"string\">&#x27;Year of Birth:&#x27;</span>BIRTH, <span class=\"number\">2014</span><span class=\"operator\">-</span>Sage BIRTHDAY, <span class=\"built_in\">LOWER</span>(Sdept) DEPARTMENT </span><br><span class=\"line\"><span class=\"comment\">-- 字符串常量&#x27;Year of Birth:&#x27;列的别名是BIRTH</span></span><br><span class=\"line\"><span class=\"comment\">-- 算术表达式2014-Sage列的别名是BIRTHDAY</span></span><br><span class=\"line\"><span class=\"comment\">-- 函数LOWER(Sdept)列的别名是DEPARTMENT </span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询全部列：</p>\n<p><code>SELECT *</code></p>\n</li>\n</ol>\n<h4 id=\"选择表中若干元组\"><a class=\"markdownIt-Anchor\" href=\"#选择表中若干元组\">#</a> 选择表中若干元组</h4>\n<ol>\n<li>\n<p>消除取值重复的行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span><span class=\"operator\">|</span><span class=\"keyword\">DISTINCT</span>]<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列表题别名][,<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列标题别名]]...</span><br><span class=\"line\"><span class=\"comment\">-- DISTINCT消除重复的行</span></span><br><span class=\"line\"><span class=\"comment\">-- ALL保留重复的行</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查询满足条件的元组</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span><span class=\"operator\">|</span><span class=\"keyword\">DISTINCT</span>]<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列表题别名][,<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列标题别名]]...</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"operator\">&lt;</span>条件表达式<span class=\"operator\">&gt;</span> <span class=\"comment\">-- WHERE语句实现</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>确定集合： <code>IN/NOT IN</code></p>\n</li>\n<li>\n<p>字符串匹配： <code>[NOT] LIKE'&lt;匹配串&gt;' [ESCAPE '&lt;换码字符&gt;']</code></p>\n<ul>\n<li>\n<p>&lt;匹配串&gt; 中可以含有通配符 %（表示任意长度的字符串，长度可以为 0）和_（表示任意单个字符）</p>\n</li>\n<li>\n<p>如果匹配串中不含通配符， <code>LIKE</code>  可以用 <code>=</code>  代替</p>\n</li>\n<li>\n<p>如果要查询的字符串中本身含有 % 或_，那么就要用 <code>[ESCAPE '&lt;换码字符&gt;']</code>  进行转义</p>\n</li>\n</ul>\n<p><strong>eg</strong>：查询以 &quot;DB_&quot; 开头，且倒数第三个字符为 i 的课程的详细信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Course</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Cname <span class=\"keyword\">LIKE</span><span class=\"string\">&#x27;DB\\_%i_ _&#x27;</span> <span class=\"keyword\">ESCAPE</span><span class=\"string\">&#x27;\\&#x27;</span> </span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>空值的查询： <code>IS [NOT] NULL</code></p>\n</li>\n<li>\n<p>多重条件查询： <code>AND/OR(AND优先级高于OR)</code></p>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"order-by\"><a class=\"markdownIt-Anchor\" href=\"#order-by\">#</a>  <code>ORDER BY</code></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span><span class=\"operator\">|</span><span class=\"keyword\">DISTINCT</span>]<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列表题别名][,<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列标题别名]]...</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"operator\">&lt;</span>条件表达式<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span> [<span class=\"keyword\">ASC</span><span class=\"operator\">|</span><span class=\"keyword\">DESC</span>] <span class=\"comment\">-- ASC升序，DESC降序；默认为ASC</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"聚集函数\"><a class=\"markdownIt-Anchor\" href=\"#聚集函数\">#</a> 聚集函数</h4>\n<h4 id=\"group-by\"><a class=\"markdownIt-Anchor\" href=\"#group-by\">#</a>  <code>GROUP BY</code></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span><span class=\"operator\">|</span><span class=\"keyword\">DISTINCT</span>]<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列表题别名][,<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列标题别名]]...</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"operator\">&lt;</span>条件表达式<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"operator\">&lt;</span>列名<span class=\"number\">1</span><span class=\"operator\">&gt;</span> [<span class=\"keyword\">HAVING</span><span class=\"operator\">&lt;</span>条件表达式<span class=\"operator\">&gt;</span>] <span class=\"comment\">-- 将查询结果按某一列或多列的值进行分组，HAVING语句指定筛选条件 </span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"operator\">&lt;</span>列名<span class=\"number\">2</span><span class=\"operator\">&gt;</span> [<span class=\"keyword\">ASC</span><span class=\"operator\">|</span><span class=\"keyword\">DESC</span>]</span><br></pre></td></tr></table></figure>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mtext>注：</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{注：}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord cjk_fallback\" style=\"color:red;\">注</span><span class=\"mord cjk_fallback\" style=\"color:red;\">：</span></span></span></span></span> WHERE 作用于基本表或者视图；HAVING 作用于组</p>\n<p>例：查询每个部门的总的薪水数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> DEPT, <span class=\"built_in\">sum</span>(SALARY) <span class=\"keyword\">AS</span> total</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> STAFF</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> DEPT <span class=\"comment\">-- 是每个部门的而不是整个公司的</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"连接查询\"><a class=\"markdownIt-Anchor\" href=\"#连接查询\">#</a> 连接查询</h3>\n<h4 id=\"等值与非等值连接查询\"><a class=\"markdownIt-Anchor\" href=\"#等值与非等值连接查询\">#</a> 等值与非等值连接查询</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*连接查询的WHERE子句中用来连接两个表的条件称为连接条件或连接谓词*/</span></span><br><span class=\"line\"><span class=\"comment\">-- 连接谓词：</span></span><br><span class=\"line\">[<span class=\"operator\">&lt;</span>表名<span class=\"number\">1</span><span class=\"operator\">&gt;</span>.]<span class=\"operator\">&lt;</span>列名<span class=\"number\">1</span><span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span>比较运算符<span class=\"operator\">&gt;</span>[<span class=\"operator\">&lt;</span>表名<span class=\"number\">2</span><span class=\"operator\">&gt;</span>.]<span class=\"operator\">&lt;</span>列名<span class=\"number\">2</span><span class=\"operator\">&gt;</span></span><br><span class=\"line\">[<span class=\"operator\">&lt;</span>表名<span class=\"number\">1</span><span class=\"operator\">&gt;</span>.]<span class=\"operator\">&lt;</span>列名<span class=\"number\">1</span><span class=\"operator\">&gt;</span><span class=\"keyword\">BETWEEN</span>[<span class=\"operator\">&lt;</span>表名<span class=\"number\">2</span><span class=\"operator\">&gt;</span>.]<span class=\"operator\">&lt;</span>列名<span class=\"number\">2</span><span class=\"operator\">&gt;</span><span class=\"keyword\">AND</span>[<span class=\"operator\">&lt;</span>表名<span class=\"number\">3</span><span class=\"operator\">&gt;</span>.]<span class=\"operator\">&lt;</span>列名<span class=\"number\">3</span><span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>自然连接：把目标列中重复的属性列去掉</p>\n<h4 id=\"自身连接\"><a class=\"markdownIt-Anchor\" href=\"#自身连接\">#</a> 自身连接</h4>\n<p>给同一个表取两个别名，按照不同表的连接方式连接即可</p>\n<h4 id=\"外连接\"><a class=\"markdownIt-Anchor\" href=\"#外连接\">#</a> 外连接</h4>\n<p>连接两个表的时候，可能有的元素因为不满足条件，没有出现在最终的表格中；利用外连接可以在不满足条件的地方填上 NULL。左外连接，保留左边的表，右边的表不足的时候填上 NULL；右外连接同理。</p>\n<p><strong>eg</strong>：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">&lt;</span>列名<span class=\"number\">1</span><span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>列名<span class=\"number\">2</span><span class=\"operator\">&gt;</span>]...</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名<span class=\"number\">1</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> <span class=\"operator\">&lt;</span>表名<span class=\"number\">2</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">ON</span>([表名<span class=\"number\">1.</span>]<span class=\"operator\">&lt;</span>列名<span class=\"number\">1</span><span class=\"operator\">&gt;=</span>[表名<span class=\"number\">2.</span>]<span class=\"operator\">&lt;</span>列名<span class=\"number\">2</span><span class=\"operator\">&gt;</span>) <span class=\"comment\">-- 左外连接</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名<span class=\"number\">1</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> <span class=\"operator\">&lt;</span>表名<span class=\"number\">2</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">ON</span>([表名<span class=\"number\">1.</span>]<span class=\"operator\">&lt;</span>列名<span class=\"number\">1</span><span class=\"operator\">&gt;=</span>[表名<span class=\"number\">2.</span>]<span class=\"operator\">&lt;</span>列名<span class=\"number\">2</span><span class=\"operator\">&gt;</span>) <span class=\"comment\">-- 右外连接</span></span><br><span class=\"line\"><span class=\"comment\">-- 可以用USING来去掉结果中的重复值：FROM &lt;表名1&gt; RIGHT OUTER JOIN &lt;表名2&gt; USING(列名)</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"多表连接\"><a class=\"markdownIt-Anchor\" href=\"#多表连接\">#</a> 多表连接</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span><span class=\"operator\">|</span><span class=\"keyword\">DISTINCT</span>]<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>]...</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span>]...</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"operator\">&lt;</span>条件表达式<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌套查询\"><a class=\"markdownIt-Anchor\" href=\"#嵌套查询\">#</a> 嵌套查询</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mtext>注：</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{注：}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord cjk_fallback\" style=\"color:red;\">注</span><span class=\"mord cjk_fallback\" style=\"color:red;\">：</span></span></span></span></span> 子查询的 SELECT 语句中不能使用 ORDER BY</p>\n<ol>\n<li>\n<p>带有 IN 的子查询</p>\n<p>不相关子查询：子查询条件不依赖父节点</p>\n<p>相关子查询：子查询条件依赖父节点</p>\n<p><strong>eg</strong>：找出每个学生超过他自己选修课程平均成绩的课程号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*Sno--学号 Cno--课程号 SC--存储学号、课程号、成绩的表格 */</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Cno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC x</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> GRADE <span class=\"operator\">&gt;=</span> (<span class=\"keyword\">SELECT</span> <span class=\"built_in\">AVG</span>(GRADE)</span><br><span class=\"line\">                <span class=\"keyword\">FROM</span> SC y</span><br><span class=\"line\">                <span class=\"keyword\">WHERE</span> x.Sno <span class=\"operator\">=</span> y.Sno <span class=\"comment\">-- 表示是同一个学生的成绩</span></span><br><span class=\"line\">               );</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>带有比较运算符的子查询</p>\n</li>\n<li>\n<p>带有 ANY（SOME）或 ALL 的子查询</p>\n<ul>\n<li>\n<p>ANY – 某个 ； ALL – 所有</p>\n</li>\n<li>\n<p>可以用聚集函数 + 比较运算符代替 ANY/ALL，且聚集函数效率更高</p>\n<p>eg： <code>&lt;ANY 等价于 &lt;MAX</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>带有 EXISTS/NOT EXISTS 的子查询</p>\n<p>EXISTS：如果内层查询非空，返回真；否则返回假</p>\n<p>NOT EXISTS：如果内层非空，返回假；否则返回真</p>\n<p>由于没有全称量词，所以需要将题目转换成等价的用存在量词的形式</p>\n<p><strong>eg</strong>：查询选修了全部课程的学生姓名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*等价于查询 找到学生 没有一门课是ta不选的*/</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span> <span class=\"comment\">-- 不存在</span></span><br><span class=\"line\">\t(</span><br><span class=\"line\">        <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\">        <span class=\"keyword\">FROM</span> Course</span><br><span class=\"line\">        <span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span> <span class=\"comment\">-- 有一门课程没有ta</span></span><br><span class=\"line\">        \t(</span><br><span class=\"line\">                <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\">                <span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\">                <span class=\"keyword\">WHERE</span> Sno <span class=\"operator\">=</span> Student.Sno <span class=\"keyword\">AND</span> Cno <span class=\"operator\">=</span> Course.Cno</span><br><span class=\"line\">            )</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n<p><strong>eg</strong>：查询至少选修了学生 201215122 选修的全部课程的学生号码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*等价于查询学生x： 不存在这样的课程y 学生201215122选修了y 但是学生x没选修*/</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC SCX <span class=\"comment\">-- 查询学生x</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span></span><br><span class=\"line\">\t(</span><br><span class=\"line\">        <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"comment\">-- 查询课程y</span></span><br><span class=\"line\">        <span class=\"keyword\">FROM</span> SC SCY</span><br><span class=\"line\">        <span class=\"keyword\">WHERE</span> SCY.Sno <span class=\"operator\">=</span> <span class=\"string\">&#x27;201215122&#x27;</span> <span class=\"keyword\">AND</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span> <span class=\"comment\">-- 20121522选修了</span></span><br><span class=\"line\">                                (</span><br><span class=\"line\">                                    <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\">                                    <span class=\"keyword\">FROM</span> SC SCZ</span><br><span class=\"line\">                                    <span class=\"keyword\">WHERE</span> SCZ.Sno <span class=\"operator\">=</span> SCX.Sno <span class=\"keyword\">AND</span> SCZ.Cno <span class=\"operator\">=</span> SCY.Cno <span class=\"comment\">-- 就是查找学生x的学号是否在里面，以及201215122是否选修了这门课程；</span></span><br><span class=\"line\"><span class=\"comment\">-- 如果发现结果是后面的判断成立，前面的判断不成立，即“学生201215122选修了y 但是学生x没选修”，就返回空，又因为是NOT EXISTS所以表达式是True；于是第二层判断是True，那么又因为是NOT EXISTS所以第二层整体式False，那么这个就不是要找的学生x</span></span><br><span class=\"line\">                                )</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"集合查询\"><a class=\"markdownIt-Anchor\" href=\"#集合查询\">#</a> 集合查询</h3>\n<p>集合操作主要包括：并 <code>UNION</code> ，交 <code>INTERSECT</code> ，差 <code>EXCEPT</code></p>\n<h3 id=\"基于派生表的查询\"><a class=\"markdownIt-Anchor\" href=\"#基于派生表的查询\">#</a> 基于派生表的查询</h3>\n<p>子查询不仅可以出现在 WHERE 子句中，还可以出现在 FROM 子句中，这时子查询生成的临时派生表成为主查询的查询对象</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span><span class=\"operator\">|</span><span class=\"keyword\">DISTINCT</span>]<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列表题别名][,<span class=\"operator\">&lt;</span>目标表达式<span class=\"operator\">&gt;</span>[列标题别名]]...</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>表名或视图名<span class=\"operator\">&gt;</span>...]<span class=\"operator\">|</span>(<span class=\"operator\">&lt;</span><span class=\"keyword\">SELECT</span>语句<span class=\"operator\">&gt;</span>[<span class=\"keyword\">AS</span>]<span class=\"operator\">&lt;</span>别名<span class=\"operator\">&gt;</span>)<span class=\"comment\">-- 通过FROM生成派生表时AS关键字可以省略，但必须为派生表指定一个别名</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"operator\">&lt;</span>条件表达式<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"operator\">&lt;</span>列名<span class=\"number\">1</span><span class=\"operator\">&gt;</span> [<span class=\"keyword\">HAVING</span><span class=\"operator\">&lt;</span>条件表达式<span class=\"operator\">&gt;</span>] </span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"operator\">&lt;</span>列名<span class=\"number\">2</span><span class=\"operator\">&gt;</span> [<span class=\"keyword\">ASC</span><span class=\"operator\">|</span><span class=\"keyword\">DESC</span>]</span><br></pre></td></tr></table></figure>\n<p><strong>eg</strong>：找出每个学生超过自己选修课程平均成绩的课程号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Cno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC, (<span class=\"keyword\">SELECT</span> Sno, <span class=\"built_in\">AVG</span>(Grade)</span><br><span class=\"line\">          <span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\">          <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Sno</span><br><span class=\"line\">         )<span class=\"keyword\">AS</span> Avg_sc(avg_sno, avg_grade)</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> SC.Sno <span class=\"operator\">=</span> Avg_sc.avg_sno <span class=\"keyword\">AND</span> SC.Grade <span class=\"operator\">&gt;=</span> Avg_sc.avg_grade;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据更新\"><a class=\"markdownIt-Anchor\" href=\"#数据更新\">#</a> 数据更新</h2>\n<h3 id=\"插入数据\"><a class=\"markdownIt-Anchor\" href=\"#插入数据\">#</a> 插入数据</h3>\n<p>插入元组：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">INTO</span> <span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span>[(<span class=\"operator\">&lt;</span>属性列<span class=\"number\">1</span><span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>属性列<span class=\"number\">2</span><span class=\"operator\">&gt;</span>]...)]</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(<span class=\"operator\">&lt;</span>常量<span class=\"number\">1</span><span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>常量<span class=\"number\">2</span><span class=\"operator\">&gt;</span>]...);</span><br></pre></td></tr></table></figure>\n<ol>\n<li><code>INTO</code>  中没有出现的属性列默认取空值</li>\n<li>如果 <code>INTO</code>  语句中没有指明任何属性列名，则新插入的元组必须在每个属性列上均有值</li>\n<li><code>VALUES</code>  子句对新元组的各属性赋值，字符串常数要用单引号括起来</li>\n</ol>\n<p>插入子查询：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">INTO</span> <span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span>[(<span class=\"operator\">&lt;</span>属性列<span class=\"number\">1</span><span class=\"operator\">&gt;</span>)[,<span class=\"operator\">&lt;</span>属性列<span class=\"number\">2</span><span class=\"operator\">&gt;</span>...]]</span><br><span class=\"line\">子查询；<span class=\"comment\">-- SELECT语句</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"修改数据\"><a class=\"markdownIt-Anchor\" href=\"#修改数据\">#</a> 修改数据</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span><span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span><span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;=</span><span class=\"operator\">&lt;</span>表达式<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;=</span><span class=\"operator\">&lt;</span>表达式<span class=\"operator\">&gt;</span>]...</span><br><span class=\"line\">[<span class=\"keyword\">WHERE</span> <span class=\"operator\">&lt;</span>条件<span class=\"operator\">&gt;</span>];</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除数据\"><a class=\"markdownIt-Anchor\" href=\"#删除数据\">#</a> 删除数据</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span><span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span></span><br><span class=\"line\">[<span class=\"keyword\">WHERE</span><span class=\"operator\">&lt;</span>条件<span class=\"operator\">&gt;</span>];</span><br></pre></td></tr></table></figure>\n<h2 id=\"视图\"><a class=\"markdownIt-Anchor\" href=\"#视图\">#</a> 视图</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> <span class=\"operator\">&lt;</span>视图名<span class=\"operator\">&gt;</span>[(<span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>列名<span class=\"operator\">&gt;</span>]...)]</span><br><span class=\"line\"><span class=\"keyword\">AS</span><span class=\"operator\">&lt;</span>子查询<span class=\"operator\">&gt;</span></span><br><span class=\"line\">[<span class=\"keyword\">WITH</span> <span class=\"keyword\">CHECK</span> OPTION] <span class=\"comment\">-- 表示在对视图进行操作时保证更新、插入或删除的行满足视图中子查询中的条件表达式</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>组成视图的属性名或者全省略或者全部指定</li>\n<li>以下情况必须明确指定组成视图的所有列名\n<ul>\n<li>某个列式聚集函数或列表达式</li>\n<li>多表连接时选出了几个同名列作为视图的字段</li>\n<li>需要在视图中为某个列启用新的更合适的名字</li>\n</ul>\n</li>\n<li>把对视图的操作都转换成对基本表的操作</li>\n</ol>\n<p><strong>优点：</strong></p>\n<ol>\n<li>能多视角看待同一数据</li>\n<li>简化用户操作</li>\n<li>对机密数据提供安全保护</li>\n<li>对重构数据库提供了一定程度的逻辑独立性</li>\n</ol>\n<h1 id=\"数据库安全性\"><a class=\"markdownIt-Anchor\" href=\"#数据库安全性\">#</a> 数据库安全性</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410170910811.jpg\" alt=\"\"></p>\n<p>数据库安全性主要包括用户<strong>身份鉴别</strong>、<strong>多层存取控制</strong>、<strong>审计</strong>、<strong>视图</strong>和<strong>数据加密</strong>等安全技术。</p>\n<p><strong>自主存取控制</strong>与<strong>强制存取控制</strong>共同构成数据库管理系统的安全机制</p>\n<h2 id=\"身份鉴别\"><a class=\"markdownIt-Anchor\" href=\"#身份鉴别\">#</a> 身份鉴别</h2>\n<p>静态口令鉴别：静态口令一般由用户自己设定，这些口令是静态不变的</p>\n<p>动态口令鉴别：口令是动态变化的，每次鉴别时均需使用动态产生的新口令登录数据库管理系统，即采用一次一密的方法</p>\n<p>生物特征鉴别：通过生物特征进行认证的技术， 生物特征如指纹、虹膜和掌纹等</p>\n<p>智能卡鉴别：智能卡是一种<strong>不可复制的硬件</strong>，内置集成电路的芯片，具有硬件加密功能</p>\n<h2 id=\"自主存取控制dac\"><a class=\"markdownIt-Anchor\" href=\"#自主存取控制dac\">#</a> 自主存取控制 DAC</h2>\n<ul>\n<li>\n<p>用户对不同的数据对象有不同的存取权限</p>\n</li>\n<li>\n<p>用户还可将其拥有的存取权限转授给其他用户</p>\n</li>\n</ul>\n<p>通过 SQL 的<strong> GRANT</strong> 语句和<strong> REVOKE</strong> 语句实现对<strong>数据</strong>的操作权限</p>\n<h3 id=\"grant\"><a class=\"markdownIt-Anchor\" href=\"#grant\">#</a> GRANT</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>]...</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"operator\">&lt;</span>对象类型<span class=\"operator\">&gt;</span> <span class=\"operator\">&lt;</span>对象名<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>对象类型<span class=\"operator\">&gt;</span> <span class=\"operator\">&lt;</span>对象名<span class=\"operator\">&gt;</span>]…</span><br><span class=\"line\"><span class=\"keyword\">TO</span> <span class=\"operator\">&lt;</span>用户<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>用户<span class=\"operator\">&gt;</span>]... <span class=\"comment\">-- PUBLIC表示所有用户</span></span><br><span class=\"line\">[<span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> OPTION]; <span class=\"comment\">-- 获得该权限的用户可以把权限授予其他用户 </span></span><br></pre></td></tr></table></figure>\n<p>具体实例：</p>\n<p><strong>全部权限</strong>的授予</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILIGES</span><br></pre></td></tr></table></figure>\n<p>授予<strong>所有用户</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span> </span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC </span><br><span class=\"line\"><span class=\"keyword\">TO</span> PUBLIC;</span><br></pre></td></tr></table></figure>\n<p>对<strong>属性列</strong>的授权</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">UPDATE</span>(Sno), <span class=\"keyword\">SELECT</span> <span class=\"comment\">-- 明确指出列名</span></span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> Student </span><br><span class=\"line\"><span class=\"keyword\">TO</span> U4;</span><br></pre></td></tr></table></figure>\n<h3 id=\"revoke\"><a class=\"markdownIt-Anchor\" href=\"#revoke\">#</a> REVOKE</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>]...</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"operator\">&lt;</span>对象类型<span class=\"operator\">&gt;</span> <span class=\"operator\">&lt;</span>对象名<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>对象类型<span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span>对象名<span class=\"operator\">&gt;</span>]…</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>用户<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>用户<span class=\"operator\">&gt;</span>]...[CASCADE <span class=\"operator\">|</span> RESTRICT];</span><br></pre></td></tr></table></figure>\n<p>具体实例：</p>\n<p>收回<strong>所有用户</strong>对表 SC 的查询权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">SELECT</span> </span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> PUBLIC;</span><br></pre></td></tr></table></figure>\n<p>把用户 U5 对 SC 表的 INSERT 权限收回</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">INSERT</span> </span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">TABLE</span> SC </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> U5 </span><br><span class=\"line\">CASCADE;<span class=\"comment\">-- 系统只收回直接或间接从U5处获得的权限，如果U6从U5获得了INSERT权限，但是同时从U4获得了INSERT权限，则U6仍有INSERT权限</span></span><br></pre></td></tr></table></figure>\n<p>对<strong>创建数据库模式</strong>一类的数据库对象的授权则由数据库管理员<strong>在创建用户时实现</strong>。</p>\n<h3 id=\"创建用户\"><a class=\"markdownIt-Anchor\" href=\"#创建用户\">#</a> 创建用户</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> <span class=\"operator\">&lt;</span>username<span class=\"operator\">&gt;</span> </span><br><span class=\"line\">[<span class=\"keyword\">WITH</span>][DBA<span class=\"operator\">|</span>RESOURCE<span class=\"operator\">|</span><span class=\"keyword\">CONNECT</span>];</span><br></pre></td></tr></table></figure>\n<ul>\n<li>只有系统的超级用户才有创建一个新的数据库用户的权限</li>\n<li>默认拥有 CONNECT 权限</li>\n<li>拥有 RESOURCE 的用户可以创建基本表和视图，但不能创建模式</li>\n<li>拥有 DBA 的用户时超级用户</li>\n</ul>\n<h3 id=\"角色\"><a class=\"markdownIt-Anchor\" href=\"#角色\">#</a> 角色</h3>\n<p>角色是权限的集合</p>\n<p>角色的创建：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> ROLE <span class=\"operator\">&lt;</span>角色名<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>给角色授权:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>]… </span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"operator\">&lt;</span>对象类型<span class=\"operator\">&gt;</span>对象名 </span><br><span class=\"line\"><span class=\"keyword\">TO</span> <span class=\"operator\">&lt;</span>角色<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>角色<span class=\"operator\">&gt;</span>]…</span><br></pre></td></tr></table></figure>\n<p>将一个角色授予其他的角色或用户:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"operator\">&lt;</span>角色<span class=\"number\">1</span><span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>角色<span class=\"number\">2</span><span class=\"operator\">&gt;</span>]… </span><br><span class=\"line\"><span class=\"keyword\">TO</span> <span class=\"operator\">&lt;</span>角色<span class=\"number\">3</span><span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>用户<span class=\"number\">1</span><span class=\"operator\">&gt;</span>]… </span><br><span class=\"line\">[<span class=\"keyword\">WITH</span> ADMIN OPTION]<span class=\"comment\">-- 表示获得某种权限的角色或用户可以把这种权限再授予其他角色</span></span><br></pre></td></tr></table></figure>\n<p>角色权限的收回：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>权限<span class=\"operator\">&gt;</span>]…</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"operator\">&lt;</span>对象类型<span class=\"operator\">&gt;</span> <span class=\"operator\">&lt;</span>对象名<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"operator\">&lt;</span>角色<span class=\"operator\">&gt;</span>[,<span class=\"operator\">&lt;</span>角色<span class=\"operator\">&gt;</span>]…</span><br></pre></td></tr></table></figure>\n<h2 id=\"强制存取控制mac\"><a class=\"markdownIt-Anchor\" href=\"#强制存取控制mac\">#</a> 强制存取控制 MAC</h2>\n<ul>\n<li>每一个数据对象被标以一定的密级</li>\n<li>每一个用户也被授予某一个级别的许可证</li>\n</ul>\n<p>该机制只通过对数据的存储权限来进行安全控制，而数据本身并无安全标记。</p>\n<p>全部实体被分成主体和客体：</p>\n<p><strong>主体</strong>：系统中的活动实体，包括数据库管理系统所管理的实际用户和用户的各种进程</p>\n<p><strong>客体</strong>：系统中的被动实体，受主体操纵，包括 文件、基本表、索引、视图</p>\n<p>对于主体和客体，DBMS 为它们每个实例指派一个<strong>敏感度</strong></p>\n<p>敏感度标记分成若干级别：</p>\n<ul>\n<li>\n<p>绝密（Top Secret，TS）</p>\n</li>\n<li>\n<p>机密（Secret，S）</p>\n</li>\n<li>\n<p>可信（Confidential，C）</p>\n</li>\n<li>\n<p>公开（Public，P）</p>\n</li>\n</ul>\n<p><strong>TS&gt;=S&gt;=C&gt;=P</strong></p>\n<p>主体的敏感度标记称为<strong>许可证级别</strong>；客体的敏感度标记称为<strong>密级</strong></p>\n<p><strong>TCSEC/TDI 安全级别划分</strong>：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411061333961.png\" alt=\"\"></p>\n<p><strong>C1 级</strong></p>\n<ul>\n<li>能够实现对用户和数据的分离，进行<strong>自主存取控制（DAC）</strong>，保护或限制用户权限的传播。</li>\n</ul>\n<p><strong>C2 级</strong></p>\n<ul>\n<li>\n<p>安全产品的最低档次</p>\n</li>\n<li>\n<p>提供受控的存取保护，将 C1 级的 DAC 进一步<strong>细化</strong>，以<strong>个人身份注册</strong>负责，并实施<strong>审计</strong>和<strong>资源隔离</strong></p>\n</li>\n</ul>\n<p><strong>B1 级</strong></p>\n<ul>\n<li>\n<p>标记安全保护。“安全” 或 “可信的” 产品。</p>\n</li>\n<li>\n<p>对系统的数据加以标记，对标记的主体和客体<strong>实施强制存取控制（MAC）</strong>、<strong>审计</strong>等安全机制</p>\n</li>\n</ul>\n<p><strong>CC 评估保证级（EAL）划分</strong>：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411061333925.png\" alt=\"\"></p>\n<h2 id=\"视图机制\"><a class=\"markdownIt-Anchor\" href=\"#视图机制\">#</a> 视图机制</h2>\n<p>把要保密的数据对无权存取这些数据的用户<strong>隐藏</strong>起来，对数据提供一定程度的安全保护</p>\n<h2 id=\"审计机制\"><a class=\"markdownIt-Anchor\" href=\"#审计机制\">#</a> 审计机制</h2>\n<p>启用一个专用的审计日志，将用户对数据库的所有操作<strong>记录</strong>在上面。</p>\n<p>审计员利用审计日志，监控数据库中的各种行为，找出非法存取数据的人、时间和内容。</p>\n<p><strong>C2</strong> 以上安全级别的 DBMS<strong> 必须具有</strong>审计功能。</p>\n<p><strong>审计事件</strong>：服务器事件，系统权限，语句事件，模式对象事件</p>\n<p>防止审计员误删审计记录，审计日志必须<strong>先转储后删除</strong></p>\n<p><strong>只</strong>允许审计员查阅和转储审计记录，不允许任何用户新增和修改审计记录等</p>\n<h3 id=\"设置和取消审计\"><a class=\"markdownIt-Anchor\" href=\"#设置和取消审计\">#</a> 设置和取消审计</h3>\n<p>AUDIT 语句：设置审计功能</p>\n<p>NOAUDIT 语句：取消审计功能</p>\n<p>实例：</p>\n<p>对修改 SC 表结构或修改 SC 表数据的操作进行审计</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AUDIT <span class=\"keyword\">ALTER</span>,<span class=\"keyword\">UPDATE</span> </span><br><span class=\"line\"><span class=\"keyword\">ON</span> SC;</span><br></pre></td></tr></table></figure>\n<p>取消对 SC 表的一切审计</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NOAUDIT <span class=\"keyword\">ALTER</span>,<span class=\"keyword\">UPDATE</span> </span><br><span class=\"line\"><span class=\"keyword\">ON</span> SC;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据加密\"><a class=\"markdownIt-Anchor\" href=\"#数据加密\">#</a> 数据加密</h2>\n<p>数据加密：防止数据库中数据在存储和传输中失密的有效手段</p>\n<p>加密的基本思想：根据一定的算法将原始数据 —<strong> 明文</strong>变换为不可直接识别的格式 —<strong> 密文</strong></p>\n<p>加密方法：</p>\n<ul>\n<li>\n<p>存储加密</p>\n<ul>\n<li>\n<p>透明存储加密</p>\n<ol>\n<li>内核级加密保护方式，对用户完全透明</li>\n<li>将数据在写到磁盘时对数据进行加密，授权用户读取数据时再对其进行解密</li>\n<li>数据库的应用程序不需要做任何修改，只需在创建表语句中说明加密的字段即可</li>\n<li>内核级加密方法：性能较好，安全完备性较高</li>\n</ol>\n</li>\n<li>\n<p>非透明存储加密：通过多个加密函数实现</p>\n</li>\n</ul>\n</li>\n<li>\n<p>传输加密</p>\n<ul>\n<li>\n<p>链路加密</p>\n<ol>\n<li>在链路层进行加密</li>\n<li>传输信息由报头和报文两部分组成，报文和报头均加密</li>\n</ol>\n</li>\n<li>\n<p>端到端加密</p>\n<ol>\n<li>在发送端加密，接收端解密</li>\n<li>只加密报文不加密报头</li>\n<li>所需密码设备数量相对较少，容易被非法监听者发现并从中获取敏感信息</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"数据库完整性\"><a class=\"markdownIt-Anchor\" href=\"#数据库完整性\">#</a> 数据库完整性</h1>\n<p>DBMS 的完整性控制机制具有：定义功能、检查功能、违约处理功能。</p>\n<h2 id=\"实体完整性-2\"><a class=\"markdownIt-Anchor\" href=\"#实体完整性-2\">#</a> 实体完整性</h2>\n<p>关系模型中以<strong>主码</strong>作为唯一性标识，主属性不能取空值。</p>\n<p>定义主码：</p>\n<ul>\n<li>如果只有一个属性是码，可以在列后加上 <code>PRIMARY KEY</code> ，也可以在表的最后表级定义主码， <code>PRIMARY KEY (Sno)</code></li>\n<li>如果多个属性是主码，只能在标的最后表级定义主码， <code>PRIMARY KEY (Sno,Cno)</code></li>\n</ul>\n<h3 id=\"实体完整性的检查\"><a class=\"markdownIt-Anchor\" href=\"#实体完整性的检查\">#</a> 实体完整性的检查</h3>\n<p>插入或对主码列进行更新操作时，进行实体完整性规则检查：</p>\n<ol>\n<li>\n<p>检查主码的各个属性是否为空，只要有一个为空就拒绝插入或修改。</p>\n</li>\n<li>\n<p>检查主码值是否唯一，如果不唯一则拒绝插入或修改。</p>\n</li>\n</ol>\n<p>检查记录中的主码，如果使用全表扫描，非常耗时，所以数据库管理系统一般会在主码上自动建立一个索引，通过 B + 树索引查找基本表中是否已经存在新的主码值</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410170910597.jpg\" alt=\"\"></p>\n<h2 id=\"参照完整性-2\"><a class=\"markdownIt-Anchor\" href=\"#参照完整性-2\">#</a> 参照完整性</h2>\n<p>外码或者取<strong>空值</strong>，或者等于对应元组的某个<strong>存在的主码值</strong></p>\n<p>在表级定义参照完整性： <code>FOREIGN KEY (Cno) REFERENCES Course(Cno)</code></p>\n<h3 id=\"参照完整性的检查\"><a class=\"markdownIt-Anchor\" href=\"#参照完整性的检查\">#</a> 参照完整性的检查</h3>\n<p>可能得违规行为：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410170913840.png\" alt=\"\"></p>\n<p>处理方式：</p>\n<ul>\n<li>拒绝执行 <code>NO ACTION</code> ，该策略为<strong>默认</strong>策略</li>\n<li>级联操作 <code>CASCADE</code> ，当删除或修改被参照表的一个元组导致参照表的不一致时，删除或修改参照表中的所有导致不一致的元组</li>\n<li>设置为空值</li>\n</ul>\n<p>显示说明参照完整性的违规处理情况</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">( </span><br><span class=\"line\">    Sno <span class=\"type\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>，</span><br><span class=\"line\">    Cno <span class=\"type\">CHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>，</span><br><span class=\"line\">    Grade <span class=\"type\">SMALLINT</span>,</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY(Sno,Cno)，</span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN</span> KEY (Sno) <span class=\"keyword\">REFERENCES</span> Student(Sno)</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> CASCADE <span class=\"comment\">/*级联删除SC表中相应的元组*/</span></span><br><span class=\"line\">    <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> CASCADE, <span class=\"comment\">/*级联更新SC表中相应的元组*/</span></span><br><span class=\"line\">    <span class=\"keyword\">FOREIGN</span> KEY (Cno) <span class=\"keyword\">REFERENCES</span> Course(Cno)</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> <span class=\"keyword\">NO</span> ACTION </span><br><span class=\"line\">    <span class=\"comment\">/*当删除course 表中的元组造成了与SC表不一致时拒绝删除*/</span></span><br><span class=\"line\">    <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> CASCADE </span><br><span class=\"line\">    <span class=\"comment\">/*当更新course表中的cno时，级联更新SC表中相应的元组*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h2 id=\"用户定义的完整性-2\"><a class=\"markdownIt-Anchor\" href=\"#用户定义的完整性-2\">#</a> 用户定义的完整性</h2>\n<p>提供定义和检验这类完整性的机制</p>\n<p>不允许取空值：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC</span><br><span class=\"line\">( </span><br><span class=\"line\">     Sno <span class=\"type\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">     Cno <span class=\"type\">CHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">     Grade <span class=\"type\">SMALLINT</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">     <span class=\"keyword\">PRIMARY</span> KEY (Sno, Cno), </span><br><span class=\"line\"> …</span><br><span class=\"line\"><span class=\"comment\">/*如果在表级定义实体完整性，隐含了Sno，Cno不允许取空值，则在列级不允许取空值的定义可以不写*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>列值唯一：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> DEPT </span><br><span class=\"line\">( </span><br><span class=\"line\">    Deptno <span class=\"type\">NUMERIC</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">    Dname <span class=\"type\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>，</span><br><span class=\"line\">    Location <span class=\"type\">CHAR</span>(<span class=\"number\">10</span>), <span class=\"keyword\">PRIMARY</span> KEY (Deptno) </span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>用 CHECK 短语指定列值应该满足的条件：</p>\n<p>当学生的性别是男时，其名字不能以 Ms. 打头</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">( </span><br><span class=\"line\">    Sno <span class=\"type\">CHAR</span>(<span class=\"number\">9</span>), </span><br><span class=\"line\">    Sname <span class=\"type\">CHAR</span>(<span class=\"number\">8</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>，</span><br><span class=\"line\">    Ssex <span class=\"type\">CHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">    Sage <span class=\"type\">SMALLINT</span>,</span><br><span class=\"line\">    Sdept <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY (Sno),</span><br><span class=\"line\">    <span class=\"keyword\">CHECK</span> (Ssex<span class=\"operator\">=</span><span class=\"string\">&#x27;女&#x27;</span> <span class=\"keyword\">OR</span> Sname <span class=\"keyword\">NOT</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;Ms.%&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\">/*定义了元组中Sname和 Ssex两个属性值之间的约束条件*/</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h2 id=\"完整性约束命名\"><a class=\"markdownIt-Anchor\" href=\"#完整性约束命名\">#</a> 完整性约束命名</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> <span class=\"operator\">&lt;</span>完整性约束条件名<span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span>完整性约束条件<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>&lt;完整性约束条件&gt; 包括 NOT NULL、UNIQUE、PRIMARY KEY 短语、FOREIGN KEY 短语、CHECK 短语等</p>\n<p>实例：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">( </span><br><span class=\"line\">    Sno <span class=\"type\">NUMERIC</span>(<span class=\"number\">6</span>)</span><br><span class=\"line\">    \t<span class=\"keyword\">CONSTRAINT</span> C1 <span class=\"keyword\">CHECK</span> (Sno <span class=\"keyword\">BETWEEN</span> <span class=\"number\">90000</span> <span class=\"keyword\">AND</span> <span class=\"number\">99999</span>),</span><br><span class=\"line\">    Sname <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">   \t\t<span class=\"keyword\">CONSTRAINT</span> C2 <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    Sage <span class=\"type\">NUMERIC</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\">    \t<span class=\"keyword\">CONSTRAINT</span> C3 <span class=\"keyword\">CHECK</span> (Sage <span class=\"operator\">&lt;</span> <span class=\"number\">30</span>),</span><br><span class=\"line\">    Ssex <span class=\"type\">CHAR</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">    \t<span class=\"keyword\">CONSTRAINT</span> C4 <span class=\"keyword\">CHECK</span> (Ssex <span class=\"keyword\">IN</span> ( ‘男’,<span class=\"string\">&#x27;女&#x27;</span>)),</span><br><span class=\"line\">    <span class=\"keyword\">CONSTRAINT</span> StudentKey <span class=\"keyword\">PRIMARY</span> KEY(Sno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>修改完整性限制：</p>\n<p>先 DROP 再 ADD：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student </span><br><span class=\"line\">\t<span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> C1;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Student</span><br><span class=\"line\">\t<span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> C1 <span class=\"keyword\">CHECK</span> (Sno <span class=\"keyword\">BETWEEN</span> <span class=\"number\">900000</span> <span class=\"keyword\">AND</span> <span class=\"number\">999999</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"断言\"><a class=\"markdownIt-Anchor\" href=\"#断言\">#</a> 断言</h2>\n<p>任何使断言不为真值的操作都会被拒绝执行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> ASSERTION<span class=\"operator\">&lt;</span>断言名<span class=\"operator\">&gt;</span><span class=\"operator\">&lt;</span><span class=\"keyword\">CHECK</span> 子句<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>实例： 限制数据库课程最多 60 名学生选修</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> ASSERTION ASSE_SC_DB_NUM </span><br><span class=\"line\"><span class=\"keyword\">CHECK</span> (<span class=\"number\">60</span> <span class=\"operator\">&gt;=</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"comment\">/*此断言的谓词涉及聚集操作count的SQL语句*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">From</span> Course,SC</span><br><span class=\"line\">\t<span class=\"keyword\">Where</span> SC.Cno<span class=\"operator\">=</span>Course.Cno <span class=\"keyword\">and</span> Course.Cname <span class=\"operator\">=</span><span class=\"string\">&#x27;数据库&#x27;</span>) </span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>修改断言：</p>\n<p>限制每个学期每一门课程最多 60 名学生选修</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> SC </span><br><span class=\"line\"><span class=\"keyword\">ADD</span> TERM <span class=\"type\">DATE</span>; <span class=\"comment\">-- 首先需要修改SC表，增加一个“TERM”属性，类型为DATE</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> ASSERTION ASSE_SC_CNUM2</span><br><span class=\"line\"><span class=\"keyword\">CHECK</span>(<span class=\"number\">60</span> <span class=\"operator\">&gt;=</span> <span class=\"keyword\">ALL</span>(</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) </span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\">\t<span class=\"keyword\">GROUP</span> <span class=\"keyword\">by</span> cno,TERM)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h2 id=\"触发器\"><a class=\"markdownIt-Anchor\" href=\"#触发器\">#</a> 触发器</h2>\n<ol>\n<li>\n<p>触发器保存在<strong>数据库服务器</strong>中</p>\n</li>\n<li>\n<p>任何用户对表的增、删、改操作均由服务器<strong>自动</strong>激活相应的触发器</p>\n</li>\n<li>\n<p>触发器可以实施更为复杂的检查和操作，具有更精细和更强大的数据控制能力</p>\n</li>\n<li>\n<p><strong>表</strong>的<strong>拥有者</strong>才可以在表上<strong>创建</strong>触发器</p>\n</li>\n<li>\n<p>触发器<strong>只</strong>能定义在<strong>基本表</strong>上，不能定义在视图</p>\n</li>\n</ol>\n<p>定义：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> <span class=\"operator\">&lt;</span>触发器名<span class=\"operator\">&gt;</span> </span><br><span class=\"line\">&#123;BEFORE <span class=\"operator\">|</span> AFTER&#125; <span class=\"operator\">&lt;</span>触发事件<span class=\"operator\">&gt;</span> <span class=\"keyword\">ON</span> <span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">REFERENCING</span> <span class=\"keyword\">NEW</span><span class=\"operator\">|</span><span class=\"keyword\">OLD</span> <span class=\"type\">ROW</span> <span class=\"keyword\">AS</span><span class=\"operator\">&lt;</span>变量<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> &#123;<span class=\"type\">ROW</span> <span class=\"operator\">|</span> STATEMENT&#125;</span><br><span class=\"line\">[<span class=\"keyword\">WHEN</span> <span class=\"operator\">&lt;</span>触发条件<span class=\"operator\">&gt;</span>]<span class=\"operator\">&lt;</span>触发动作体<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>详细说明：</p>\n<ol>\n<li>\n<p><code>FOR EACH ROW</code>  是行级触发器， <code>FOR EACH STATEMENT</code>  是语句级触发器</p>\n<p>eg：假设表 TEACHER 有 1000 行，在表上创建了一个触发器，触发事件是 <code>UPDATE TEACHER SET Deptno=5;</code></p>\n<ul>\n<li>如果是<strong>语句</strong>级触发器，那么执行完 UPDATE 后触发动作执行<strong>一次</strong></li>\n<li>如果是<strong>行级</strong>触发器，触发动作执行<strong> 1000</strong> 次</li>\n</ul>\n</li>\n<li>\n<p>如果省略 WHEN 触发条件，则触发动作体在触发器激活后立即执行</p>\n</li>\n<li>\n<p>如果是<strong>行级</strong>触发器，用户都可以在过程体中使用 NEW 和 OLD 引用事件之后的新值和事件之前的旧值；如果是<strong>语句</strong>级触发器，则不能使用 NEW 或 OLD 进行引用</p>\n</li>\n</ol>\n<p>实例 1：当对表 SC 的 Grade 属性进行修改时，若分数增加了 10% 则将此次操作记录到下面表中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><msub><mi>C</mi><mi>U</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator=\"true\">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo separator=\"true\">,</mo><mi>O</mi><mi>l</mi><mi>d</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi><mo separator=\"true\">,</mo><mi>N</mi><mi>e</mi><mi>w</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">SC_U(Sno,Cno,Oldgrade,Newgrade)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span></span></span>，其中 Oldgrade 是修改前的分数，Newgrade 是修改后的分数。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> SC_T</span><br><span class=\"line\">AFTER <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">OF</span> Grade <span class=\"keyword\">ON</span> SC</span><br><span class=\"line\"><span class=\"keyword\">REFERENCING</span> <span class=\"keyword\">OLD</span> <span class=\"type\">row</span> <span class=\"keyword\">AS</span> OldTuple, <span class=\"keyword\">NEW</span> <span class=\"type\">row</span> <span class=\"keyword\">AS</span> NewTuple</span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> <span class=\"type\">ROW</span> </span><br><span class=\"line\"><span class=\"keyword\">WHEN</span> (NewTuple.Grade <span class=\"operator\">&gt;=</span> <span class=\"number\">1.1</span> <span class=\"operator\">*</span> OldTuple.Grade)</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> SC_U(Sno,Cno,OldGrade,NewGrade)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(OldTuple.Sno,OldTuple.Cno,OldTuple.Grade,NewTuple.Grade)</span><br></pre></td></tr></table></figure>\n<p>实例 2：将每次对表 Student 的插入操作所增加的学生个数记录到表 StudentInsertLog 中。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> Student_Count</span><br><span class=\"line\">AFTER <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ON</span> Student </span><br><span class=\"line\"><span class=\"comment\">/*指明触发器激活的时间是在执行INSERT后*/</span> </span><br><span class=\"line\"><span class=\"keyword\">REFERENCING</span> <span class=\"keyword\">NEW</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">AS</span> DELTA</span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> STATEMENT </span><br><span class=\"line\"><span class=\"comment\">/*语句级触发器, 即执行完INSERT语句后下面的触发动作体才执行一次*/</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> StudentInsertLog (Numbers)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">COUNT</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DELTA</span><br></pre></td></tr></table></figure>\n<p>删除触发器：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TRIGGER</span> <span class=\"operator\">&lt;</span>触发器名<span class=\"operator\">&gt;</span> <span class=\"keyword\">ON</span> <span class=\"operator\">&lt;</span>表名<span class=\"operator\">&gt;</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"delimiter\"><a class=\"markdownIt-Anchor\" href=\"#delimiter\">#</a> delimiter</h2>\n<p>默认情况下，delimiter 是分号 “;”。在命令行客户端中，如果有一行命令以分号结束，那么回车后 mysql 将会执行该</p>\n<p>命令。但有时候，不希望 MySQL 这么做。因为可能输入较多的语句，且语句中包含有分号。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">trigger</span> s_t.SC_trigger ;</span><br><span class=\"line\">delimiter <span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> SC_trigger after <span class=\"keyword\">update</span> <span class=\"keyword\">on</span> sc <span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span> </span><br><span class=\"line\">    if </span><br><span class=\"line\">    \tnew.grade <span class=\"operator\">&gt;=</span> <span class=\"number\">95</span> <span class=\"keyword\">then</span> </span><br><span class=\"line\">    \t<span class=\"keyword\">update</span> student <span class=\"keyword\">set</span> scholarship<span class=\"operator\">=</span><span class=\"string\">&#x27;是’ </span></span><br><span class=\"line\"><span class=\"string\">   \t\twhere (scholarship=&#x27;</span>否<span class=\"string\">&#x27;) AND (student.sno=new.sno) ;</span></span><br><span class=\"line\"><span class=\"string\">    end if;</span></span><br><span class=\"line\"><span class=\"string\">end;//</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"关系数据库理论\"><a class=\"markdownIt-Anchor\" href=\"#关系数据库理论\">#</a> 关系数据库理论</h1>\n<p><strong>数据依赖</strong>：一个关系内部属性与属性之间的一种约束关系，主要类型包括<strong>函数依赖 (FD)<strong> 和</strong>多值依赖 (MVD)</strong>。</p>\n<h2 id=\"函数依赖\"><a class=\"markdownIt-Anchor\" href=\"#函数依赖\">#</a> 函数依赖</h2>\n<p><strong>概念</strong>：设关系<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span>，U 是属性集，令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X,Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 是 U 的两个子集，对于任意 R 的一个关系 r，X 的每一个具体值，Y 都有唯一值与之对应<br>\n则称 X 决定函数 Y 或 Y 函数依赖于 X，记作 **<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>**（X 是自变量，Y 是因变量，一个 X 只能得到一个 Y）</p>\n<p><strong>非平凡的函数依赖</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，但<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊄</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y\\not\\subset X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span></p>\n<p><strong>平凡的函数依赖</strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，但<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊂</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y\\subset X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span></p>\n<p><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>←</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\leftarrow \\rightarrow Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></strong>：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X\\to Y,Y\\to X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span></p>\n<p><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>↛</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\nrightarrow Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">↛</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></strong>：Y 不依赖于函数 X</p>\n<p><strong>完全函数依赖</strong>：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，且对于 X 的任何一个真子集 X’，都有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>↛</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X&#x27;\\not\\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.946332em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，则称 Y 对 X 完全函数依赖，记作：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo><mover><mo><mo>⟶</mo></mo><mi>F</mi></mover></mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\stackrel{F}{\\longrightarrow} Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3003310000000001em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2893310000000002em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">⟶</span></span></span><span style=\"top:-3.7110000000000003em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></p>\n<p><strong>部分函数依赖</strong>：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\to Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，但 Y 对 X 不完全函数依赖，则称 Y 对 X 部分函数依赖，记作：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo><mover><mo><mo>⟶</mo></mo><mi>P</mi></mover></mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\stackrel{P}{\\longrightarrow} Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3003310000000001em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2893310000000002em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">⟶</span></span></span><span style=\"top:-3.7110000000000003em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></p>\n<p><strong>传递函数依赖</strong>：如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>⊄</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>Y</mi><mo>↛</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo>→</mo><mi>Z</mi><mo stretchy=\"false\">(</mo><mi>Z</mi><mo>⊄</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">X\\to Y(Y\\not\\subset X),Y\\not\\to X,Y\\to Z(Z\\not\\subset Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span> 则称 Z 对 X 传递函数依赖</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mtext>注：</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{注：}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord cjk_fallback\" style=\"color:red;\">注</span><span class=\"mord cjk_fallback\" style=\"color:red;\">：</span></span></span></span></span> 如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y→X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>, 即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>←</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X←→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">←</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，则 Z 直接依赖于 X，而不是传递函数依赖。</p>\n<h3 id=\"码\"><a class=\"markdownIt-Anchor\" href=\"#码\">#</a> 码</h3>\n<blockquote>\n<p>K 为属性或属性组合</p>\n</blockquote>\n<p><strong>超码</strong>：U 函数依赖于 K，即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>→</mo><mi>U</mi></mrow><annotation encoding=\"application/x-tex\">K\\to U</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span>，则称 K 是超码</p>\n<p><strong>候选码</strong>：若 $K\\stackrel {F}{\\longrightarrow} $U，则 K 为 R 的候选码</p>\n<p><strong>主码</strong>：若候选码多于一个，选定一个为主码</p>\n<p><strong>主属性</strong>：包含在任何一个候选码中的属性</p>\n<p><strong>非主属性 / 非码属性</strong>：不包含在任何一个候选码中的属性</p>\n<p><strong>全码</strong>：整个属性组是码</p>\n<p>eg： <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mo separator=\"true\">,</mo><mi>W</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(P,W,A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> ，P：演奏者 W：作品 A：听众。一个演奏者可以演奏多个作品，某一作品可被多个演奏者演奏，听众可以欣赏不同演奏者的不同作品，码为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>P</mi><mo separator=\"true\">,</mo><mi>W</mi><mo separator=\"true\">,</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(P,W,A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> 为全码</p>\n<p><strong>求候选码</strong>：将左部、右部出现的元素分别列出，划去同时出现在两边的属性，剩下的只出现的左部的一定是主属性；出现在右部的一定不是主属性。</p>\n<h2 id=\"多值依赖\"><a class=\"markdownIt-Anchor\" href=\"#多值依赖\">#</a> 多值依赖</h2>\n<p><strong>概念</strong>：设<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span> 是属性集 U 上的一个关系模式，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X,Y,Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 是 U 的子集，并且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo>=</mo><mi>U</mi><mo>−</mo><mi>X</mi><mo>−</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Z=U-X-Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span> 中多值依赖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 成立，当且仅当对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span> 的任一关系 r，给定的一对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span> 值，有一组 Y 的值，<strong>这组值仅仅决定于 x 值而与 z 值无关</strong>。</p>\n<p>eg：<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410162009688.jpg\" alt=\"\"></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>i</mi><mi>n</mi><mi>g</mi><mtext>（</mtext><mi>C</mi><mo separator=\"true\">,</mo><mi>T</mi><mo separator=\"true\">,</mo><mi>B</mi><mtext>）</mtext></mrow><annotation encoding=\"application/x-tex\">Teaching（C, T, B）</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord cjk_fallback\">（</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord cjk_fallback\">）</span></span></span></span>对于 C 的每一个值，T 有一组值与之对应，而不论 B 取何值。因此 T 多值依赖于 C，即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>→</mo><mo>→</mo><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">C→→T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>。</p>\n<p><strong>平凡的多值依赖</strong>：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo>=</mo><mi mathvariant=\"normal\">∅</mi></mrow><annotation encoding=\"application/x-tex\">Z=\\varnothing</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66334em;vertical-align:-0.08167em;\"></span><span class=\"mord amsrm\">∅</span></span></span></span>，则称<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 为平凡的多值连接</p>\n<h3 id=\"性质\"><a class=\"markdownIt-Anchor\" href=\"#性质\">#</a> 性质</h3>\n<p>** 对称性：** 若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo>=</mo><mi>U</mi><mo>−</mo><mi>X</mi><mo>−</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Z=U-X-Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></p>\n<p>** 传递性：** 若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>→</mo><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">Y→→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Z</mi><mo>−</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Z-Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></p>\n<p>函数依赖可以看做多值依赖的特殊情况。</p>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→→YZ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>。</p>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi><mo>∩</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y\\cap Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>。</p>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi><mo>−</mo><mi>Z</mi><mo separator=\"true\">,</mo><mi>X</mi><mo>→</mo><mo>→</mo><mi>Z</mi><mo>−</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y-Z,X→→Z-Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span>。</p>\n<h2 id=\"函数依赖和多值依赖的比较\"><a class=\"markdownIt-Anchor\" href=\"#函数依赖和多值依赖的比较\">#</a> 函数依赖和多值依赖的比较</h2>\n<ol>\n<li>\n<p>多值依赖的有效性与属性集的范围有关。即若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 在 U 上成立，则在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>Y</mi><mo>⊂</mo><mi>W</mi><mo>⊂</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">W(XY\\subset W\\subset U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span> 上一定成立；反之则不然。因为多值依赖的定义中不仅涉及属性组 X 和 Y，而且涉及 U 中其余属性 Z</p>\n</li>\n<li>\n<p>函数依赖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span> 上成立，则对于任何<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>Y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊂</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y&#x27;\\subset Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.790992em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 均有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><msup><mi>Y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">X→Y&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 成立</p>\n<p>多值依赖<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span></span></span></span> 上成立，却不能断言对于任何<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>Y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊂</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y&#x27;\\subset Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.790992em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 均有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mo>→</mo><msup><mi>Y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">X→→Y&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 成立</p>\n</li>\n</ol>\n<p>eg：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mo>→</mo><mi>B</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A\\to \\to BC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>，但是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to \\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 不成立</p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410162140664.jpg\" style=\"zoom: 33%;\" />\n<h2 id=\"范式\"><a class=\"markdownIt-Anchor\" href=\"#范式\">#</a> 范式</h2>\n<p>各范式之间的关系：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn><mi>N</mi><mi>F</mi><mo>⊂</mo><mn>4</mn><mi>N</mi><mi>F</mi><mo>⊂</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi><mo>⊂</mo><mn>3</mn><mi>N</mi><mi>F</mi><mo>⊂</mo><mn>2</mn><mi>N</mi><mi>F</mi><mo>⊂</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">5NF\\subset 4NF\\subset BCNF\\subset 3NF\\subset 2NF\\subset 1NF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord\">5</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span></p>\n<p><strong>规范化</strong>：一个低一级范式的关系模式，通过模式分解可以转换为若干个高一级范式的关系模式的集合。</p>\n<p><strong>1NF</strong>：每个列属性都是不可分的数据项。</p>\n<p>存在问题：数据冗余、更新异常、插入异常、删除异常</p>\n<p><strong>2NF</strong>：若关系模式<em> R</em>∈1NF，并且每一个<strong>非主属性</strong>都<strong>完全</strong>函数依赖于任何一个<strong>候选码</strong>，则<em> R</em>∈2NF</p>\n<p>单属性码的关系模式必然属于 2NF</p>\n<p><strong>3NF</strong>：设关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo>&gt;</mo><mo>∈</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R&lt;U,F&gt;∈1NF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>, 若<em> R</em> 中<strong>不存在</strong>这样的<strong>码<em> X</em></strong>、属性组<em> Y</em> 及非主属性<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo stretchy=\"false\">(</mo><mi>Z</mi><mo>⊄</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Z(Z \\not\\subset Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span>, 使得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mtext>，</mtext><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X→Y，Y→Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span> 成立，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>↛</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y\\not\\to X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 不成立，则称<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo>&gt;</mo><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R&lt;U,F &gt; ∈ 3NF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>。</p>\n<p>双目的关系模式必属于 3NF。</p>\n<p>eg：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410162201299.png\" alt=\"\"></p>\n<p><strong>BCNF</strong>：设关系模式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo>&gt;</mo><mo>∈</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R&lt;U,F &gt;∈1NF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>，若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X→Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> 且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊄</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y \\not\\subset X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 时<strong><em> X</em> 必含有码</strong>，则<em> R</em>&lt;<em>U</em>,<em>F</em> &gt;∈BCNF。即如果每一个决定属性集（左部）都包含候选码，则 R∈BCNF。</p>\n<ul>\n<li>\n<p>所有非主属性对每一个码都是完全函数依赖</p>\n</li>\n<li>\n<p>所有主属性对每一个不包含它的码也是完全函数依赖</p>\n</li>\n<li>\n<p>没有任何属性完全函数依赖于非码的任何一组属性</p>\n</li>\n<li>\n<p>一个候选码，一定是 BCNF；全码一定是 BCNF。</p>\n</li>\n</ul>\n<p>如果一个关系数据库中的所有关系模式都属于 BCNF，那么<strong>在函数依赖</strong>范畴内，它已实现了模式的彻底分解，达到了最高的规范化程度，消除了插入异常和删除异常。</p>\n<p><strong>4NF</strong>：关系模式<em> R</em>&lt;<em>U</em>,<em>F</em> &gt;∈1NF，如果对于<em> R</em> 的每个非平凡多值依赖<em> X</em>→→<em>Y</em>（<em>Y</em> ⊈ <em>X</em>），<em>X</em> 都含有码，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator=\"true\">,</mo><mi>F</mi><mo>&gt;</mo><mo>∈</mo><mn>4</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">R&lt;U,F&gt;∈4NF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>。</p>\n<p>限制关系模式的属性之间不允许有<strong>非平凡且非函数依赖</strong>的多值依赖。4NF 所允许的非平凡多值依赖实际上是函数依赖。</p>\n<p><strong>5NF</strong>：如果关系模式 R 中的每一个连接依赖均由 R 的候选码所隐含，则称此关系模式符合第五范式</p>\n<p><strong>判断方式</strong>：其中超键表示含有候选码的属性组合</p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410162224855.png\" style=\"zoom:67%;\" />\n<p><strong>规范化基本步骤</strong>：</p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410162309213.png\" alt=\"image-20241016230915160\" style=\"zoom:67%;\" />\n<h1 id=\"数据库设计\"><a class=\"markdownIt-Anchor\" href=\"#数据库设计\">#</a> 数据库设计</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410171138720.png\" alt=\"\"></p>\n<h2 id=\"需求分析\"><a class=\"markdownIt-Anchor\" href=\"#需求分析\">#</a> 需求分析</h2>\n<h3 id=\"数据字典\"><a class=\"markdownIt-Anchor\" href=\"#数据字典\">#</a> 数据字典</h3>\n<p><strong>数据项</strong>：数据项是不可再分的数据单位。</p>\n<p 数据项名,数据项含义说明,别名,数据类型,长度,取值范围,取值含义,与其他数据项的逻辑关系,数据项之间的联系=\"\">数据项描述 =</p>\n<p><strong>数据结构</strong>：数据结构反映了数据之间的组合关系。</p>\n<p>一个数据结构可以由若干个<strong>数据项</strong>组成，也可以由若干个<strong>数据结构</strong>组成，或由若干个数据项和数据结构<strong>混合</strong>组成。</p>\n<p>数据结构描述 = {数据结构名，含义说明，组成:{数据项或数据结构}}</p>\n<p><strong>数据流</strong>：数据流是数据结构在系统内传输的路径。</p>\n<p>数据流描述 = {数据流名，说明，数据流来源，数据流去向，组成:{数据结构}, 平均流量，高峰期流量}</p>\n<p><strong>数据存储</strong>：数据存储是数据结构停留或保存的地方，也是数据流的来源和去向之一。</p>\n<p>数据存储描述 = {数据存储名，说明，编号，输入的数据流，输出的数据流，组成:{数据结构}, 数据量，存取频度，存取方式}</p>\n<p><strong>处理过程</strong>：处理过程一般用判定表或判定树来描述。</p>\n<p>处理过程描述 = {处理过程名，说明，输入:{数据流}, 输出:{数据流}, 处理:{简要说明}}</p>\n<h2 id=\"概念结构设计\"><a class=\"markdownIt-Anchor\" href=\"#概念结构设计\">#</a> 概念结构设计</h2>\n<h3 id=\"e-r模型\"><a class=\"markdownIt-Anchor\" href=\"#e-r模型\">#</a> E-R 模型</h3>\n<p>E-R 图中所表示的联系是实体之间的联系。</p>\n<p><strong>实体</strong>：用<strong>矩形</strong>表示，矩形框内写明实体名</p>\n<p><strong>属性</strong>：用<strong>椭圆形</strong>表示，并用无向边将其与相应的实体型连接起来</p>\n<p><strong>联系</strong>：用<strong>菱形</strong>表示，菱形框内写明联系名，并用无向边分别与有关实体型连接起来，同时在无向边旁标上联系的类型（1∶1，1∶<em>n</em> 或<em> m</em>∶<em>n</em>）</p>\n<p>实例：某个工厂物资管理的概念模型</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410171138208.png\" alt=\"\"></p>\n<p><strong>E-R 图的集成</strong></p>\n<ul>\n<li>\n<p>合并：解决各分 E-R 图之间的冲突，将分 E-R 图合并起来生成初步 E-R 图。</p>\n<p>冲突主要包括：属性冲突、命名冲突、结构冲突</p>\n</li>\n<li>\n<p>修改和重构。消除不必要的冗余，生成基本 E-R 图。</p>\n</li>\n</ul>\n<p><strong>优化</strong></p>\n<p>对关系模式进行必要分解，提高数据操作效率和存储空间的利用率。</p>\n<h2 id=\"逻辑结构设计\"><a class=\"markdownIt-Anchor\" href=\"#逻辑结构设计\">#</a> 逻辑结构设计</h2>\n<p>把概念结构设计阶段设计好的基本 E-R 图<strong>转换</strong>为与选用数据库管理系统产品所支持的数据模型相符合的逻辑结构</p>\n<h2 id=\"物理结构设计\"><a class=\"markdownIt-Anchor\" href=\"#物理结构设计\">#</a> 物理结构设计</h2>\n<p>数据库在物理设备上的<strong>存储结构</strong>与<strong>存取方法</strong>称为数据库的物理结构，它依赖于选定的数据库管理系统。</p>\n<p>数据库管理系统常用存取方法</p>\n<ol>\n<li>\n<p>B + 树索引存取方法</p>\n</li>\n<li>\n<p>Hash 索引存取方法</p>\n</li>\n<li>\n<p>聚簇存取方法</p>\n</li>\n</ol>\n<p><strong>聚簇</strong>：为了提高某个属性（或属性组）的查询速度，把这个或这些属性（称为聚簇码）上具有相同值的元组集中存放在连续的物理块中称为聚簇。</p>\n<p><strong>聚簇索引</strong>：在一个基本表上最多只能建立一个聚簇索引</p>\n<p>聚簇索引的<strong>适用条件</strong>：</p>\n<ul>\n<li>\n<p>很少对基表进行增删操作</p>\n</li>\n<li>\n<p>很少对其中的变长列进行 修改操作</p>\n</li>\n</ul>\n<h2 id=\"数据库实施-运行和维护\"><a class=\"markdownIt-Anchor\" href=\"#数据库实施-运行和维护\">#</a> 数据库实施、运行和维护</h2>\n<h1 id=\"数据库编程\"><a class=\"markdownIt-Anchor\" href=\"#数据库编程\">#</a> 数据库编程</h1>\n<h2 id=\"嵌入式sql\"><a class=\"markdownIt-Anchor\" href=\"#嵌入式sql\">#</a> 嵌入式 SQL</h2>\n<p>为了区分 SQL 语句与主语言语句，所有 SQL 语句必须加前缀 <code>EXEC SQL</code> ，C 语句格式：  <code>EXEC SQL &lt;SQL语句&gt;;</code></p>\n<h3 id=\"与主语言之间的通信\"><a class=\"markdownIt-Anchor\" href=\"#与主语言之间的通信\">#</a> 与主语言之间的通信</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410171620681.png\" alt=\"\"></p>\n<p><strong>SQL 通信区</strong>：系统给应用程序若干信息，主要包括系统当前工作状态和运行环境的各种数据。</p>\n<p>使用 <code>EXEC SQL INCLUDE SQLCA</code>  定义通信区</p>\n<p>通信区的变量 <code>SQLCODE</code>  存放每次执行 SQL 语句后返回的代码；每执行完一条 SQL 语句都应该测试一下 SQLCODE 的值</p>\n<p><strong>主变量</strong>：嵌入式 SQL 语句中可以使用<strong>主语言的程序变量</strong>来输入或输出数据</p>\n<p>在 SQL 语句中使用主变量时，为了与数据库对象名（表名、视图名、列名等）区别，SQL 语句中的<strong>主变量名前</strong>要 ** 加冒号（:）** 作为标志</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 主变量和指示变量在中间定义</span></span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span> <span class=\"keyword\">DECLARE</span> SECTION</span><br><span class=\"line\">……</span><br><span class=\"line\"><span class=\"keyword\">END</span> <span class=\"keyword\">DECLARE</span> SECTION</span><br></pre></td></tr></table></figure>\n<p><strong>游标</strong>：为用户开设的一个数据缓冲区</p>\n<p>每个游标区都有一个名字，用户可以通过游标逐一获取记录并赋给主变量，交由主语言进一步处理。</p>\n<p><strong>建立和关闭数据库连接</strong>：</p>\n<p><strong>建立</strong>数据库连接： <code>EXEC SQL CONNECT TO target[AS connection-name][USER user-name]; </code></p>\n<p>target 是要连接的数据库服务器</p>\n<p>常见的服务器标识串，如 <code>&lt;dbname&gt;@&lt;hostname&gt;:&lt;port&gt;</code></p>\n<p><strong>关闭</strong>数据库连接 ：  <code>EXEC SQL DISCONNECT [connection];</code></p>\n<p>实例：</p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410171650317.jpg\" style=\"zoom:67%;\" />\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410171650713.jpg\" style=\"zoom:67%;\" />\n<h3 id=\"不使用游标的sql语句\"><a class=\"markdownIt-Anchor\" href=\"#不使用游标的sql语句\">#</a> 不使用游标的 SQL 语句</h3>\n<p><strong>查询结果为单记录的 SELECT 语句：</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">SELECT</span> Sno,Sname,Ssex,Sage,Sdept</span><br><span class=\"line\"><span class=\"keyword\">INTO</span>:Hsno,:Hname,:Hsex,:Hage,:Hdept</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sno<span class=\"operator\">=</span>:givensno; <span class=\"comment\">/*使用主变量givensno的值进行查询*/</span></span><br></pre></td></tr></table></figure>\n<p><strong>非 CURRENT 形式的增删改语句：</strong></p>\n<p>在 UPDATE 的 SET 字句和 WHERE 子句中可以使用主变量，SET 子句还可以使用指示变量</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gradeid<span class=\"operator\">=</span><span class=\"number\">-1</span>； <span class=\"comment\">/*gradeid为指示变量，赋为负值*/</span></span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> SC(Sno,Cno,Grade)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(:stdno,:couno,:gr :gradeid)； <span class=\"comment\">/*:stdno,:couno,:gr为主变量*/</span></span><br><span class=\"line\"><span class=\"comment\">-- 由于该学生刚选修课程，成绩应为空，所以要把指示变量赋为负值</span></span><br></pre></td></tr></table></figure>\n<p><strong>指示变量</strong>：是一个整型变量，用来 “指示” 所指主变量的值或条件</p>\n<ol>\n<li>\n<p>一个主变量可以附带一个指示变量指示变量的用途，指示输入主变量是否为空值</p>\n</li>\n<li>\n<p>检测输出变量是否为空值，值是否被截断</p>\n</li>\n</ol>\n<h3 id=\"使用游标的sql语句\"><a class=\"markdownIt-Anchor\" href=\"#使用游标的sql语句\">#</a> 使用游标的 SQL 语句</h3>\n<p><strong>查询结果为多条记录的 SELECT 语句</strong></p>\n<p><strong>游标的使用</strong></p>\n<p>说明游标 ： <code>EXEC SQL DECLARE &lt;游标名&gt; CURSOR FOR &lt;SELECT语句&gt;;</code></p>\n<p>打开游标： <code>EXEC SQL OPEN &lt;游标名&gt;;</code></p>\n<p>推进游标指针并取当前记录： <code>EXEC SQL FETCH &lt;游标名&gt; INTO &lt;主变量&gt;[&lt;指示变量&gt;][,&lt;主变量&gt;[&lt;指示变量&gt;]]...;</code></p>\n<p>关闭游标：  <code>EXEC SQL CLOSE &lt;游标名&gt;;</code></p>\n<p><strong>CURRENT 形式的 UPDATE 和 DELETE 语句</strong></p>\n<p>因为 UPDATE 和 DELETE 语句都是集合操作，如果只想修改或删除其中的<strong>某个数据</strong>，则需要用带游标的 SELECT 语句查出所有满足条件的记录，从中进一步找出要修改或删除的记录，然后用 CURRENT 形式的 UPDATE 和 DELETE 语句修改或删除之。即 UPDATE 语句和 DELETE 语句中要用子句： <code>WHERE CURRENT OF &lt;游标名&gt;</code></p>\n<p><strong>不能</strong>使用 CURRENT 形式的 UPDATE 语句和 DELETE 语句：</p>\n<ol>\n<li>\n<p>当游标定义中的 SELECT 语句带有 UNION 或 ORDER BY 子句</p>\n</li>\n<li>\n<p>该 SELECT 语句相当于定义了一个不可更新的视图</p>\n</li>\n</ol>\n<h3 id=\"动态sql\"><a class=\"markdownIt-Anchor\" href=\"#动态sql\">#</a> 动态 SQL</h3>\n<ul>\n<li>\n<p>允许在程序运行过程中临时 “组装” SQL 语句</p>\n</li>\n<li>\n<p>支持动态组装 SQL 语句和动态参数两种形式</p>\n</li>\n</ul>\n<p>eg：创建基本表 TEST</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">BEGIN</span> <span class=\"keyword\">DECLARE</span> SECTION;</span><br><span class=\"line\">\tconst <span class=\"type\">char</span> <span class=\"operator\">*</span>stmt<span class=\"operator\">=</span>&quot;CREATE TABLE test(a int);&quot;; </span><br><span class=\"line\">\t<span class=\"comment\">/*SQL语句主变量，内容是创建表的SQL语句*/</span></span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">END</span> <span class=\"keyword\">DECLARE</span> SECTION;</span><br><span class=\"line\">... </span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">EXECUTE</span> IMMEDIATE :stmt;</span><br><span class=\"line\"><span class=\"comment\">/*执行动态SQL语句*/</span></span><br></pre></td></tr></table></figure>\n<p>向 TEST 中插入元组</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">BEGIN</span> <span class=\"keyword\">DECLARE</span> SECTION;</span><br><span class=\"line\">\tconst <span class=\"type\">char</span> <span class=\"operator\">*</span>stmt <span class=\"operator\">=</span> &quot;INSERT INTO test VALUES(?);&quot;;</span><br><span class=\"line\">\t<span class=\"comment\">/*声明SQL主变量内容是INSERT语句 */</span></span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">END</span> <span class=\"keyword\">DECLARE</span> SECTION;</span><br><span class=\"line\">... </span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">PREPARE</span> mystmt <span class=\"keyword\">FROM</span> :stmt; <span class=\"comment\">/*准备语句*/</span></span><br><span class=\"line\">... </span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">EXECUTE</span> mystmt <span class=\"keyword\">USING</span> <span class=\"number\">100</span>; <span class=\"comment\">/*设定INSERT语句插入值100 */</span></span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> <span class=\"keyword\">SQL</span> <span class=\"keyword\">EXECUTE</span> mystmt <span class=\"keyword\">USING</span> <span class=\"number\">200</span>; <span class=\"comment\">/* 设定INSERT语句插入值200 */</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>使用参数符号（?）表示该位置的数据在运行时设定</p>\n</li>\n<li>\n<p>通过 PREPARE 语句准备主变量和 EXECUTE 绑定数据或主变量来完成</p>\n</li>\n</ul>\n<h2 id=\"过程化sql\"><a class=\"markdownIt-Anchor\" href=\"#过程化sql\">#</a> 过程化 SQL</h2>\n<h2 id=\"变量和常量定义\"><a class=\"markdownIt-Anchor\" href=\"#变量和常量定义\">#</a> 变量和常量定义</h2>\n<h3 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">变量名 数据类型 [[<span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>]:<span class=\"operator\">=</span> 初值表达式]</span><br><span class=\"line\">变量名 数据类型 [[<span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>] 初值表达式]</span><br></pre></td></tr></table></figure>\n<h3 id=\"常量\"><a class=\"markdownIt-Anchor\" href=\"#常量\">#</a> 常量</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常量名 数据类型 CONSTANT:<span class=\"operator\">=</span> 常量表达式</span><br></pre></td></tr></table></figure>\n<h2 id=\"流程控制\"><a class=\"markdownIt-Anchor\" href=\"#流程控制\">#</a> 流程控制</h2>\n<h3 id=\"条件控制\"><a class=\"markdownIt-Anchor\" href=\"#条件控制\">#</a> 条件控制</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IF <span class=\"keyword\">condition</span> <span class=\"keyword\">THEN</span></span><br><span class=\"line\">\t...</span><br><span class=\"line\"><span class=\"keyword\">ELSE</span> </span><br><span class=\"line\">\t...</span><br><span class=\"line\"><span class=\"keyword\">END</span> IF;</span><br></pre></td></tr></table></figure>\n<h3 id=\"循环控制\"><a class=\"markdownIt-Anchor\" href=\"#循环控制\">#</a> 循环控制</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--LOOP</span></span><br><span class=\"line\">LOOP</span><br><span class=\"line\">\t...</span><br><span class=\"line\"><span class=\"keyword\">END</span> LOOP;</span><br><span class=\"line\"><span class=\"comment\">-- WHILE-LOOP</span></span><br><span class=\"line\">WHILE <span class=\"keyword\">condition</span> LOOP</span><br><span class=\"line\">\t...</span><br><span class=\"line\"><span class=\"keyword\">END</span> LOOP;</span><br><span class=\"line\"><span class=\"comment\">-- FOR-LOOP</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> count <span class=\"keyword\">IN</span>[REVERSE]bound1 ... bound2 LOOP</span><br><span class=\"line\">\t...</span><br><span class=\"line\"><span class=\"keyword\">END</span> LOOP;</span><br><span class=\"line\"><span class=\"comment\">-- 无REVERSE：count从bound1到bound2</span></span><br><span class=\"line\"><span class=\"comment\">-- 有REVERSE：count从bound2到bound1</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"存储过程\"><a class=\"markdownIt-Anchor\" href=\"#存储过程\">#</a> 存储过程</h2>\n<p>存储过程的<strong>优点</strong></p>\n<p>1）运行效率高</p>\n<p>2）降低了客户机和服务器之间的通信量</p>\n<p>3）方便实施企业规则</p>\n<p>存储过程的用户接口</p>\n<p>1）创建存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">PROCEDURE</span> 过程名([参数<span class=\"number\">1</span>，参数<span class=\"number\">2</span>，...])</span><br><span class=\"line\"><span class=\"keyword\">AS</span> <span class=\"operator\">&lt;</span>过程化<span class=\"keyword\">SQL</span>块<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2）执行存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CALL</span><span class=\"operator\">/</span>PERFORM PROCEDURDE 过程名([参数<span class=\"number\">1</span>，参数<span class=\"number\">2</span>，...])</span><br></pre></td></tr></table></figure>\n<p>3）修改存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">PROCEDURE</span> 过程名<span class=\"number\">1</span> RENAME <span class=\"keyword\">TO</span> 过程名<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">PROCEDURE</span> 过程名 COMPILE</span><br></pre></td></tr></table></figure>\n<p>4）删除存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">PROCEDURE</span> 过程名();</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h2>\n<p>1）定义</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">FUNCTION</span> 函数名([参数<span class=\"number\">1</span>，参数<span class=\"number\">2</span>，...]) <span class=\"keyword\">RETURNS</span><span class=\"operator\">&lt;</span>类型<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">AS</span> <span class=\"operator\">&lt;</span>过程化<span class=\"keyword\">SQL</span>块<span class=\"operator\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2）执行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CALL</span><span class=\"operator\">/</span><span class=\"keyword\">SELECT</span> 函数名([参数<span class=\"number\">1</span>，参数<span class=\"number\">2</span>，...])</span><br></pre></td></tr></table></figure>\n<p>3）修改</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">FUNCTION</span> 过程名<span class=\"number\">1</span> RENAME <span class=\"keyword\">TO</span> 过程名<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">FUNCTION</span> 函数名 COMPILE</span><br></pre></td></tr></table></figure>\n<h2 id=\"odbc编程\"><a class=\"markdownIt-Anchor\" href=\"#odbc编程\">#</a> ODBC 编程</h2>\n<ol>\n<li>用户应用程序</li>\n<li>ODBC 驱动程序管理器</li>\n<li>数据库驱动程序</li>\n<li>ODBC 数据源管理</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410211826961.png\" alt=\"\"></p>\n<p><strong>ODBC 应用程序包括的内容</strong></p>\n<ul>\n<li>\n<p>请求连接数据库</p>\n</li>\n<li>\n<p>向数据源发送 SQL 语句</p>\n</li>\n<li>\n<p>为 SQL 语句执行结果分配存储空间，定义所读取的数据格式</p>\n</li>\n<li>\n<p>获取数据库操作结果或处理错误</p>\n</li>\n<li>\n<p>进行数据处理并向用户提交处理结果</p>\n</li>\n<li>\n<p>请求事务的提交和回滚操作</p>\n</li>\n<li>\n<p>断开与数据源的连接</p>\n</li>\n</ul>\n<p><strong>ODBC 应用程序不能直接存取数据库</strong></p>\n<p>其各种操作请求由<strong>驱动</strong>提交给关系数据库管理系统的<strong> ODBC 驱动程序</strong>所支持的函数来存取数据库</p>\n<p><strong>ODBC 3.0 标准提供了 76 个函数接口</strong></p>\n<ul>\n<li>\n<p>分配和释放环境句柄、连接句柄、语句句柄 (32 位整数，指针)</p>\n</li>\n<li>\n<p>连接函数（SQLDriverconnect 等）</p>\n</li>\n<li>\n<p>与信息相关的函数（SQLGetinfo、SQLGetFuction 等）</p>\n</li>\n<li>\n<p>事务处理函数（如 SQLEndTran）</p>\n</li>\n<li>\n<p>执行相关函数（SQLExecdirect、SQLExecute 等）</p>\n</li>\n<li>\n<p>编目函数，ODBC 3.0 提供了 11 个编目函数，如 SQLTables、SQLColumn 等。应用程序可以通过对编目函数的调用来获取数据字典的信息，如权限、表结构等</p>\n</li>\n</ul>\n<p><strong>ODBC 数据源</strong></p>\n<p>指定<strong>唯一</strong>的数据源名（Data Source Name，简称<strong> DSN</strong>），并映射到用户名、服务器名、所连接的数据库名等</p>\n<p><strong>工作流程</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ret=<span class=\"built_in\">SQLConnect</span>(kinghdbc,“KingbaseES ODBC”, SQL_NTS,“SYSTEM”, SQL_NTS, <span class=\"string\">&quot;MANAGER&quot;</span>,SQL_NTS);<span class=\"comment\">//配置数据源</span></span><br><span class=\"line\">ret=<span class=\"built_in\">SQLAllocHandle</span>(SQL_HANDLE_ENV,SQL_NULL_HANDLE,&amp;kinghenv);<span class=\"comment\">//初始化环境</span></span><br><span class=\"line\">ret=<span class=\"built_in\">SQLConnect</span>(serverhdbc,<span class=\"string\">&quot;SQLServer&quot;</span>, SQL_NTS, <span class=\"string\">&quot;sa“,SQL_NTS, &quot;</span>sa<span class=\"string\">&quot;,SQL_NTS);//建立连接</span></span><br><span class=\"line\"><span class=\"string\">ret=SQLAllocHandle(SQL_HANDLE_STMT,kinghdbc, &amp;kinghstmt);//分配语句句柄</span></span><br><span class=\"line\"><span class=\"string\">ret=SQLExecDirect(kinghstmt,&quot;</span>SELECT * FROM STUDENT<span class=\"string\">&quot;,SQL_NTS);//执行SQL语句</span></span><br><span class=\"line\"><span class=\"string\">ret=SQLBindCol(kinghstmt,4,SQL_C_LONG,&amp;sAge,0,&amp;cbAge);</span></span><br><span class=\"line\"><span class=\"string\">while ((ret=SQLFetch(kinghstmt))!=SQL_NO_DATA_FOUND) //结果集处理</span></span><br><span class=\"line\"><span class=\"string\">&#123; </span></span><br><span class=\"line\"><span class=\"string\">\tif(ret==SQL_ERROR) printf(&quot;</span>Fetch error\\n<span class=\"string\">&quot;);</span></span><br><span class=\"line\"><span class=\"string\">\telse ret=SQLExecute(serverhstmt);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">SQLFreeHandle(SQL_HANDLE_STMT,kinghstmt);//中止处理</span></span><br><span class=\"line\"><span class=\"string\">SQLDisconnect(serverhdbc);</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"关系查询优化\"><a class=\"markdownIt-Anchor\" href=\"#关系查询优化\">#</a> 关系查询优化</h1>\n<p>查询的开销主要包括：磁盘存取块数（I/O 代价），处理机时间（CPU 代价）以及查询的内存开销</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410211851376.png\" alt=\"\"></p>\n<h2 id=\"代数优化\"><a class=\"markdownIt-Anchor\" href=\"#代数优化\">#</a> 代数优化</h2>\n<blockquote>\n<p>关系代数表达式的优化</p>\n</blockquote>\n<p><strong>选择操作</strong>的实现：</p>\n<ol>\n<li>全表扫描算法：对于规模较小的表或要查找的元组均匀地分布在查找的表中，该算法简单有效。</li>\n<li>索引扫描算法：当选择率较低时，该算法效率更高。</li>\n</ol>\n<p><strong>连接操作</strong>的实现：</p>\n<ol>\n<li>嵌套循环算法</li>\n<li>排序 - 合并算法</li>\n<li>索引连接算法</li>\n<li>hash join 算法</li>\n</ol>\n<p>典型的<strong>启发式规则</strong></p>\n<p>1）<strong>选择</strong>运算应尽可能<strong>先</strong>做</p>\n<p>2）把<strong>投影</strong>运算和<strong>选择</strong>运算同时进行</p>\n<p>3）把投影同其前或其后的双目运算结合起来</p>\n<p>4）等值连接运算要比同样关系上的笛卡尔积省很多时间</p>\n<p>5）找出公共子表达式：构造中间结果文件，<strong>视图</strong>中构建公共表达式</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 通过构建公共表达式 PriceCTE，避免了重复计算 TotalPrice，提高了查询效率。</span></span><br><span class=\"line\"><span class=\"keyword\">WITH</span> PriceCTE <span class=\"keyword\">AS</span> (</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> OrderID, ProductID, Quantity <span class=\"operator\">*</span> UnitPrice <span class=\"keyword\">AS</span> TotalPrice </span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> OrderDetails</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> OrderID, TotalPrice <span class=\"keyword\">FROM</span> PriceCTE <span class=\"keyword\">WHERE</span> TotalPrice <span class=\"operator\">&gt;</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ProductID, TotalPrice <span class=\"keyword\">FROM</span> PriceCTE <span class=\"keyword\">WHERE</span> TotalPrice <span class=\"operator\">&lt;</span> <span class=\"number\">50</span>;</span><br></pre></td></tr></table></figure>\n<p><strong>查询树</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVgzNDExZDd0ZD9zcG1faWRfZnJvbT0zMzMuNzg4LnZpZGVvcG9kLnNlY3Rpb25zJmFtcDt2ZF9zb3VyY2U9ZWY1ZTUxMjc4MTk0NjBlMjYxODI5ODI5MzNjZmEyMWU=\">Query tree &amp; Optimization｜查询树和优化查询树</span></p>\n<ol>\n<li>先将 SQL 语句转换成关系表达式，然后化成初始的查询树</li>\n<li>将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> 运算向下移</li>\n<li>将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Π</mi></mrow><annotation encoding=\"application/x-tex\">\\Pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Π</span></span></span></span> 运算向下移</li>\n</ol>\n<h2 id=\"物理优化\"><a class=\"markdownIt-Anchor\" href=\"#物理优化\">#</a> 物理优化</h2>\n<blockquote>\n<p>存取路径和底层操作算法的选择</p>\n</blockquote>\n<p>基于规则的启发式优化：启发式规则是指那些在大多数情况下都适用的规则。</p>\n<p>基于代价估算的优化：优化器估算不同执行策略的代价，并选出最小代价的计划。</p>\n<p>两者结合的优化方法：</p>\n<ul>\n<li>先使用启发式规则，选取若干较优的候选方案</li>\n<li>然后分别计算这些候选方案的执行代价，选出最终的优化方案</li>\n</ul>\n<p><strong>选择操作</strong>的启发式规则</p>\n<ol>\n<li><strong>小</strong>关系：<strong>全表</strong>顺序扫描</li>\n<li><strong>大</strong>关系：\n<ul>\n<li>选择条件是” 主码 = 值 “，查询结果最多是一个元组，利用主码<strong>索引</strong></li>\n<li>选择条件是 “非主属性 = 值”/ 非等值查询或范围查询，查询结果<strong>比例较小</strong>利用<strong>索引</strong>扫描，否则利用全表扫描</li>\n<li><strong>AND</strong> 连接的合取选择条件，有索引用索引，否则用全表顺序扫描</li>\n<li><strong>OR</strong> 连接的析取选择条件，<strong>全表</strong>顺序扫描</li>\n</ul>\n</li>\n</ol>\n<p><strong>连接操作</strong>的启发式规则</p>\n<ol>\n<li>已按连接属性排序，选用排序 - 合并算法</li>\n<li>连接属性上有索引，利用索引连接算法</li>\n<li>一个表较小，使用 hash join 算法</li>\n<li>嵌套循环算法，选择其中<strong>较小</strong>的表作为<strong>外表</strong></li>\n</ol>\n<p><strong>代价估算</strong></p>\n<p><strong>全表扫描</strong>算法的代价估算公式</p>\n<ul>\n<li>\n<p>如果基本表大小为 B 块，全表扫描算法的代价 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext>＝</mtext><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">cost＝B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord cjk_fallback\">＝</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span></p>\n</li>\n<li>\n<p>如果选择条件是 “码＝值”，那么平均搜索代价 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext>＝</mtext><mi>B</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">cost＝B/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord cjk_fallback\">＝</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span></p>\n</li>\n</ul>\n<p><strong>索引扫描</strong>算法的代价估算公式</p>\n<ul>\n<li>\n<p>如果选择条件是 “码＝值”，则采用该表的主索引</p>\n<ul>\n<li>若为 B + 树，层数为 L，需要存取 B + 树中从根结点到叶结点 L 块，再加上基本表中该元组所在的那一块，所以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>L</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">cost=L+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>如果选择条件涉及非码属性，若为 B + 树索引，选择条件是相等比较，S 是索引的选择基数 (有 S 个元组满足条件)</p>\n<ul>\n<li>满足条件的元组可能会保存在不同的块上，所以 (最坏的情况)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>L</mi><mo>+</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">cost=L+S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>如果比较条件是＞，＞＝，＜，＜＝，假设有一半的元组满足条件，就要通过索引访问一半的表存储块，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo>=</mo><mi>L</mi><mo>+</mo><mi>Y</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>+</mo><mi>B</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">cost=L+Y/2+B/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span></p>\n</li>\n</ul>\n<p><strong>嵌套循环</strong>连接算法的代价估算公式</p>\n<ul>\n<li>\n<p>嵌套循环连接算法的代价，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext>＝</mtext><mi>B</mi><mi>r</mi><mo>+</mo><mi>B</mi><mi>r</mi><mi>B</mi><mi>s</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>K</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">cost＝Br+BrBs/(K-1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord cjk_fallback\">＝</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>\n</li>\n<li>\n<p>连接结果写回磁盘，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext>＝</mtext><mi>B</mi><mi>r</mi><mo>+</mo><mi>B</mi><mi>r</mi><mi>B</mi><mi>s</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>K</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>F</mi><mi>r</mi><mi>s</mi><mo>∗</mo><mi>N</mi><mi>r</mi><mo>∗</mo><mi>N</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>M</mi><mi>r</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">cost＝Br+Br Bs/(K-1)+(Frs*Nr*Ns)/Mrs</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord cjk_fallback\">＝</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">s</span></span></span></span></p>\n<ul>\n<li>其中 Frs 为连接选择性，表示连接结果元组数的比例，Mrs 是存放连接结果的块因子，表示每块中可以存放的结果元组数目</li>\n</ul>\n</li>\n</ul>\n<p><strong>排序 - 合并</strong>连接算法的代价估算公式</p>\n<ul>\n<li>如果连接表已经按照连接属性排好序，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext>＝</mtext><mi>B</mi><mi>r</mi><mo>+</mo><mi>B</mi><mi>s</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>F</mi><mi>r</mi><mi>s</mi><mo>∗</mo><mi>N</mi><mi>r</mi><mo>∗</mo><mi>N</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>M</mi><mi>r</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">cost＝Br+Bs+(Frs*Nr*Ns)/Mrs</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord cjk_fallback\">＝</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">s</span></span></span></span></li>\n<li>如果必须对文件排序，还需要在代价函数中加上排序的代价\n<ul>\n<li>对于包含 B 个块的文件排序的代价大约是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo>∗</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo>∗</mo><mi>B</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mn>2</mn><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(2*B)+(2*B*log2B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"数据库恢复\"><a class=\"markdownIt-Anchor\" href=\"#数据库恢复\">#</a> 数据库恢复</h1>\n<h2 id=\"事务\"><a class=\"markdownIt-Anchor\" href=\"#事务\">#</a> 事务</h2>\n<h3 id=\"定义-3\"><a class=\"markdownIt-Anchor\" href=\"#定义-3\">#</a> 定义</h3>\n<p><strong>事务</strong>是用户定义的一个数据库操作序列，这些操作要么全做，要么全不做，是<strong>不可分割</strong>的工作单位。</p>\n<p>在关系数据库中，一个事务可以是<strong>一条</strong> SQL 语句，<strong>一组</strong> SQL 语句或整个程序，一个程序通常包含<strong>多个</strong>事务</p>\n<p>事务是<strong>恢复</strong>和<strong>并发控制</strong>的基本单位</p>\n<p><strong>定义</strong>事务的语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">BEGIN</span> TRANSACTION;<span class=\"comment\">-- 开始</span></span><br><span class=\"line\"><span class=\"keyword\">COMMIT</span>;<span class=\"comment\">-- 提交，将事务中所有对数据库的更新写回到磁盘上的物理数据库中</span></span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span>; <span class=\"comment\">-- 回滚，运行中发生了某种故障，系统将事务中对数据库的所有已完成的操作全部撤销，回滚到事务开始的状态</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"acid特性\"><a class=\"markdownIt-Anchor\" href=\"#acid特性\">#</a> ACID 特性</h3>\n<p><strong>原子性 (Atomicity)</strong>：</p>\n<p>事务中包括的诸操作要么都做，要么都不做</p>\n<p><strong>一致性 (Consistency)</strong>：</p>\n<p>事务执行的结果必须是使数据库从一个<strong>一致性</strong>状态变到另一个<strong>一致性</strong>状态。数据库中只包含成功事务提交的结果</p>\n<p><strong>隔离性 (Isolation)</strong> ：</p>\n<p>并发执行的各个事务之间不能互相干扰</p>\n<p><strong>持续性 (Durability)</strong>：</p>\n<p>一个事务一旦提交，它对数据库中数据的改变就应该是永久性的</p>\n<h2 id=\"故障\"><a class=\"markdownIt-Anchor\" href=\"#故障\">#</a> 故障</h2>\n<h3 id=\"事务内部的故障\"><a class=\"markdownIt-Anchor\" href=\"#事务内部的故障\">#</a> 事务内部的故障</h3>\n<ul>\n<li>\n<p>软故障</p>\n</li>\n<li>\n<p>事务没有达到预期的终点 (COMMIT 或者显式的 ROLLBACK)</p>\n</li>\n<li>\n<p>事务撤消（UNDO）：强行回滚（ROLLBACK）该事务</p>\n</li>\n</ul>\n<h3 id=\"系统故障\"><a class=\"markdownIt-Anchor\" href=\"#系统故障\">#</a> 系统故障</h3>\n<blockquote>\n<p>是指造成系统停止运转的任何事件，使得系统要重新启动</p>\n</blockquote>\n<ul>\n<li>\n<p>软故障</p>\n</li>\n<li>\n<p>系统重新启动时，恢复程序让所有非正常终止的事务回滚，强行<strong>撤消</strong>（UNDO）所有<strong>未完成事务</strong></p>\n</li>\n<li>\n<p>恢复策略：系统重新启动时，恢复程序需要<strong>重做</strong>（REDO）所有<strong>已提交</strong>的事务</p>\n</li>\n</ul>\n<h3 id=\"介质故障\"><a class=\"markdownIt-Anchor\" href=\"#介质故障\">#</a> 介质故障</h3>\n<ul>\n<li>硬故障：外存故障。破坏数据库或部分数据库，并影响正在存取这部分数据的所有事务。</li>\n</ul>\n<h3 id=\"计算机病毒\"><a class=\"markdownIt-Anchor\" href=\"#计算机病毒\">#</a> 计算机病毒</h3>\n<h2 id=\"恢复实现技术\"><a class=\"markdownIt-Anchor\" href=\"#恢复实现技术\">#</a> 恢复实现技术</h2>\n<p>建立冗余数据最常用的技术是<strong>数据转储</strong>和<strong>登记日志文件</strong></p>\n<h3 id=\"数据转储\"><a class=\"markdownIt-Anchor\" href=\"#数据转储\">#</a> 数据转储</h3>\n<p><strong>转储</strong>是指数据库管理员定期地将整个数据库<strong>复制</strong>到存储介质上保存起来的过程，备用的数据称为<strong>后备副本</strong> (backup)</p>\n<p>将后备副本重新装入，将数据库<strong>恢复到转储时</strong>的状态；然后<strong>重新运行</strong>自转储<strong>以后</strong>的所有<strong>成功</strong>的事务</p>\n<p><strong>静态转储</strong></p>\n<ul>\n<li>\n<p>在系统中无运行事务时进行的转储操作</p>\n</li>\n<li>\n<p>转储开始时数据库处于一致性状态</p>\n</li>\n<li>\n<p>转储期间不允许对数据库的任何存取、修改活动</p>\n</li>\n<li>\n<p>得到的一定是一个数据一致性的副本</p>\n</li>\n<li>\n<p>优点：实现简单</p>\n</li>\n<li>\n<p>缺点：降低了数据库的可用性</p>\n<ul>\n<li>转储必须等待正运行的用户事务结束</li>\n<li>新的事务必须等转储结束</li>\n</ul>\n</li>\n</ul>\n<p><strong>动态转储</strong></p>\n<ul>\n<li>\n<p>转储操作与用户事务并发进行</p>\n</li>\n<li>\n<p>转储期间允许对数据库进行存取或修改</p>\n</li>\n<li>\n<p>优点</p>\n<ul>\n<li>不用等待正在运行的用户事务结束</li>\n<li>不会影响新事务的运行</li>\n</ul>\n</li>\n<li>\n<p>动态转储的缺点</p>\n<ul>\n<li>不能保证副本中的数据正确有效</li>\n<li>例：在转储期间的某时刻<em> T</em>c，系统把数据 A=100 转储到磁带上，而在下一时刻<em> T</em>d，某一事务将 A 改为 200。后备副本上的 A 过时了</li>\n</ul>\n</li>\n<li>\n<p>把动态转储<strong>期间</strong>各事务对数据库的修改活动<strong>记录到日志文件</strong>，<strong>后备副本加上日志文件</strong>就能把数据库恢复到某一时刻的正确状态</p>\n</li>\n</ul>\n<p><strong>海量转储</strong>：每次转储全部数据库</p>\n<p><strong>增量转储</strong>：只转储上次转储后更新过的数据</p>\n<h3 id=\"日志文件\"><a class=\"markdownIt-Anchor\" href=\"#日志文件\">#</a> 日志文件</h3>\n<p><strong>日志的格式和内容：</strong></p>\n<p>以<strong>记录</strong>为单位的日志文件</p>\n<ul>\n<li>\n<p>事务标识（标明是哪个事务）</p>\n</li>\n<li>\n<p>操作类型（插入、删除或修改）</p>\n</li>\n<li>\n<p>操作对象（记录 ID、Block NO.）</p>\n</li>\n<li>\n<p>更新前数据的旧值（对插入操作而言，此项为空值）</p>\n</li>\n<li>\n<p>更新后数据的新值（对删除操作而言，此项为空值）</p>\n</li>\n</ul>\n<p>以<strong>数据块</strong>为单位的日志文件</p>\n<ul>\n<li>\n<p>事务标识</p>\n</li>\n<li>\n<p>被更新的数据块</p>\n</li>\n</ul>\n<p><strong>日志的作用：</strong></p>\n<ul>\n<li>\n<p>用来记录事务对数据库的<strong>更新</strong>操作的文件</p>\n</li>\n<li>\n<p>进行事务故障恢复</p>\n</li>\n<li>\n<p>进行系统故障恢复</p>\n</li>\n<li>\n<p>协助后备副本进行介质故障恢复，不必重新运行那些已完成的事务</p>\n</li>\n</ul>\n<p><strong>登记日志文件：</strong></p>\n<ul>\n<li>\n<p>记录的次序严格按并发事务执行的时间次序</p>\n</li>\n<li>\n<p>必须<strong>先</strong>写<strong>日志文件</strong>，后写数据库</p>\n<ul>\n<li>写日志文件操作：把本次修改的记录到日志文件中</li>\n<li>写数据库操作：把对数据的修改写到数据库中</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"恢复策略\"><a class=\"markdownIt-Anchor\" href=\"#恢复策略\">#</a> 恢复策略</h2>\n<h3 id=\"事务故障的恢复\"><a class=\"markdownIt-Anchor\" href=\"#事务故障的恢复\">#</a> <strong>事务故障</strong>的恢复</h3>\n<p>事务故障的恢复由<strong>系统自动完成</strong>，对用户是透明的</p>\n<p>利用日志文件撤消（UNDO）此事务已对数据库进行的修改</p>\n<ol>\n<li>从日志最<strong>反向向前</strong>扫描日志文件，查找该事务的更新操作。</li>\n<li>对该事务的更新操作执行<strong>逆</strong>操作。</li>\n<li><strong>继续反向</strong>扫描日志文件，并做同样处理，<strong>直至</strong>读到此事务的<strong>开始标记</strong></li>\n</ol>\n<h3 id=\"系统故障的恢复\"><a class=\"markdownIt-Anchor\" href=\"#系统故障的恢复\">#</a> <strong>系统故障</strong>的恢复</h3>\n<p>由系统在<strong>重新启动时自动完成</strong>，不需要用户干预</p>\n<p><strong>Undo</strong> 故障发生时<strong>未完成</strong>的事务；<strong>Redo 已完成</strong>的事务</p>\n<ol>\n<li><strong>正向</strong>扫描日志文件</li>\n</ol>\n<p>（<strong>都有</strong>）既有 BEGIN TRANSACTION 也有 COMMIT<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span><strong> 重做</strong> (REDO) <strong>队列</strong></p>\n<p>（<strong>只有 BEGIN</strong>）只有 BEGIN TRANSACTION 无 COMMIT 记录<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span><strong> 撤销</strong> (UNDO)<strong> 队列</strong></p>\n<ol start=\"2\">\n<li>\n<p><strong>反向</strong>扫描日志文件，对 UNDO 队列<strong>事务</strong>进行<strong>撤销</strong>处理，执行逆操作，将 “更新前的值” 写入数据库</p>\n</li>\n<li>\n<p><strong>正向</strong>扫描日志文件，对 REDO 队列<strong>事务</strong>进行<strong>重做</strong>处理，将 “更新后的值” 写入数据库</p>\n</li>\n</ol>\n<h3 id=\"介质故障的恢复\"><a class=\"markdownIt-Anchor\" href=\"#介质故障的恢复\">#</a> <strong>介质故障</strong>的恢复</h3>\n<p><strong>重装</strong>数据库，<strong>重做已完成</strong>的事务</p>\n<p>介质故障的恢复需要<strong>数据库管理员</strong>介入（数据库管理员只需要重装最近转储的数据库副本和有关的各日志文件副本，然后执行系统提供的恢复命令即可，具体操作仍由数据库管理系统完成）</p>\n<ol>\n<li>\n<p><strong>装入</strong>最新的后备数据库<strong>副本</strong></p>\n<ul>\n<li>对于静态转储的数据库副本，装入后数据库即处于一致性状态</li>\n<li>对于动态转储的数据库副本，还须利用<strong>恢复系统故障</strong>的方法恢复</li>\n</ul>\n</li>\n<li>\n<p>装入转储结束时刻的<strong>日志</strong>文件副本 ，<strong>重做已完成的事务</strong></p>\n<ul>\n<li>扫描日志文件，找出<strong>已提交</strong>的事务的标识，记入<strong>重做</strong>队列</li>\n<li><strong>正向</strong>扫描日志文件，对重做队列中的所有事务进行重做处理。即将日志记录中 “更新后的值” 写入数据库</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"具有检查点的恢复\"><a class=\"markdownIt-Anchor\" href=\"#具有检查点的恢复\">#</a> 具有检查点的恢复</h3>\n<ol>\n<li>将当前日志缓冲区中的所有日志记录写入磁盘的日志文件上</li>\n<li>在日志文件中写入一个检查点记录</li>\n<li>将当前<strong>数据缓冲区</strong>的所有数据记录<strong>写入磁盘</strong>的数据库中</li>\n<li>把检查点记录在<strong>日志文件</strong>中地址<strong>写入重新开始文件</strong></li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410271753282.png\" alt=\"\"></p>\n<h2 id=\"镜像\"><a class=\"markdownIt-Anchor\" href=\"#镜像\">#</a> 镜像</h2>\n<p><strong>优点</strong></p>\n<p>出现介质故障时</p>\n<ul>\n<li>\n<p>可由镜像磁盘继续提供使用</p>\n</li>\n<li>\n<p>同时数据库管理系统自动利用镜像磁盘数据进行数据库的恢复</p>\n</li>\n<li>\n<p>不需要关闭系统和重装数据库副本</p>\n</li>\n</ul>\n<p>可用于并发操作</p>\n<ul>\n<li>\n<p>一个用户对数据加排他锁修改数据，其他用户可以读镜像数据库上的数据，而不必等待该用户释放锁频繁地复制数据自然会降低系统运行效率</p>\n</li>\n<li>\n<p>在实际应用中用户往往只选择对关键数据和日志文件镜像</p>\n</li>\n</ul>\n<h1 id=\"并发控制\"><a class=\"markdownIt-Anchor\" href=\"#并发控制\">#</a> 并发控制</h1>\n<h2 id=\"并发控制概述\"><a class=\"markdownIt-Anchor\" href=\"#并发控制概述\">#</a> 并发控制概述</h2>\n<p>多用户数据库系统：允许多个用户同时使用</p>\n<p><strong>事务并发执行带来的问题：</strong></p>\n<ul>\n<li>\n<p>会产生多个事务同时存取同一数据的情况</p>\n</li>\n<li>\n<p>可能会破坏事务隔离性和数据库的一致性</p>\n</li>\n<li>\n<p>数据库管理系统必须提供并发控制机制</p>\n</li>\n<li>\n<p>并发控制机制是衡量数据库管理系统性能的重要标志</p>\n</li>\n</ul>\n<p><strong>多事务执行方式</strong></p>\n<ol>\n<li>\n<p>事务串行执行：</p>\n<ul>\n<li>\n<p>每个时刻只有一个事务运行，其他事务必须等待</p>\n</li>\n<li>\n<p>不能充分利用系统资源，发挥共享资源的特点</p>\n</li>\n</ul>\n</li>\n<li>\n<p>交叉并发方式</p>\n<ul>\n<li>单处理机系统中，并行事务在轮流交叉运行</li>\n<li>能够减少处理机的空闲时间</li>\n</ul>\n</li>\n<li>\n<p>同时并发方式</p>\n<ul>\n<li>多处理机系统中，可以同时运行多个并行事务</li>\n<li>最理想的并发方式，但受制于硬件环境</li>\n</ul>\n</li>\n</ol>\n<p><strong>并发操作带来的数据不一致性</strong></p>\n<p>1.<strong> 丢失修改</strong></p>\n<p>两个事务 T1 和 T2 读入<strong>同一</strong>数据并修改，T2 的提交结果破坏了 T1 提交的结果，导致 T1 的修改被丢失</p>\n<p>2.<strong> 不可重复读</strong></p>\n<p>不可重复读是指事务 T1 读取数据后，事务 T2 执行更新操作，使 T1<strong> 无法再现</strong>前一次读取结果</p>\n<p>3.<strong> 读 “脏” 数据</strong></p>\n<p>事务 T1 修改某一数据，事务 T2 读取同一数据后，T1 由于某种原因<strong>撤销</strong>，T1 修改过的数据恢复原值，T2 读到的数据就为 “脏” 数据</p>\n<h2 id=\"封锁\"><a class=\"markdownIt-Anchor\" href=\"#封锁\">#</a> 封锁</h2>\n<p>封锁就是，事务 T 在对某个数据对象 （例如表、记录等）<strong>操作之前</strong>，先向系统发出请求，对其<strong>加锁</strong></p>\n<p>加锁后事务 T 就对该数据对象有了一定的控制，在事务 T 释放它的锁之前，其它的事务不能更新此数据对象</p>\n<p><strong>排它锁（X 锁）</strong></p>\n<p>若事务 T 对数据对象 A 加上 X 锁，则只允许 T 读取和修改 A，其它任何事务都不能再对 A 加任何类型的锁，直到 T 释放 A 上的锁</p>\n<p>保证其他事务在 T 释放 A 上的锁之前<strong>不能再读取和修改</strong> A</p>\n<p><strong>共享锁（S 锁）</strong></p>\n<p>若事务 T 对数据对象 A 加上 S 锁，则事务 T<strong> 可以读</strong> A 但<strong>不能修改</strong> A，其它事务只能再对 A 加 S 锁，而不能加 X 锁，直到 T 释放 A 上的 S 锁</p>\n<p>保证其他事务可以读 A，但在 T 释放 A 上的 S 锁之前<strong>不能</strong>对 A<strong> 做任何修改</strong></p>\n<h3 id=\"封锁协议\"><a class=\"markdownIt-Anchor\" href=\"#封锁协议\">#</a> 封锁协议</h3>\n<p><strong>一级封锁协议</strong>：</p>\n<p>一级封锁协议<strong>可防止丢失修改</strong>，并保证事务 T 是可恢复的。</p>\n<p>事务 T 在修改数据 R 之前必须先对其加<strong> X 锁</strong>，直到事务结束才释放</p>\n<p><strong>二级封锁协议</strong>：</p>\n<p>一级封锁协议 + 事务 T 在读取数据 R 之前必须先对其加<strong> S 锁</strong>，<strong>读完</strong>后即可<strong>释放 S 锁</strong>。</p>\n<p>二级封锁协议<strong>可以防止丢失修改和读 “脏” 数据</strong>，但是由于读完数据后即可释放 S 锁，所以它<strong>不能保证可重复读</strong>。</p>\n<p><strong>三级封锁协议</strong></p>\n<p>一级封锁协议 + 事务 T 在读取数据 R 之前必须先对其加<strong> S 锁</strong>，直到<strong>事务结束</strong>才释放。</p>\n<p>三级封锁协议<strong>可防止丢失修改、读脏数据和不可重复读</strong>。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410271753354.png\" alt=\"\"></p>\n<h2 id=\"活锁和死锁\"><a class=\"markdownIt-Anchor\" href=\"#活锁和死锁\">#</a> 活锁和死锁</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410271753906.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410271753801.png\" alt=\"\"></p>\n<p>避免<strong>活锁</strong>：采用先来先服务的策略</p>\n<p>预防<strong>死锁</strong>：破坏产生死锁的条件</p>\n<ul>\n<li>\n<p><strong>一次</strong>封锁法：要求每个事务一次将要使用的数据全部加锁，否则不能继续执行</p>\n</li>\n<li>\n<p><strong>顺序</strong>封锁法：预先对数据对象规定一个封锁顺序，都按这个顺序实行封锁</p>\n</li>\n</ul>\n<h3 id=\"诊断并解除死锁\"><a class=\"markdownIt-Anchor\" href=\"#诊断并解除死锁\">#</a> 诊断并解除死锁</h3>\n<p><strong>超时法</strong>诊断死锁</p>\n<p>如果一个事务的等待时间超过了时限，就认为死锁了</p>\n<p>问题：有可能误判死锁时限若设置得太长，死锁发生后不能及时发现</p>\n<p><strong>解除死锁</strong></p>\n<p>选择一个处理死锁<strong>代价最小</strong>的事务，将其撤消</p>\n<p>释放此事务持有的所有的锁，使其它事务能继续运行</p>\n<h2 id=\"并发调度的可串行性\"><a class=\"markdownIt-Anchor\" href=\"#并发调度的可串行性\">#</a> 并发调度的可串行性</h2>\n<p>对并发事务不同的调度可能会产生不同的结果</p>\n<p><strong>串行调度</strong>是正确的，执行结果等价于<strong>串行调度的调度</strong>也是正确的，称为<strong>可串行化调度</strong></p>\n<p>当且仅当其结果与<strong>按某一次序串行地执行</strong>这些事务时的结果<strong>相同</strong>时，对多个事务的并发执行才是正确的。即一个给定的并发调度，当且仅当它是可串行化的，才是正确调度</p>\n<p><strong>冲突操作</strong>：是指<strong>不同的事务</strong>对<strong>同一数据</strong>的<strong>读写</strong>操作和<strong>写写</strong>操作</p>\n<p><strong>冲突可串行化调度</strong>是<strong>可串行化调度</strong>的<strong>充分</strong>条件，不是必要条件。即存在<strong>不满足</strong>冲突可串行化条件的可串行化调度</p>\n<p><strong>不可交换</strong>：同一事务的两个操作 / 不同事务的冲突操作</p>\n<p><strong>可交换</strong>：</p>\n<ul>\n<li>不同事务对同一数据的读读操作<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msub><mi>R</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R_i(x),R_j(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>不同事务对不同数据的各种操作</li>\n</ul>\n<h2 id=\"两段锁协议\"><a class=\"markdownIt-Anchor\" href=\"#两段锁协议\">#</a> 两段锁协议</h2>\n<p>指所有事务必须分两个阶段对数据项加锁和解锁</p>\n<ul>\n<li>\n<p>扩展阶段：在对任何数据进行读、写操作之前，事务首先要获得对该数据的封锁</p>\n</li>\n<li>\n<p>收缩阶段：在释放一个封锁之后，事务<strong>不再</strong>申请和获得任何其他封锁</p>\n</li>\n</ul>\n<p>事务遵守两段锁协议是可串行化调度的充分条件，而不是必要条件。</p>\n<p><strong>两段锁协议与防止死锁的一次封锁法</strong></p>\n<ul>\n<li>\n<p>一次封锁法要求每个事务必须一次将所有要使用的数据全部加锁，因此遵守两段锁协议</p>\n</li>\n<li>\n<p>两段锁协议并不要求事务必须一次将所有要使用的数据全部加锁，因此可能发生死锁</p>\n</li>\n</ul>\n<h2 id=\"封锁的粒度\"><a class=\"markdownIt-Anchor\" href=\"#封锁的粒度\">#</a> 封锁的粒度</h2>\n<p>封锁粒度：封锁对象的大小</p>\n<p>封锁的对象：逻辑单元，物理单元</p>\n<p>例：在关系数据库中，封锁对象：</p>\n<p><strong>逻辑单元</strong>：属性值、属性值的集合、元组、关系、索引项、整个索引、整个数据库等</p>\n<p><strong>物理单元</strong>：页（数据页或索引页）、物理记录等</p>\n<p>封锁粒度与系统的并发度和并发控制的开销密切相关。</p>\n<ul>\n<li>\n<p>封锁的<strong>粒度越大</strong>，数据库所能够封锁的数据单元就越少并发度就越小，系统开销也越小</p>\n</li>\n<li>\n<p>封锁的<strong>粒度越小</strong>，并发度较高，但系统开销也就越大</p>\n</li>\n</ul>\n<h3 id=\"多粒度封锁\"><a class=\"markdownIt-Anchor\" href=\"#多粒度封锁\">#</a> 多粒度封锁</h3>\n<p>多粒度封锁：在一个系统中同时支持多种封锁粒度供不同的事务选择</p>\n<p>多粒度树：根节点是整个数据库，表示最大的数据粒度，叶节点表示最小的数据粒度。</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411092014342.png\" alt=\"\"></p>\n<p>允许多粒度树中的每个结点被独立地加锁</p>\n<p>对一个结点加锁意味着这个结点的所有后裔结点也被加以同样类型的锁</p>\n<p>一个数据对象可能以两种方式封锁：显式封锁和隐式封锁</p>\n<p><strong>显式封锁</strong>：直接加到数据对象上的封锁</p>\n<p><strong>隐式封锁</strong>：由于其上级结点加锁而使该数据对象加上了锁</p>\n<h3 id=\"意向锁\"><a class=\"markdownIt-Anchor\" href=\"#意向锁\">#</a> 意向锁</h3>\n<p>引进意向锁，<strong>提高</strong>加锁时系统的<strong>检查效率</strong></p>\n<p>如果对一个结点加意向锁，则说明<strong>下层结点正在被加锁</strong>；对任一结点加基本锁，<strong>必须先对它的上层结点加意向锁</strong></p>\n<p>意向共享锁 **(IS 锁)**：事务 T1 要对<em> R</em>1 中某个元组加 S 锁，则要首先对关系<em> R</em>1 和数据库加 IS 锁</p>\n<p>意向排它锁 **(IX 锁)**：事务 T1 要对 R1 中某个元组加 X 锁，则要首先对关系 R1 和数据库加 IX 锁</p>\n<p>共享意向排它锁 **(SIX 锁)**：对某个表加 SIX 锁，则表示该事务要读整个表（所以要对该表加 S 锁），同时会更新个别元组（所以要对该表加 IX 锁）</p>\n<p><strong>锁的强度</strong></p>\n<p>锁的强度是指它对其他锁的排斥程度</p>\n<p>申请封锁时以强锁代替弱锁是安全的，反之不然</p>\n<p>具有意向锁的多粒度封锁方法</p>\n<ul>\n<li>\n<p>申请封锁时应该按自上而下的次序进行（多粒度树）</p>\n</li>\n<li>\n<p>释放封锁时则应该按自下而上的次序进行</p>\n</li>\n</ul>\n<p>锁的强度：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411092026909.png\" alt=\"\"></p>\n<p>数据锁的相容矩阵：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411092027513.png\" alt=\"\"></p>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/09/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/",
            "url": "http://www.luckycyyyy.top/2024/09/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/",
            "title": "计算机网络和因特网",
            "date_published": "2024-09-24T04:40:54.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"因特网的组成\"><a class=\"markdownIt-Anchor\" href=\"#因特网的组成\">#</a> 因特网的组成</h1>\n<p><strong>端系统</strong>（主机）：与因特网相连的计算机和其他设备称为端系统，端系统通过<strong>通信链路</strong>和<strong>分组交换机</strong>的网络连接到一起。</p>\n<p><strong>通信链路</strong>由不同的物理媒介组成。<strong>物理媒介</strong>包括同轴电缆、铜线、光纤、无线电频谱；链路的传输速率以 ** 比特 / 秒 (bit/s，或 bps)** 度量。</p>\n<p><strong>分组交换机</strong>常见的类型有<strong>路由器</strong>和<strong>链路层交换机</strong>，路由器常用于网络核心，链路交换机常用于接入网。</p>\n<p><strong>分组</strong>：发送端将数据分段，并为每段加上首部字节。</p>\n<blockquote>\n<p>类比：分组–卡车，分组交换机–交叉口，通信链路–公路，端系统–建筑物</p>\n</blockquote>\n<p><strong>因特网服务供应商 ISP</strong>：端系统通过 ISP 接入因特网，每个 ISP 自身就是一个由多台分组交换机和多段通信链路组成的网络。各 ISP 为端系统提供各种不同类型的网络接入，同时也为内容提供者提供因特网接入服务；因特网把各处的端系统互联，所以为端系统提供接入服务的 ISP 也必须互联。<strong>ISP 是因特网的硬件</strong>。</p>\n<p><strong>因特网标准</strong>：由<strong>因特网工程任务组（IETF）<strong>研发，IETF 的标准文档称为</strong>请求评论（RFC）</strong>，RFC 定义了 TCP、IP、HTTP 等协议。</p>\n<p><strong>协议</strong>：定义了在两个或多个通信实体之间交换的报文格式和顺序，以报文的发送 / 接收或其他事件所采取的操作。</p>\n<h1 id=\"网络边缘\"><a class=\"markdownIt-Anchor\" href=\"#网络边缘\">#</a> 网络边缘</h1>\n<h2 id=\"主机端系统\"><a class=\"markdownIt-Anchor\" href=\"#主机端系统\">#</a> 主机（端系统）</h2>\n<h2 id=\"接入网\"><a class=\"markdownIt-Anchor\" href=\"#接入网\">#</a> 接入网</h2>\n<blockquote>\n<p>将端系统物理连接到边缘路由器的网络</p>\n<p>相对骨干网络，接入网往往是传输速度的瓶颈</p>\n</blockquote>\n<p><strong>家庭接入网</strong></p>\n<ul>\n<li><strong>数字用户线（DSL）</strong>\n<ul>\n<li>使用 DSL 时用户的本地<strong>电话公司</strong>也是它的因特网服务供应商 (ISP)</li>\n<li>每个用户的<strong> DSL 调制解调器</strong>使用现有的电话线与位于电话公司的本地中心局中的 ** 数字用户线接入复用器（DSLAM）** 交换数据</li>\n<li>用户一侧：使用一个分频器把到达家庭的数据信号和电话信号分隔开来，并将数据信号转发给 DSL 调制解调器</li>\n<li>本地中心局中：DSLAM 把数据和电话信号分隔开</li>\n<li>不对称接入，上行和下行速率不同</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410051553011.jpg\" alt=\"\"></p>\n<ul>\n<li>\n<p><strong>电缆因特网接入–混合光纤同轴（HFC）系统</strong></p>\n<ul>\n<li>\n<p>因为该系统既应用了光纤也应用了同轴电缆，所以被称为混合光纤同轴系统</p>\n</li>\n<li>\n<p>利用有线电视公司现有的有线电视基础设施</p>\n</li>\n<li>\n<p>使用电缆调制解调器、电缆调制解调器端接系统（CMTS）</p>\n</li>\n<li>\n<p>不对称接入</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410051557255.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p><strong>光纤到户（FTTH）</strong></p>\n<ul>\n<li><strong>有源光纤网络（AON）</strong>，本质上是交换以太网</li>\n<li><strong>无源光纤网络（PON）</strong>\n<ul>\n<li>每个家庭有一个<strong>光纤网络端接器（ONT）</strong></li>\n<li>ONT 由专门的光纤连接到邻近的分配器，该分配器把一些家庭连接到一根共享光纤，该光纤再连接到本地电话和公司的中心局中的 ONT，该 ONT 提供光电信号的转换，经过本地电话公司路由器与因特网相连</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410051558362.jpg\" alt=\"\"></p>\n<ul>\n<li><strong>5G</strong>\n<ul>\n<li>采用波束成形级数，数据以无线方式从供应商的基站发送到家中的调制解调器，由一个无线路由器与该调制解调器相连</li>\n</ul>\n</li>\n</ul>\n<p><strong>企业接入</strong></p>\n<ul>\n<li><strong>以太网</strong>：使用双绞铜线与一台以太网交换机相连</li>\n<li><strong>WiFi</strong>：基于 IEEE 802.11 技术的无线 LAN 接入</li>\n</ul>\n<h2 id=\"物理媒介\"><a class=\"markdownIt-Anchor\" href=\"#物理媒介\">#</a> 物理媒介</h2>\n<p>分类：</p>\n<p><strong>导引型媒介</strong>：光缆、双绞铜线、同轴电缆</p>\n<ul>\n<li>双绞铜线：最便宜且最常用的导引型传输媒介，无屏蔽双绞线（UTP）常用在建筑物内的计算机网络中，即局域网中</li>\n<li>同轴电缆：被用作共享媒介</li>\n<li>光纤：长途导引型传输媒介，特别是跨海链路</li>\n</ul>\n<p><strong>非导引型媒介</strong>：在无线局域网、数字卫星频道中传播</p>\n<p>各网络接入技术使用的物理媒介：</p>\n<p><strong>HFC</strong>：光缆和同轴电缆</p>\n<p><strong>DSL、以太网</strong>：双绞铜线</p>\n<p><strong>移动接入网</strong>：无线电频谱</p>\n<h1 id=\"网络核心\"><a class=\"markdownIt-Anchor\" href=\"#网络核心\">#</a> 网络核心</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171144576.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182101785.png\" alt=\"\"></p>\n<blockquote>\n<p>即由 互联 因特网端系统 的 <strong>分组交换机</strong>和<strong>链路</strong>构成的 <strong>网状网络</strong></p>\n</blockquote>\n<h2 id=\"分组交换\"><a class=\"markdownIt-Anchor\" href=\"#分组交换\">#</a> 分组交换</h2>\n<ul>\n<li>分组：将长报文划分成较小的数据块，固定长度的数据段。每个分组都通过通信链路和分组交换机传送</li>\n<li>存储转发传输：仅当路由器已经接收完该分组的所有比特后，它才能开始向出链路传输该分组</li>\n<li>排队时延和分组丢失</li>\n<li>转发表和路由选择协议：在分组的首部包含目的地的 IP 地址；每台路由器有一个转发表，用于将目的地址映射为输出链路，路由选择协议用于自动设置这些转发表</li>\n<li>资源不预留，不预先确定分组的传输路径</li>\n</ul>\n<h3 id=\"时延的计算\"><a class=\"markdownIt-Anchor\" href=\"#时延的计算\">#</a> 时延的计算</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182032963.png\" alt=\"\"></p>\n<p>如果忽略传播时延：总时延<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mtext> </mtext><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">=(n+m-1)\\  *</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord\">∗</span></span></span></span> 1 个分组的传输时延</p>\n<h2 id=\"电路交换\"><a class=\"markdownIt-Anchor\" href=\"#电路交换\">#</a> 电路交换</h2>\n<ul>\n<li>\n<p>在端系统间通信会话期间预留了端系统间沿路径通信所需要的资源</p>\n</li>\n<li>\n<p>频分复用（FDM）、时分复用（TDM）</p>\n<ul>\n<li>FDM：在电话网络中频段的宽度通常为 4kHz，频段的宽度称为带宽。</li>\n<li>TDM：其时域被分割成帧，在每个帧中有 4 个时隙，<strong>一条电路的传输速率等于帧速率乘以一个时隙中的比特数量</strong>。eg：如果链路每秒传输 8000 个帧，每个时隙由 8 个比特组成，则每条电路的传输速率是 64kbps。</li>\n</ul>\n<p>例：从主机 A 到主机 B 发送一个 640 000bit 的文件需要多长时间？假如在该网络中所有链路使用具有 24 时隙的 TDM，比特速率为 1.536Mbps。同时假定在主机 A 开始传输文件之前，需要 500ms 创建一条端到端的电路，它需要多久发送文件？</p>\n<blockquote>\n<p>每条链路的传输速率：1.536Mbps / 24 = 64kbps</p>\n<p>文件传输时间：640kb / 64kbps = 10s</p>\n<p>总时间：10s + 0.5s = 10.5s</p>\n<p>注意：该传输时间与链路数量无关：端到端电路不管是通过 1 条链路还是 100 条链路，传输时间都是 10s</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"网络应用的通信模型\"><a class=\"markdownIt-Anchor\" href=\"#网络应用的通信模型\">#</a> 网络应用的通信模型</h1>\n<p><strong>客户 / 服务器模型（C/S）</strong></p>\n<ol>\n<li>客户：使用服务者</li>\n<li>服务器：提供服务者</li>\n</ol>\n<p><strong>对等模式（P2P）</strong></p>\n<p>所有主机同时承担服务器和客户机的双重身份</p>\n<p><strong>混合模式</strong></p>\n<h1 id=\"分组交换网\"><a class=\"markdownIt-Anchor\" href=\"#分组交换网\">#</a> 分组交换网</h1>\n<h2 id=\"分组交换网中的时延\"><a class=\"markdownIt-Anchor\" href=\"#分组交换网中的时延\">#</a> 分组交换网中的时延</h2>\n<ul>\n<li>节点处理时延</li>\n<li>排队时延</li>\n<li>传输时延：将所有分组的比特推向链路所需要的时间</li>\n<li>传播时延：传播速率接近光速可近似忽略</li>\n</ul>\n<h2 id=\"计算机网络中的吞吐量\"><a class=\"markdownIt-Anchor\" href=\"#计算机网络中的吞吐量\">#</a> 计算机网络中的吞吐量</h2>\n<p>瞬时吞吐量：从主机 A 到主机 B 发文件，主机 B 收到该文件的速率就是瞬时吞吐量</p>\n<p>瓶颈链路的传输速率：主机 B 收到 F bit 的文件，以速率 Rs 到达路由器，以速率 Rc 离开路由器，那么<strong>吞吐量是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>R</mi><mi>s</mi><mo separator=\"true\">,</mo><mi>R</mi><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">min(Rs,Rc)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span></span></span></span></strong>，传输文件的时间为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mi mathvariant=\"normal\">/</mi><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>R</mi><mi>s</mi><mo separator=\"true\">,</mo><mi>R</mi><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F/min(Rs,Rc)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>吞吐量不仅取决于沿着路径的传输速率，而且取决于干扰流量</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410060854081.png\" alt=\"\"></p>\n<h1 id=\"协议层次及其服务模型\"><a class=\"markdownIt-Anchor\" href=\"#协议层次及其服务模型\">#</a> 协议层次及其服务模型</h1>\n<h2 id=\"因特网的协议栈\"><a class=\"markdownIt-Anchor\" href=\"#因特网的协议栈\">#</a> 因特网的协议栈</h2>\n<ul>\n<li>应用层</li>\n<li>运输层</li>\n<li>网络层</li>\n<li>链路层</li>\n<li>物理层</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181902635.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182000235.png\" alt=\"\"></p>\n<h2 id=\"isoosi\"><a class=\"markdownIt-Anchor\" href=\"#isoosi\">#</a> ISO/OSI</h2>\n<ul>\n<li>应用层</li>\n<li><strong>表示层</strong> ：允许应用程序解释数据的含义，如加密、压缩、特定机器的数据描述方法</li>\n<li><strong>会话层</strong>：提供了数据交换的同步、定界、建立检查点和恢复的能力</li>\n<li>运输层</li>\n<li>网络层</li>\n<li>链路层</li>\n<li>物理层</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181959357.png\" alt=\"\"></p>\n<h2 id=\"基本概念\"><a class=\"markdownIt-Anchor\" href=\"#基本概念\">#</a> 基本概念</h2>\n<p><strong>实体</strong>：实体是任何可以<strong>发送和接收</strong>信息的<strong>硬件和软件</strong>进程，通常是一个特定的软件模型</p>\n<p><strong>对等体</strong>：不同机器上包含<strong>对应层的实体</strong>称为对等体</p>\n<p><strong>协议</strong>：控制两个<strong>对等实体</strong>进行逻辑通信的规则的集合</p>\n<ul>\n<li>语法，即数据和控制信息的结构或<strong>格式</strong></li>\n<li>语义，即需要发现何种控制信息，完成何种动作以及如何应答，定义收发双方需要<strong>完成的操作</strong></li>\n<li>同步，即事件<strong>实现顺序</strong>的详细说明</li>\n</ul>\n<p><strong>服务</strong>：为保证上层对等体能够互相通信，<strong>下层向上层提供的功能</strong></p>\n<p 协议是”水平“的，服务是“垂直”的=\"\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410060908367.png\" alt=\"\"></p>\n<p><strong>服务原语</strong>：网络相邻层之间进行交互的时候需要交换的一些<strong>必要指令</strong></p>\n<p><strong>服务访问点（SAP）</strong>：同一系统中<strong>相邻层</strong>的实体进行<strong>交互的地方</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181919274.png\" alt=\"\"></p>\n<p><strong>协议数据单元（PDU）</strong>：<strong>对等</strong>层次上 传送数据的单位</p>\n<p><strong>服务数据单元（SDU）</strong>：<strong>层与层</strong>之间交换数据的单位</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181921896.png\" alt=\"\"></p>\n<p><strong>网络体系结构</strong>：层和协议的集合</p>\n<p><strong>协议栈</strong>：一个特定的系统所使用的一组协议</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182037493.png\" alt=\" \"></p>\n",
            "tags": [
                "计网"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/06/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--k%E5%8F%89%E6%A0%91/",
            "url": "http://www.luckycyyyy.top/2024/06/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--k%E5%8F%89%E6%A0%91/",
            "title": "k叉树",
            "date_published": "2024-06-07T07:44:47.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p n=\"\">含 n 个结点的 k 叉树，最小深度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mrow><mo stretchy=\"false\">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mn>1</mn><mo stretchy=\"false\">⌋</mo></mrow><mo>+</mo><mn>1</mn></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{blue}{\\lfloor log_2[(k-1)n]+1\\rfloor} + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\" style=\"color:blue;\"><span class=\"mopen\" style=\"color:blue;\">⌊</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;color:blue;\">l</span><span class=\"mord mathnormal\" style=\"color:blue;\">o</span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;color:blue;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:blue;\"><span class=\"mord mtight\" style=\"color:blue;\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:blue;\">[</span><span class=\"mopen\" style=\"color:blue;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;color:blue;\">k</span><span class=\"mspace\" style=\"color:blue;margin-right:0.2222222222222222em;\"></span><span class=\"mbin\" style=\"color:blue;\">−</span><span class=\"mspace\" style=\"color:blue;margin-right:0.2222222222222222em;\"></span><span class=\"mord\" style=\"color:blue;\">1</span><span class=\"mclose\" style=\"color:blue;\">)</span><span class=\"mord mathnormal\" style=\"color:blue;\">n</span><span class=\"mclose\" style=\"color:blue;\">]</span><span class=\"mspace\" style=\"color:blue;margin-right:0.2222222222222222em;\"></span><span class=\"mbin\" style=\"color:blue;\">+</span><span class=\"mspace\" style=\"color:blue;margin-right:0.2222222222222222em;\"></span><span class=\"mord\" style=\"color:blue;\">1</span><span class=\"mclose\" style=\"color:blue;\">⌋</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\" style=\"color:blue;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\" style=\"color:blue;\">1</span></span></span></span>，最大深度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{blue}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n<blockquote>\n<p>解析：最小深度即使让前面的所有层是满的，最后一层尽可能满</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><msup><mi>k</mi><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mo>&lt;</mo><mi>n</mi><mo>≤</mo><mfrac><mrow><msup><mi>k</mi><mi>h</mi></msup><mo>−</mo><mn>1</mn></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{k^{h - 1}-1}{k-1}&lt;n \\leq \\frac{k^h-1}{k-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4462510000000002em;vertical-align:-0.403331em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.04292em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9270285714285714em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.403331em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4462509999999997em;vertical-align:-0.403331em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0429199999999998em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9270285714285713em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.403331em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⇒</mo></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>−</mo><mn>1</mn><mo>&lt;</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>≤</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h-1&lt;log_k[n(k-1)+1]\\leq h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></p>\n<p>最大深度即使每一层都只有一个元素</p>\n</blockquote>\n<p>满 k 叉树，根的编号为 1</p>\n<ol k(p-1)+1+i=\"\">\n<li>求 p 的第 i 个孩子的编号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{blue}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></li>\n</ol>\n<blockquote>\n<p>解析：k (p-1) 表示前 p-1 个结点所拥有的所有孩子的数量，即 p 的第 1 个孩子之前的所有孩子的数量（除了根节点不是任何节点的孩子），加一加的是根节点</p>\n</blockquote>\n<ol start=\"2\">\n<li>p 的父亲节点的编号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mrow><mi>p</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><mi>k</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{blue}{\\lfloor \\frac{p+(k-2)}{k}\\rfloor}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\" style=\"color:blue;\"><span class=\"mopen\" style=\"color:blue;\">⌊</span><span class=\"mord\" style=\"color:blue;\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:blue;\"><span class=\"mord mtight\" style=\"color:blue;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;color:blue;\">k</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"color:blue;border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:blue;\"><span class=\"mord mtight\" style=\"color:blue;\"><span class=\"mord mathnormal mtight\" style=\"color:blue;\">p</span><span class=\"mbin mtight\" style=\"color:blue;\">+</span><span class=\"mopen mtight\" style=\"color:blue;\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;color:blue;\">k</span><span class=\"mbin mtight\" style=\"color:blue;\">−</span><span class=\"mord mtight\" style=\"color:blue;\">2</span><span class=\"mclose mtight\" style=\"color:blue;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\" style=\"color:blue;\">⌋</span></span></span></span></span></li>\n</ol>\n<blockquote>\n<p>解析：观察发现 k 叉树中每个节点的子节点的后面两个节点的编号除以 k 为父节点的编号，倒数第 2 个叉的编号是父节点的 k 倍</p>\n</blockquote>\n",
            "tags": [
                "数据结构"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/05/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--B-%E6%A0%91%E5%92%8CB-%E6%A0%91/",
            "url": "http://www.luckycyyyy.top/2024/05/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--B-%E6%A0%91%E5%92%8CB-%E6%A0%91/",
            "title": "B-树和B+树",
            "date_published": "2024-05-28T07:49:18.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"b树\"><a class=\"markdownIt-Anchor\" href=\"#b树\">#</a> B 树</h3>\n<h4 id=\"b树的定义\"><a class=\"markdownIt-Anchor\" href=\"#b树的定义\">#</a> <em>B 树的定义</em>：</h4>\n<p>一颗 m 阶 B 树是一颗平衡的 m 路搜索树</p>\n<h4 id=\"b树的特性\"><a class=\"markdownIt-Anchor\" href=\"#b树的特性\">#</a> <em><strong>B 树的特性</strong></em>：</h4>\n<ol>\n<li>\n<p>每个结点至少两个子女</p>\n</li>\n<li>\n<p>每个非根节点包含的关键字个数 n：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌈</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">⌉</mo><mo>−</mo><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\lceil m/2 \\rceil - 1 \\leq n \\leq m-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，</p>\n<p>每个非根节点子树个数 k：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌈</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">⌉</mo><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\lceil m/2 \\rceil \\leq k \\leq m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\">⌉</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span></p>\n</li>\n<li>\n<p>根节点的关键字个数 n：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1 \\leq n \\leq m-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<p>根节点的子树个数 k：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">2 \\leq n \\leq m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span></p>\n</li>\n<li>\n<p>所有的非终端结点中包含下列信息数据<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mtext>，</mtext><msub><mi>A</mi><mn>0</mn></msub><mtext>，</mtext><msub><mi>K</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>K</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>K</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n，A_0，K_1,A_1,K_2,A_2,…,K_n,A_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li i+1=\"\">K_i是关键字，K_i < K_</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为指向子树根节点的指针，且指针<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">A_{i-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 所指子树中所有结点的关键字均小于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 所指子树中所有结点的关键字均大于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p>叶子结点都在同一层</p>\n</li>\n<li>\n<p>对于任一结点其子树高度相同</p>\n</li>\n<li>\n<p>B 树的 m 值比树高大很多，m 的实用值一般在 100-500</p>\n</li>\n</ol>\n<h4 id=\"b树的查找\"><a class=\"markdownIt-Anchor\" href=\"#b树的查找\">#</a> <em>B 树的查找：</em></h4>\n<p>待查找元素<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，如果：</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><msub><mi>K</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">K_i &lt; x &lt; K_{i+1}(1 \\leq i&lt; n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69862em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，准备查找<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 页</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>&lt;</mo><msub><mi>K</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x &lt; K_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，准备查找<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">A_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 页</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>&gt;</mo><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x &gt; K_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，准备查找<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 页</li>\n</ol>\n<p>页内存储方式：顺序存储或者采用二叉排序树的形式</p>\n<p>页内检索算法：顺序检索或者折半查找</p>\n<h4 id=\"b树的高度不包括叶子结点\"><a class=\"markdownIt-Anchor\" href=\"#b树的高度不包括叶子结点\">#</a> <em>B 树的高度（不包括叶子结点）：</em></h4>\n<p>含 n 个关键字的 m 阶 B 树：</p>\n<ul>\n<li>\n<p>最小高度：</p>\n<p>让每个结点尽可能的满，每个结点有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">m-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个关键字，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 个分叉，</p>\n<p>则  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>m</mi><mo>+</mo><msup><mi>m</mi><mn>2</mn></msup><mo>+</mo><msup><mi>m</mi><mn>3</mn></msup><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><msup><mi>m</mi><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>m</mi><mi>h</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n \\leq (m-1)(1+m+m^2+m^3+...+m^{h-1})=m^h-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0991079999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.932438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，</p>\n<p>所以  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mi>h</mi><mo>≥</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>m</mi></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}h \\geq log_m(n+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"color:red;\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\" style=\"color:red;\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;color:red;\">l</span><span class=\"mord mathnormal\" style=\"color:red;\">o</span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;color:red;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mathnormal mtight\" style=\"color:red;\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord mathnormal\" style=\"color:red;\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\" style=\"color:red;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\" style=\"color:red;\">1</span><span class=\"mclose\" style=\"color:red;\">)</span></span></span></span></p>\n</li>\n<li>\n<p>最大高度：</p>\n<p>让各层分支尽可能少，即根节点有两个分支，其他节点只有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌈</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">⌉</mo></mrow><annotation encoding=\"application/x-tex\">\\lceil m/2\\rceil</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\">⌉</span></span></span></span> 个分支</p>\n<p>各层节点至少有：</p>\n<p>第一层 1、第二层 2、第三层 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo stretchy=\"false\">⌈</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">⌉</mo></mrow><annotation encoding=\"application/x-tex\">2\\lceil m/2\\rceil</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mopen\">⌈</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\">⌉</span></span></span></span>、第三层 $2\\lceil m/2\\rceil^2 $     <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">......</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.10556em;vertical-align:0em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span></span></span></span></p>\n<p h-1=\"\">第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span> 层  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo stretchy=\"false\">⌈</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><msup><mo stretchy=\"false\">⌉</mo><mrow><mi>h</mi><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2\\lceil m/2\\rceil ^{h-2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991079999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mopen\">⌈</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\"><span class=\"mclose\">⌉</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>、第<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">h+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 层（即叶子节点 / 失败结点） 2\\lceil m/2\\rceil ^</p>\n<p>n 个关键字的 B 树一定有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个叶子结点，所以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn><mo>≥</mo><mn>2</mn><mo stretchy=\"false\">⌈</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><msup><mo stretchy=\"false\">⌉</mo><mrow><mi>h</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">n+1\\geq 2\\lceil m/2\\rceil^{h-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0991079999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mopen\">⌈</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\"><span class=\"mclose\">⌉</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>，</p>\n<p>即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mi>h</mi><mo>≤</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy=\"false\">⌈</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">⌉</mo></mrow></msub><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mn>1</mn></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}h \\leq log_{\\lceil m/2\\rceil} \\frac{n+1}{2}+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"color:red;\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\" style=\"color:red;\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.200308em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;color:red;\">l</span><span class=\"mord mathnormal\" style=\"color:red;\">o</span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;color:red;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mopen mtight\" style=\"color:red;\">⌈</span><span class=\"mord mathnormal mtight\" style=\"color:red;\">m</span><span class=\"mord mtight\" style=\"color:red;\">/</span><span class=\"mord mtight\" style=\"color:red;\">2</span><span class=\"mclose mtight\" style=\"color:red;\">⌉</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\" style=\"color:red;\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"color:red;border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathnormal mtight\" style=\"color:red;\">n</span><span class=\"mbin mtight\" style=\"color:red;\">+</span><span class=\"mord mtight\" style=\"color:red;\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\" style=\"color:red;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\" style=\"color:red;\">1</span></span></span></span></p>\n</li>\n</ul>\n<h4 id=\"b树的插入\"><a class=\"markdownIt-Anchor\" href=\"#b树的插入\">#</a> <em>B 树的插入：</em></h4>\n<p><video src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405090936688.mp4\" width=\"100%\" height=\"100%\" controls=\"controls\"></video></p>\n",
            "tags": [
                "数据结构"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/05/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",
            "url": "http://www.luckycyyyy.top/2024/05/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",
            "title": "数据结构",
            "date_published": "2024-05-09T02:06:18.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"绪论\"><a class=\"markdownIt-Anchor\" href=\"#绪论\">#</a> 绪论</h1>\n<h2 id=\"概念\"><a class=\"markdownIt-Anchor\" href=\"#概念\">#</a> 概念</h2>\n<p><strong>数据</strong>：所有能输入到计算机中并被计算机程序加工、处理的符号的总称。如：整数、实数、字符、声音、图象、图形等。</p>\n<p><strong>数据项</strong>：数据的不可分割的最小单位</p>\n<p><strong>数据元素</strong>：数据的基本单位，一个数据元素可以由若干个数据项组成</p>\n<p><strong>数据对象</strong>：性质相同的数据元素的集合，是数据的一个子集</p>\n<p><strong>数据结构</strong>：相互之间存在一种或多种特定关系的数据元素的集合。</p>\n<p><strong>结构</strong>：数据元素之间的关系称为结构。</p>\n<p><strong>数据类型</strong>：是一个值的集合和定义在这个值上的一组操作的总称。</p>\n<ol>\n<li>原子类型 (如：int,char,float 等)</li>\n<li>结构类型 (如：数组，结构，联合体等）</li>\n</ol>\n<h2 id=\"抽象数据类型\"><a class=\"markdownIt-Anchor\" href=\"#抽象数据类型\">#</a> 抽象数据类型</h2>\n<p><strong>抽象数据类型（ADT）</strong>：与计算机的实现无关的数据类型</p>\n<p>形式定义：</p>\n<p>ADT 抽象数据类型名 {</p>\n<ol>\n<li>\n<p>数据对象</p>\n</li>\n<li>\n<p>数据关系：一个或多个关系</p>\n</li>\n<li>\n<p>基本操作：一组基本操作 / 运算</p>\n</li>\n</ol>\n<p>} ADT 抽象数据类型名</p>\n<p>其中数据对象和数据关系的定义用<strong>伪码</strong>描述，基本操作的定义格式为：</p>\n<p>基本操作名（参数表）</p>\n<p>​\t初始条件：&lt;初始条件描述&gt;</p>\n<p>​\t操作结果：&lt;操作结果描述&gt;</p>\n<p>参数表中有两种操作：</p>\n<ol>\n<li>赋值参数：只为操作提供输入值</li>\n<li>引用参数：以 &amp; 打头，除可提供输入值外，还将返回操作结果</li>\n</ol>\n<h2 id=\"算法与算法分析\"><a class=\"markdownIt-Anchor\" href=\"#算法与算法分析\">#</a> 算法与算法分析</h2>\n<p>算法的特征：</p>\n<ol>\n<li>有穷性</li>\n<li>确定性</li>\n<li>可行性</li>\n<li>输入：有 0 或多个输入量</li>\n<li>输出：至少有一个输出量</li>\n</ol>\n<p>算法设计要求：</p>\n<ol>\n<li>正确性</li>\n<li>可读性</li>\n<li>健壮性</li>\n<li>高效与低存储量</li>\n</ol>\n<p>时间复杂度比较</p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405281632685.png\" style=\"zoom: 50%;\" />\n<h1 id=\"线性表\"><a class=\"markdownIt-Anchor\" href=\"#线性表\">#</a> 线性表</h1>\n<h2 id=\"adt\"><a class=\"markdownIt-Anchor\" href=\"#adt\">#</a> ADT</h2>\n<p>ADT List</p>\n<p>{</p>\n<p a_i|a_i∈ElemSet,i=\"1,2,...n,n&gt;=0\\right\\\">数据对象：D=\\left\\</p>\n<p>数据关系：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mn>1</mn><mo>=</mo><mrow><mo fence=\"true\">{</mo><mo>&lt;</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>&gt;</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>=</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R1=\\left\\{&lt;a_{i-1},a_i&gt;| a_{i-1},a_i∈D,i=2,...n\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span></p>\n<p>基本操作：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span><span class=\"built_in\">InitList</span>(&amp;L) <span class=\"comment\">//构造空表L。</span></span><br><span class=\"line\"><span class=\"number\">2.</span><span class=\"built_in\">DestroyList</span>(&amp;L) <span class=\"comment\">//销毁线性表L</span></span><br><span class=\"line\"><span class=\"number\">3.</span><span class=\"built_in\">ClearList</span>(&amp;L) <span class=\"comment\">//置L为空表</span></span><br><span class=\"line\"><span class=\"number\">4.L</span>istEmpty(L) <span class=\"comment\">//判断L是否为空表</span></span><br><span class=\"line\"><span class=\"number\">5.L</span>istLength(L) <span class=\"comment\">//求表L的长度</span></span><br><span class=\"line\"><span class=\"number\">6.</span><span class=\"built_in\">GetElem</span>(L,i,&amp;e) <span class=\"comment\">//取元素ai,由e返回ai</span></span><br><span class=\"line\"><span class=\"number\">7.L</span>ocateElem(L,e,<span class=\"built_in\">compare</span>()) <span class=\"comment\">//查找符合条件的元素</span></span><br><span class=\"line\"><span class=\"number\">8.L</span>istInsert(&amp;L,i,e) <span class=\"comment\">//元素ai之前插入新元素e</span></span><br><span class=\"line\"><span class=\"number\">9.L</span>istDelete(&amp;L,i,&amp;e) <span class=\"comment\">//删除第i个元素</span></span><br></pre></td></tr></table></figure>\n<p>}ADT List</p>\n<h2 id=\"顺序存储结构\"><a class=\"markdownIt-Anchor\" href=\"#顺序存储结构\">#</a> 顺序存储结构</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ADD 10</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LIST_INIT_SIZE 100</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ElemType *elem;<span class=\"comment\">//存储空间基址</span></span><br><span class=\"line\">    <span class=\"type\">int</span> length;<span class=\"comment\">//当前长度</span></span><br><span class=\"line\">    <span class=\"type\">int</span> listsize;<span class=\"comment\">//当前分配的存储容量</span></span><br><span class=\"line\">&#125;Sqlist</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入操作\"><a class=\"markdownIt-Anchor\" href=\"#插入操作\">#</a> 插入操作</h3>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在顺序表L中的第i个位置之前插入新的元素e</span></span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ListInsert_Sq</span><span class=\"params\">(SqList &amp;L,<span class=\"type\">int</span> i, ElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i &lt; <span class=\"number\">1</span> || i &gt; L.length + <span class=\"number\">1</span>) <span class=\"keyword\">return</span> ERROR;<span class=\"comment\">//i不合法</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L.length &gt; L.listsize)<span class=\"comment\">//当前存储空间已满，增加存储空间</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        newbase = (ElemType*)<span class=\"built_in\">realloc</span>(L.elem,(L.listsize + ADD)*<span class=\"built_in\">sizeof</span>(ElemType));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!newbase) <span class=\"built_in\">exit</span>(OVERFLOW);<span class=\"comment\">//如果分配失败</span></span><br><span class=\"line\">        L.elem = newbase;</span><br><span class=\"line\">        L.listsize += ADD;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q = &amp;(l.elem[i - <span class=\"number\">1</span>]);<span class=\"comment\">//q是待插入的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(p = &amp;(L.elem[L.length - <span class=\"number\">1</span>]); p &gt;= q; p--)</span><br><span class=\"line\">    \t*(p + <span class=\"number\">1</span>) = *p;</span><br><span class=\"line\">    *q = e;</span><br><span class=\"line\">    ++L.length;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析：</p>\n<p 2=\"\">​\t设共有 n 个元素，在各个位置插入元素的概率相同，为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">p=\\frac{1}{n + 1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484389999999999em;vertical-align:-0.403331em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.403331em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，则插入一个元素时移动的平均值为\\sum\\limits_{i=1}^{n+1}p(n-i+1)=\\frac{n}</p>\n<h3 id=\"删除操作\"><a class=\"markdownIt-Anchor\" href=\"#删除操作\">#</a> 删除操作</h3>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在顺序表L中删除第i个元素，并用e返回其值</span></span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ListDelte_Sq</span><span class=\"params\">(Sqlist&amp; L, <span class=\"type\">int</span> i, ElemType &amp; e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i &lt; <span class=\"number\">1</span> || i &gt; L.length) <span class=\"keyword\">return</span> ERROR;<span class=\"comment\">//如果i不合法</span></span><br><span class=\"line\">    p = &amp;(L.elem[i - <span class=\"number\">1</span>]);</span><br><span class=\"line\">    e = *p;</span><br><span class=\"line\">    q = L.elem + L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(++p; p &lt;= q; ++p)</span><br><span class=\"line\">        *(p - <span class=\"number\">1</span>) = *p;</span><br><span class=\"line\">    --L.length;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析：</p>\n<p>​\t设共有 n 个元素，在各个地方删除元素的概率为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">p=\\frac{1}{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，则删除一个元素时移动元素的平均值为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\sum\\limits_{i=1}^{n}p(n-i) = \\frac{n-1}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.329066em;vertical-align:-0.9776689999999999em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3513970000000004em;\"><span style=\"top:-2.122331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0000050000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.950005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9776689999999999em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>​</p>\n<h3 id=\"合并操作\"><a class=\"markdownIt-Anchor\" href=\"#合并操作\">#</a> 合并操作</h3>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//将线性表Lb中的且不再La中的元素合并到La中</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">union</span><span class=\"params\">(Sqlist&amp; La, Sqlist&amp; Lb)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    La_len = La.length; Lb_len = Lb.Length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= Lb_len; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">GetElem</span>(Lb, i, e);<span class=\"comment\">//从Lb中取第i个元素赋值给e</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"built_in\">LocateElem</span>(La, e, equal))</span><br><span class=\"line\">        \t<span class=\"built_in\">ListInsert</span>(La, ++La_len, e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"合并并排序操作\"><a class=\"markdownIt-Anchor\" href=\"#合并并排序操作\">#</a> 合并并排序操作</h3>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//归并非递减排序线性表La和Lb，得到Lc并且Lc按非递减排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MergeList</span><span class=\"params\">(Sqlist La, Sqlist Lb, Sqlist&amp; Lc)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\ti = j = k = <span class=\"number\">0</span>;</span><br><span class=\"line\">    La_len = La.length; Lb_len = Lb.Length;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt;= La_len &amp;&amp; j &lt;= Lb_len)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">Getelem</span>(La, i, ai); <span class=\"built_in\">Getelem</span>(Lb, j, bj);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ai &lt;= bj) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">ListInsert</span>(Lc, ++k, ai);</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">ListInsert</span>(Lc, ++k, bj);</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt;= La_len)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">GetElem</span>(La, i++, ai);</span><br><span class=\"line\">            <span class=\"built_in\">ListInsert</span>(Lc, ++k, ai);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j &lt;= Lb_len)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">GetElem</span>(Lb, j++, bj);</span><br><span class=\"line\">            <span class=\"built_in\">ListInsert</span>(Lc, ++k, bj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"顺序结构存储的评价\"><a class=\"markdownIt-Anchor\" href=\"#顺序结构存储的评价\">#</a> 顺序结构存储的评价</h3>\n<ol>\n<li>优点\n<ol>\n<li>是一种随机存取结构，存取任何元素的时间是一个常数，速度快</li>\n<li>结构简单，逻辑上相邻的元素，物理上也是相邻的</li>\n<li>不使用指针，节省存储空间</li>\n</ol>\n</li>\n<li>缺点\n<ol>\n<li>插入和删除需要移动大量数据，消耗大量时间</li>\n<li>需要一块连续的空间</li>\n<li>插入元素时可能会 “溢出”</li>\n<li>自由区中的存储空间不能被其他数据占用（共享）</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"链式存储结构\"><a class=\"markdownIt-Anchor\" href=\"#链式存储结构\">#</a> 链式存储结构</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">node</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* next;</span><br><span class=\"line\">&#125;node, *Linklist;</span><br></pre></td></tr></table></figure>\n<h3 id=\"建立单链表\"><a class=\"markdownIt-Anchor\" href=\"#建立单链表\">#</a> 建立单链表</h3>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//“先进先出”（尾插）</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* <span class=\"built_in\">create1</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* head, tail, p;</span><br><span class=\"line\">    <span class=\"type\">int</span> e;</span><br><span class=\"line\">    head = (<span class=\"keyword\">struct</span> node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(LENG));</span><br><span class=\"line\">    tail = head;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;e);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(e != <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p = (<span class=\"keyword\">struct</span> node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(LENG));</span><br><span class=\"line\">        p-&gt;data = e;</span><br><span class=\"line\">        tail-&gt;next = p;</span><br><span class=\"line\">        tail = p;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tail-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//“后进先出&quot;（头插）</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* create2</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* head, p;</span><br><span class=\"line\">    <span class=\"type\">int</span> e;</span><br><span class=\"line\">    head = (<span class=\"keyword\">struct</span> node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(LENG));</span><br><span class=\"line\">    head-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;e);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(e != <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p = (<span class=\"keyword\">struct</span> node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(LENG));</span><br><span class=\"line\">        p-&gt;data = e;</span><br><span class=\"line\">        p-&gt;next = head-&gt;next;</span><br><span class=\"line\">        head-&gt;next = p;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"建立递增有序链表\"><a class=\"markdownIt-Anchor\" href=\"#建立递增有序链表\">#</a> 建立递增有序链表</h3>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不带头结点</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* <span class=\"built_in\">create3</span>(<span class=\"keyword\">struct</span> node* head, ElemType e)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    q = <span class=\"literal\">NULL</span>, p = head;<span class=\"comment\">//扫描，找到插入位置</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p &amp;&amp; e &gt; p-&gt;data)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s = (<span class=\"keyword\">struct</span> node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(node));</span><br><span class=\"line\">    s-&gt;data = e;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q == <span class=\"literal\">NULL</span>)<span class=\"comment\">//空表</span></span><br><span class=\"line\">            head = s;</span><br><span class=\"line\">        <span class=\"keyword\">else</span><span class=\"comment\">//尾插</span></span><br><span class=\"line\">            q-&gt;next = s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(q == <span class=\"literal\">NULL</span>)<span class=\"comment\">//头插</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        s-&gt;next = p;</span><br><span class=\"line\">        head = s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span><span class=\"comment\">//其他正常情况的插入</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        s-&gt;next = p;</span><br><span class=\"line\">        q-&gt;next = s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//带头节点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">create4</span><span class=\"params\">(<span class=\"keyword\">struct</span> node* head, ElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    q = head;</span><br><span class=\"line\">    p = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p &amp;&amp; e &gt; p-&gt;data)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s = (<span class=\"keyword\">struct</span> node*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(node));</span><br><span class=\"line\">    s-&gt;data = e;</span><br><span class=\"line\">    <span class=\"comment\">//可以直接插入，不讨论</span></span><br><span class=\"line\">    q-&gt;next = s;</span><br><span class=\"line\">    s-&gt;next = p;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入操作-2\"><a class=\"markdownIt-Anchor\" href=\"#插入操作-2\">#</a> 插入操作</h3>\n<p>​\t伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在i之前插入</span></span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ListInsert_L</span><span class=\"params\">(Linklist&amp; L, <span class=\"type\">int</span> i, ElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    p = L;</span><br><span class=\"line\">    j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p &amp;&amp; j &lt; i)<span class=\"comment\">//找到第i-1个结点</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p || j &gt; i) <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    s = (Linklist)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(node));</span><br><span class=\"line\">    s-&gt;data = e;</span><br><span class=\"line\">    s-&gt;next = p-&gt;next;</span><br><span class=\"line\">    p-&gt;next = s;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//在i之后插入</span></span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ListInsert_L</span><span class=\"params\">(Linklist&amp; L, <span class=\"type\">int</span> i, ElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    p = L;</span><br><span class=\"line\">    j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p &amp;&amp; j &lt; i)<span class=\"comment\">//找到第i个结点</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p || j &gt; i) <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    s = (Linklist)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(node));</span><br><span class=\"line\">    s-&gt;data = e;</span><br><span class=\"line\">    s-&gt;next = p-&gt;next;</span><br><span class=\"line\">    p-&gt;next = s;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除操作-2\"><a class=\"markdownIt-Anchor\" href=\"#删除操作-2\">#</a> 删除操作</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在带表头节点的链表中删除值为e的元素</span></span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ListDelete1</span><span class=\"params\">(stuct node* head, ElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* p, *q;</span><br><span class=\"line\">    q = head;</span><br><span class=\"line\">    p = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p &amp;&amp; p-&gt;data != e)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q-&gt;next = p-&gt;next;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> YES;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> NO;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//在单链表中删除指定位置的元素</span></span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ListDelete2</span><span class=\"params\">(<span class=\"keyword\">struct</span> node* head, <span class=\"type\">int</span> i, ElemType&amp; e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    p = head;</span><br><span class=\"line\">    j = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;next &amp;&amp; j &lt; i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i &lt;<span class=\"number\">1</span> || p-&gt;next == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    q = p-&gt;next;<span class=\"comment\">//q是待删除结点</span></span><br><span class=\"line\">    p-&gt;next = q-&gt;next;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(q);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> YES;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"合并操作-2\"><a class=\"markdownIt-Anchor\" href=\"#合并操作-2\">#</a> 合并操作</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//合并两个带头节点的链表</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* <span class=\"built_in\">Merge</span>(<span class=\"keyword\">struct</span> node* La, <span class=\"keyword\">struct</span> node* Lb)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>* pa, pb, pc;</span><br><span class=\"line\">    pa = La-&gt;next, pb = Lb-&gt;next;</span><br><span class=\"line\">    pc = La;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(Lb);<span class=\"comment\">//释放Lb的头指针</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pa &amp;&amp; pb)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pa-&gt;data &lt;= pb-&gt;data)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            pc-&gt;next = pa;</span><br><span class=\"line\">            pc = pa;</span><br><span class=\"line\">            pa = pa-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            pc-&gt;next = pb;</span><br><span class=\"line\">            pc = pb;</span><br><span class=\"line\">            pb = pb-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pa) pc-&gt;next = pa;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>  pc-&gt;next = pb; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> La;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"链式存储结构评价\"><a class=\"markdownIt-Anchor\" href=\"#链式存储结构评价\">#</a> 链式存储结构评价</h3>\n<ol>\n<li>优点：灵活地增加 / 插入，删除操作</li>\n<li>缺点：使用显式顺序指针代替隐式的相邻存储的位置关系，增加了存储空间</li>\n</ol>\n<h2 id=\"循环链表\"><a class=\"markdownIt-Anchor\" href=\"#循环链表\">#</a> 循环链表</h2>\n<ol>\n<li>\n<p>一般形式</p>\n<ol>\n<li>\n<p>带头结点的非空循环单链表，有：</p>\n<p><code>head-&gt;next != head, head != NULL</code></p>\n</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405291607660.png\" alt=\"\"></p>\n<ol>\n<li>\n<p>带表头结点的空循环单链表，有：</p>\n<p><code>head-&gt;next == head, head != NULL</code></p>\n</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292048524.png\" alt=\"\"></p>\n</li>\n<li>\n<p>只有尾节点（带头）</p>\n<ol>\n<li>\n<p>非空表，有：</p>\n<p><code>tail-&gt;data ==an</code></p>\n<p><code>tail-&gt;next指向表头结点</code></p>\n<p><code>tail-&gt;next-&gt;next指向首节点</code></p>\n<p><code>tail-&gt;next-&gt;next-&gt;data == a1</code></p>\n</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292048085.png\" alt=\"\"></p>\n<ol>\n<li>\n<p>空表，有：</p>\n<p><code>tail-&gt;next == tail</code></p>\n</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292048479.png\" alt=\"\"></p>\n</li>\n</ol>\n<p>两循环链表首尾相连 (时间复杂度 <code>O(1)</code> )</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292048842.png\" alt=\"\"></p>\n<p>​\t\t\t <code>p2 = tail2-&gt;next</code></p>\n<p>​\t\t\t <code>tail2-&gt;next = tail1-&gt;next</code></p>\n<p>​\t\t\t <code>tail1-&gt;next = p2-&gt;next</code></p>\n<p>​\t\t\t <code>free(p2)</code></p>\n<h2 id=\"双向链表\"><a class=\"markdownIt-Anchor\" href=\"#双向链表\">#</a> 双向链表</h2>\n<ol>\n<li>\n<p>非空表</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292047040.png\" alt=\"image-20240529163639637\"></p>\n<p>L 为头指针，L 指向表头结点， <code>L-&gt;next</code>  指向首节点 <code>L-&gt;next-&gt;data == a1</code></p>\n<p><code>L-&gt;prior</code>  指向尾节点， <code>L-&gt;prior-&gt;data == an</code></p>\n<p><code>L-&gt;next-&gt;prior == L-&gt;prior-&gt;next == NULL</code></p>\n</li>\n<li>\n<p>空表</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292047672.png\" alt=\"\"></p>\n<p>​\t\t <code>L-&gt;next == L-&gt;prior == NULL</code></p>\n</li>\n</ol>\n<h2 id=\"双向循环链表\"><a class=\"markdownIt-Anchor\" href=\"#双向循环链表\">#</a> 双向循环链表</h2>\n<ol>\n<li>\n<p>非空表</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292047950.png\" alt=\"\"></p>\n<p>L 为头指针，L 指向表头结点， <code>L-&gt;next</code>  指向首节点 <code>L-&gt;next-&gt;data == a1</code></p>\n<p><code>L-&gt;prior</code>  指向尾节点， <code>L-&gt;prior-&gt;data == an</code></p>\n<p><code>L-&gt;next-&gt;prior == L-&gt;prior-&gt;next == L</code></p>\n</li>\n<li>\n<p>空表</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292047389.png\" alt=\"\"></p>\n<p>​\t\t <code>L-&gt;next == L-&gt;prior == L</code></p>\n</li>\n</ol>\n<h2 id=\"各链表比较\"><a class=\"markdownIt-Anchor\" href=\"#各链表比较\">#</a> 各链表比较</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292049549.png\" alt=\"\"></p>\n<h1 id=\"栈\"><a class=\"markdownIt-Anchor\" href=\"#栈\">#</a> 栈</h1>\n<p>栈：限定在表尾做插入、删除的线性表 —“后进先出”</p>\n<h2 id=\"adt-2\"><a class=\"markdownIt-Anchor\" href=\"#adt-2\">#</a> ADT</h2>\n<p>ADT Stack</p>\n<p>{</p>\n<p a_i|a_i∈ElemSet,i=\"1,2,...n,n\\geq\" 0\\right\\=\"\">​\t数据对象：D=\\left\\</p>\n<p>​\t数据关系：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mn>1</mn><mo>=</mo><mrow><mo fence=\"true\">{</mo><mo>&lt;</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>&gt;</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>=</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R1=\\left\\{&lt;a_{i-1},a_i&gt;| a_{i-1},a_i∈D,i=2,...n\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span>，约定<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 端为栈顶端，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 端为栈底</p>\n<p>​\t基本操作：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span><span class=\"built_in\">InitStack</span>(&amp;S) <span class=\"comment\">//构造一个空栈。 </span></span><br><span class=\"line\"><span class=\"number\">2.</span><span class=\"built_in\">ClearStack</span>(&amp;S) <span class=\"comment\">//置s为空栈。</span></span><br><span class=\"line\"><span class=\"number\">3.</span><span class=\"built_in\">DestroyStack</span>(&amp;S) <span class=\"comment\">//栈s被销毁</span></span><br><span class=\"line\"><span class=\"number\">4.</span><span class=\"built_in\">Push</span>(&amp;S,e) <span class=\"comment\">//元素e进栈S。</span></span><br><span class=\"line\"><span class=\"number\">5.</span><span class=\"built_in\">Pop</span>(&amp;S,&amp;e) <span class=\"comment\">//删除栈S的顶元素，并送入e 。</span></span><br><span class=\"line\"><span class=\"number\">6.</span><span class=\"built_in\">GetTop</span>(S,&amp;e) <span class=\"comment\">//将非空栈S的栈顶元素拷贝到e（与（4）的Pop操作是不同的）。</span></span><br><span class=\"line\"><span class=\"number\">7.</span><span class=\"built_in\">StackEmpty</span>(&amp;S) <span class=\"comment\">//判断s是否为空栈。若s为空栈,则返回值为true；否则为false。</span></span><br><span class=\"line\"><span class=\"number\">8.</span><span class=\"built_in\">StackLength</span>(S) <span class=\"comment\">//栈S的长度</span></span><br></pre></td></tr></table></figure>\n<p>}ADT Stack</p>\n<h2 id=\"栈的输出特点\"><a class=\"markdownIt-Anchor\" href=\"#栈的输出特点\">#</a> 栈的输出特点</h2>\n<p>一般地，输入序列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>k</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(...,a_i,...,a_j,...,a_k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 到栈中，不能得到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(...,a_k,...,a_i,...,a_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>​</p>\n<h2 id=\"栈的存储结构\"><a class=\"markdownIt-Anchor\" href=\"#栈的存储结构\">#</a> 栈的存储结构</h2>\n<p>栈的范围为 <code>s[0...maxlen- 1]</code></p>\n<ol>\n<li>\n<p>顶指针指向栈顶元素所在的位置</p>\n<p>栈顶元素：s [top]</p>\n<p>进栈：先对 top + 1，再将新数据指向 top</p>\n<p>出栈：先取栈顶元素，再对 top - 1</p>\n<p>空栈： <code>top == -1</code></p>\n<p>非空栈： <code>top &gt;= 0</code></p>\n<p>满栈： <code>top == maxlen - 1</code></p>\n</li>\n<li>\n<p>顶指针指向顶元素上的一空位置</p>\n<p>栈顶元素：s [top - 1]</p>\n<p>进栈：先将新数据指向 top，再对 top + 1</p>\n<p>出栈：先对 top - 1，再取栈顶元素</p>\n<p>空栈： <code>top == 0</code></p>\n<p>非空栈： <code>top &gt;= 0</code></p>\n<p>满栈： <code>top == maxlen</code></p>\n</li>\n</ol>\n<p><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mrow><mtext>顺序栈规定</mtext><mi>t</mi><mi>o</mi><mi>p</mi><mtext>指向栈元素上一空位置</mtext></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{顺序栈规定top指向栈元素上一空位置}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord cjk_fallback\" style=\"color:red;\">顺</span><span class=\"mord cjk_fallback\" style=\"color:red;\">序</span><span class=\"mord cjk_fallback\" style=\"color:red;\">栈</span><span class=\"mord cjk_fallback\" style=\"color:red;\">规</span><span class=\"mord cjk_fallback\" style=\"color:red;\">定</span><span class=\"mord mathnormal\" style=\"color:red;\">t</span><span class=\"mord mathnormal\" style=\"color:red;\">o</span><span class=\"mord mathnormal\" style=\"color:red;\">p</span><span class=\"mord cjk_fallback\" style=\"color:red;\">指</span><span class=\"mord cjk_fallback\" style=\"color:red;\">向</span><span class=\"mord cjk_fallback\" style=\"color:red;\">栈</span><span class=\"mord cjk_fallback\" style=\"color:red;\">元</span><span class=\"mord cjk_fallback\" style=\"color:red;\">素</span><span class=\"mord cjk_fallback\" style=\"color:red;\">上</span><span class=\"mord cjk_fallback\" style=\"color:red;\">一</span><span class=\"mord cjk_fallback\" style=\"color:red;\">空</span><span class=\"mord cjk_fallback\" style=\"color:red;\">位</span><span class=\"mord cjk_fallback\" style=\"color:red;\">置</span></span></span></span></span>​</strong></p>\n<h2 id=\"顺序栈\"><a class=\"markdownIt-Anchor\" href=\"#顺序栈\">#</a> 顺序栈</h2>\n<p>存储表示：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STACK_INIT_SIZE 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STACKINCREMENT 10</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SElemType *base;</span><br><span class=\"line\">    SElemType *top;</span><br><span class=\"line\">    <span class=\"type\">int</span> stacksize;</span><br><span class=\"line\">&#125;SqStack;</span><br></pre></td></tr></table></figure>\n<p>初始化栈：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitStack</span><span class=\"params\">(SqStack &amp;S)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    S.base =(SElemType*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(SElemType)*STACK_INIT_SIZE);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.base) <span class=\"built_in\">exit</span>(OVERFLOW);<span class=\"comment\">//内存分配失败</span></span><br><span class=\"line\">    S.top = S.base;</span><br><span class=\"line\">    S.stacksize = STACK_INIT_SIZE;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>进栈：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Push</span><span class=\"params\">(SqStack &amp;S, SElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果内存不够</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.top - S.base &gt;= S.stacksize) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        S.base = (SElemType*)<span class=\"built_in\">realloc</span>(S.base,(S.stacksize + STACK_INIT_SIZE)*<span class=\"built_in\">sizeof</span>(SElemType));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!S.base) <span class=\"built_in\">exit</span>(OVERFLOW);<span class=\"comment\">//如果分配失败</span></span><br><span class=\"line\">        S.top = S.base + S.stacksize;</span><br><span class=\"line\">        S.stacksize += STACKINITSIZE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *(S.top++) = e;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>出栈：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Pop</span><span class=\"params\">(SqStack &amp;S, SElemType &amp;e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.top == S.base) <span class=\"keyword\">return</span> ERROR;<span class=\"comment\">//如果栈为空</span></span><br><span class=\"line\">    e = *--S.top;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"链式栈\"><a class=\"markdownIt-Anchor\" href=\"#链式栈\">#</a> 链式栈</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292207525.png\" alt=\"\"></p>\n<p>让 top 指向 an，进栈将新节点作为首节点，出栈删除首节点，保证进出栈时间为常数</p>\n<h2 id=\"栈的应用\"><a class=\"markdownIt-Anchor\" href=\"#栈的应用\">#</a> 栈的应用</h2>\n<h3 id=\"数制转换\"><a class=\"markdownIt-Anchor\" href=\"#数制转换\">#</a> 数制转换</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292226270.png\" alt=\"\"></p>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">conversion</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">InitStack</span>(S);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,N);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(N)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">Push</span>(S, N % <span class=\"number\">8</span>);</span><br><span class=\"line\">        N /= <span class=\"number\">8</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!<span class=\"built_in\">StackEmpty</span>(S))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">Pop</span>(S, e);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"括号匹配\"><a class=\"markdownIt-Anchor\" href=\"#括号匹配\">#</a> 括号匹配</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292231643.png\" alt=\"\"></p>\n<h3 id=\"表达式求值\"><a class=\"markdownIt-Anchor\" href=\"#表达式求值\">#</a> 表达式求值</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292253188.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292254637.png\" alt=\"\"></p>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">OperandType <span class=\"title\">EvaluateExpression</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">InitStack</span>(OPTR); <span class=\"built_in\">Push</span>(OPTR, <span class=\"string\">&#x27;#&#x27;</span>);<span class=\"comment\">//初始化操作符的栈</span></span><br><span class=\"line\">    <span class=\"built_in\">InitStack</span>(OPND); c = <span class=\"built_in\">getchar</span>();<span class=\"comment\">//初始化操作数的栈</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(c != <span class=\"string\">&#x27;#&#x27;</span> || <span class=\"built_in\">GetTop</span>(OPTR) != <span class=\"string\">&#x27;#&#x27;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"built_in\">In</span>(c, OP))<span class=\"comment\">//如果不是运算符就进栈</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">Push</span>(OPND, c);</span><br><span class=\"line\">            c = <span class=\"built_in\">getchar</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span>(<span class=\"built_in\">Precede</span>(<span class=\"built_in\">GetTop</span>(OPTR), c))<span class=\"comment\">/*判断优先级*/</span></span><br><span class=\"line\">             \t<span class=\"comment\">/*栈顶优先级低*/</span></span><br><span class=\"line\">                <span class=\"keyword\">case</span><span class=\"number\">&#x27;</span>&lt;<span class=\"string\">&#x27;:</span></span><br><span class=\"line\"><span class=\"string\">            \t\tPush(OPRT, c);</span></span><br><span class=\"line\"><span class=\"string\">            \t\tc = getchar();</span></span><br><span class=\"line\"><span class=\"string\">            \t\tbreak;</span></span><br><span class=\"line\"><span class=\"string\">            \t/*脱括号并接收下一个字符*/</span></span><br><span class=\"line\"><span class=\"string\">            \tcase&#x27;</span>=<span class=\"string\">&#x27;:</span></span><br><span class=\"line\"><span class=\"string\">            \t\tPop(OPRT, x);</span></span><br><span class=\"line\"><span class=\"string\">            \t\tc = getchar();</span></span><br><span class=\"line\"><span class=\"string\">            \t\tbreak;</span></span><br><span class=\"line\"><span class=\"string\">               /*退栈并将运算符结果入栈*/</span></span><br><span class=\"line\"><span class=\"string\">            \tcase&#x27;</span>&gt;<span class=\"string\">&#x27;:</span></span><br><span class=\"line\"><span class=\"string\">            \t\tPop(OPRT, theta);</span></span><br><span class=\"line\"><span class=\"string\">            \t\tPop(OPND, b);</span></span><br><span class=\"line\"><span class=\"string\">            \t\tPop(OPND, a);</span></span><br><span class=\"line\"><span class=\"string\">            \t\tPush(OPND, Operate(a, theta, b));</span></span><br><span class=\"line\"><span class=\"string\">            \t\tbreak;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">    return GetTop(OPND);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"队列\"><a class=\"markdownIt-Anchor\" href=\"#队列\">#</a> 队列</h1>\n<p>队列：只允许在表的一端插入一端删除的数据结构 —“先进先出”</p>\n<h2 id=\"adt-3\"><a class=\"markdownIt-Anchor\" href=\"#adt-3\">#</a> ADT</h2>\n<p>ADT Queue</p>\n<p>{</p>\n<p a_i|a_i∈ElemSet,i=\"1,2,...n,n\\geq\" 0\\right\\=\"\">​\t数据对象：D=\\left\\</p>\n<p>​\t数据关系：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mn>1</mn><mo>=</mo><mrow><mo fence=\"true\">{</mo><mo>&lt;</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>&gt;</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>i</mi><mo>=</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>n</mi><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R1=\\left\\{&lt;a_{i-1},a_i&gt;| a_{i-1},a_i∈D,i=2,...n\\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span>，约定<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 端为队列尾，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 端为队列头</p>\n<p>​\t基本操作：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span><span class=\"built_in\">InitQueue</span>(&amp;Q) <span class=\"comment\">//初始化,构造空队列。</span></span><br><span class=\"line\"><span class=\"number\">2.</span><span class=\"built_in\">DestroyQueue</span>(&amp;Q) <span class=\"comment\">//销毁Q队列。</span></span><br><span class=\"line\"><span class=\"number\">3.</span><span class=\"built_in\">ClearQueue</span>(&amp;Q) <span class=\"comment\">//置Q为空队列。</span></span><br><span class=\"line\"><span class=\"number\">4.</span><span class=\"built_in\">QueueEmpty</span>(Q) <span class=\"comment\">//判断Q是否为空队列。</span></span><br><span class=\"line\"><span class=\"number\">5.</span><span class=\"built_in\">EnQueue</span>(&amp;Q,e) <span class=\"comment\">//将e插入队列Q的尾端。</span></span><br><span class=\"line\"><span class=\"number\">6.</span><span class=\"built_in\">DeQueue</span>(&amp;Q,&amp;e) <span class=\"comment\">//取走队列Q的首元素,送e。</span></span><br><span class=\"line\"><span class=\"number\">7.</span><span class=\"built_in\">GetHead</span>(Q,&amp;e) <span class=\"comment\">//读取队列Q的首元素,送e。</span></span><br><span class=\"line\"><span class=\"number\">8.</span><span class=\"built_in\">QueueLengrh</span>(Q) <span class=\"comment\">//返回队列长度</span></span><br></pre></td></tr></table></figure>\n<p>}ADT Queue</p>\n<h2 id=\"链式队列\"><a class=\"markdownIt-Anchor\" href=\"#链式队列\">#</a> 链式队列</h2>\n<p>用带头节点的单链表表示队列</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292334133.png\" alt=\"\"></p>\n<p>存储表示：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">QNode</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    QElemType data;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">QNode</span>* next;</span><br><span class=\"line\">&#125;QNode, *QueuePtr;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    QueuePtr front;<span class=\"comment\">//队头指针</span></span><br><span class=\"line\">    QueuePtr rear;<span class=\"comment\">//队尾指针</span></span><br><span class=\"line\">&#125;LinkQueue;</span><br></pre></td></tr></table></figure>\n<p>初始化队列：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitQueue</span><span class=\"params\">(LinkQueue&amp; Q)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Q.front = Q.rear = (QueuePtr)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(QNode));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!Q.front) <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    Q.front-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>插入元素：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Status <span class=\"title\">EnQueue</span><span class=\"params\">(LinkQueue&amp; Q, QElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    p = (QueuePtr)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(QNode));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p) <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    p-&gt;data = e;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    Q.rear-&gt;next = p;</span><br><span class=\"line\">    Q.rear = p;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>删除元素：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292349895.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405292349851.png\" alt=\"\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Status <span class=\"title\">DeQueue</span><span class=\"params\">(LinkQueue&amp; Q, QElemType&amp; e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Q.front == Q.rear) <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    p = Q.front-&gt;next;<span class=\"comment\">//头插</span></span><br><span class=\"line\">    e = p-&gt;data;</span><br><span class=\"line\">    Q.front-&gt;next = p-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Q.rear == p) Q.rear = Q.front;<span class=\"comment\">//如果是只有一个节点的情况</span></span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"循环队列\"><a class=\"markdownIt-Anchor\" href=\"#循环队列\">#</a> 循环队列</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzYxOTU5NzgwL2FydGljbGUvZGV0YWlscy8xMjczMzI5NDA/YXBwX3ZlcnNpb249Ni4yLjkmYW1wO2NvZGU9YXBwXzE1NjI5MTYyNDEmYW1wO2NzZG5fc2hhcmVfdGFpbD0lN0IlMjJ0eXBlJTIyJTNBJTIyYmxvZyUyMiUyQyUyMnJUeXBlJTIyJTNBJTIyYXJ0aWNsZSUyMiUyQyUyMnJJZCUyMiUzQSUyMjEyNzMzMjk0MCUyMiUyQyUyMnNvdXJjZSUyMiUzQSUyMmx1Y2t5WVk1MjAlMjIlN0QmYW1wO3VMaW5rSWQ9dXNyMW1rcWdsOTE5YmxlbiZhbXA7dXRtX3NvdXJjZT1hcHA=\">参考此篇 blog</span></p>\n<p>分辨队满 &amp; 队空</p>\n<ol>\n<li>rear 指向的为空，留一个空位置\n<ol>\n<li>队空： <code>q.rear == q.front</code></li>\n<li>队满： <code>q.rear + 1 == q.front</code></li>\n</ol>\n</li>\n<li>设置 flag 标志\n<ol>\n<li>入队时如果 <code>q.rear == q.front</code> ，则队满，设置 flag 为 true</li>\n<li>出队时如果 <code>q.rear == q.front</code> ，则队空，设置 flag 为 false</li>\n</ol>\n</li>\n<li>记录 length</li>\n</ol>\n<p>找到 front, rear, length 的关系</p>\n<p><code>front = (rear + MAXSIZE - length) % MAXSIZE</code></p>\n<h1 id=\"数组\"><a class=\"markdownIt-Anchor\" href=\"#数组\">#</a> 数组</h1>\n<h2 id=\"数组的递归定义\"><a class=\"markdownIt-Anchor\" href=\"#数组的递归定义\">#</a> 数组的递归定义</h2>\n<ul>\n<li>\n<p>一维数组：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a_1,a_2,...,a_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为数据元素<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1\\leq i\\leq n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.79549em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></p>\n</li>\n<li>\n<p>二维数组：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>α</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\alpha_1,\\alpha_2,...,\\alpha_m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mrow><mi>i</mi><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mn>2</mn></mrow></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\alpha_i = (a_{i1}, a_{i2},...,a_{in})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为行向量，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">1\\leq i\\leq m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.79549em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span></p>\n</li>\n<li>\n<p>三维数组：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>β</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>β</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>β</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\beta_1,\\beta_2,...,\\beta_p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>β</mi><mi>k</mi></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>α</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\beta_k=(\\alpha_1,\\alpha_2,...,\\alpha_m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">1\\leq k\\leq p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>​</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301404268.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"数组的顺序表示\"><a class=\"markdownIt-Anchor\" href=\"#数组的顺序表示\">#</a> 数组的顺序表示</h2>\n<ol>\n<li 左边的下标后变化，右边的下标先变化=\"\">\n<p>以行序为主序的顺序存储方式</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n</li>\n<li>\n<p>以列序为主序的顺序存储方式</p>\n<p 左边的下标先变化，右边的下标后变化=\"\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301413278.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301415139.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"数组的映像函数\"><a class=\"markdownIt-Anchor\" href=\"#数组的映像函数\">#</a> 数组的映像函数</h2>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301418472.png\" style=\"zoom: 67%;\" />\n<ol>\n<li>\n<p>以行序为主序，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的地址为：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>n</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">Loc(i, j) = Loc(1, 1)+((i - 1)*n +(j - 1))*s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span></p>\n</li>\n<li>\n<p>以列序为主序，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的地址为：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>m</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">Loc(i,j)=Loc(1,1)+((j-1)*m+(i-1))*s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span></p>\n</li>\n</ol>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301422772.png\" style=\"zoom:67%;\" />\n<ol>\n<li>\n<p>以行序为主序，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[k][i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的地址为：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>m</mi><mo>∗</mo><mi>n</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>m</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">Loc(k,i,j)=Loc(1,1,1)+((k-1)*m*n+(i-1)*m+(j-1))*s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span></p>\n</li>\n<li>\n<p>以列序为主序，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[k][i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的地址为：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>L</mi><mi>o</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>p</mi><mo>∗</mo><mi>m</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>p</mi><mo>+</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">Loc(k,i,j)=Loc(1,1,1)+((j-1)*p*m+(i-1)*p+k-1)*s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6597200000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span></p>\n</li>\n</ol>\n<h2 id=\"矩阵的压缩存储\"><a class=\"markdownIt-Anchor\" href=\"#矩阵的压缩存储\">#</a> 矩阵的压缩存储</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301905856.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301909749.png\" alt=\"\"></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">a_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 在 SA 中的序号：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">k(i,j) =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>i</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>+</mo><mi>j</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>i</mi><mo>≥</mo><mi>j</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>j</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo>+</mo><mi>i</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\\begin{aligned}i(i-1)/2 + j&amp; &amp;i \\geq j\\\\ j(j-1)/2+i&amp; &amp;i&lt;j\\end{aligned}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.00003em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7500000000000002em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2500000000000002em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7500000000000002em;\"><span style=\"top:-3.75em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2500000000000002em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7500000000000002em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2500000000000002em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>​</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301916257.png\" alt=\"\"></p>\n<p>任意<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo mathvariant=\"normal\">≠</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">a_{ij}\\neq 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>，在 SA 中的序号：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mn>3</mn><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>i</mi><mo>+</mo><mi>j</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">k=((i-1)*3-1)+(j-i+2)=2i+j-2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">A[i,j]=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>k</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi mathvariant=\"normal\">∣</mi><mi>i</mi><mo>−</mo><mi>j</mi><mi mathvariant=\"normal\">∣</mi><mo>≤</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>其他</mtext></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\\begin{aligned}k&amp; &amp;|i-j|\\leq 1\\\\ 0&amp; &amp;其他\\end{aligned}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.00003em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7500000000000002em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2500000000000002em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7500000000000002em;\"><span style=\"top:-3.75em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"><span class=\"mord\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2500000000000002em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7500000000000002em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">他</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2500000000000002em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405301941684.jpg\" alt=\"\"></p>\n<h2 id=\"稀疏矩阵的存储\"><a class=\"markdownIt-Anchor\" href=\"#稀疏矩阵的存储\">#</a> 稀疏矩阵的存储</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405302304289.png\" alt=\"\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义的存储结构</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXSIZE 12500</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, j;<span class=\"comment\">//非零元的下标</span></span><br><span class=\"line\">    ElemType e;</span><br><span class=\"line\">&#125;Triple;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Triple data[MAXSIZE + <span class=\"number\">1</span>];<span class=\"comment\">//非零元三元组表</span></span><br><span class=\"line\">    <span class=\"type\">int</span> mu, nu, tu;<span class=\"comment\">//矩阵的行数、列数和非零元的个数</span></span><br><span class=\"line\">&#125;TSMatrix;</span><br><span class=\"line\"><span class=\"comment\">//求稀疏矩阵的转置</span></span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">FastTransposeSMatrix</span><span class=\"params\">(TSMatrix M, TSMatrix &amp;T)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    T.mu = M.nu, T.nu = M.mu, T.tu = M.tu;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T.tu)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col = <span class=\"number\">1</span>; col &lt;= M.nu; col++) num[col] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(t = <span class=\"number\">1</span>; t &lt;= M.tu; t++) ++num[M.data[t].j];</span><br><span class=\"line\">        cpot[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col = <span class=\"number\">2</span>;col &lt;= M.nu; ++col) cpot[col] = cpot[col - <span class=\"number\">1</span>] + num[col - <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(p = <span class=\"number\">1</span>; p &lt;= M.tu; p++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            col = M.data[p].j;</span><br><span class=\"line\">            q = cpot[col];</span><br><span class=\"line\">            T.data[q].i = M.data[p].j;</span><br><span class=\"line\">            T.data[q].j = M.data[p].i;</span><br><span class=\"line\">            T.data[q].e = M.data[p].e;</span><br><span class=\"line\">            ++cpot[col];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"十字链接表\"><a class=\"markdownIt-Anchor\" href=\"#十字链接表\">#</a> 十字链接表</h2>\n<p>[见此篇 blog](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTg1OTk5L2FydGljbGUvZGV0YWlscy8xMDUwODMyNzQ=\">稀疏矩阵的十字链表存储表示和实现（第五章 P104 算法 5.4）_用十字链表实现稀疏矩阵的存储，写出其创建和输出算法 - CSDN 博客</span></p>\n<h1 id=\"广义表\"><a class=\"markdownIt-Anchor\" href=\"#广义表\">#</a> 广义表</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406062335576.jpg\" alt=\"\"></p>\n<h1 id=\"二叉树\"><a class=\"markdownIt-Anchor\" href=\"#二叉树\">#</a> 二叉树</h1>\n<h2 id=\"二叉树的性质\"><a class=\"markdownIt-Anchor\" href=\"#二叉树的性质\">#</a> 二叉树的性质</h2>\n<ol>\n<li>二叉树第 i 层，最多有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2^{i-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.824664em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> 个结点</li>\n<li>深度为 k 的二叉树，最多有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^k - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.932438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个结点</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n_0=n_2+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n<li>n 个结点的满二叉树深度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">log_2(n+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>顺序编号的满二叉树<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1,2,...,n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>\n<ul>\n<li>结点 i 的左孩子为 2i，右孩子为 2i+1</li>\n<li>结点 i 的双亲为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌊</mo><mi>i</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">\\lfloor i/2\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">/</span><span class=\"mord\">2</span><span class=\"mclose\">⌋</span></span></span></span></li>\n<li>结点 i 的层号<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>i</mi><mo stretchy=\"false\">⌋</mo><mo>+</mo><mn>1</mn><mo>=</mo><mo stretchy=\"false\">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">⌉</mo></mrow><annotation encoding=\"application/x-tex\">\\lfloor log_2i\\rfloor+1=\\lceil log_2(n+1)\\rceil</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌈</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">⌉</span></span></span></span>​</li>\n</ul>\n</li>\n<li>n 个结点可以组成<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo><mi>n</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{(2n)!}{(n+1)!n!}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 棵形态不同的二叉树</li>\n</ol>\n<h2 id=\"二叉树的存储\"><a class=\"markdownIt-Anchor\" href=\"#二叉树的存储\">#</a> 二叉树的存储</h2>\n<h3 id=\"顺序存储\"><a class=\"markdownIt-Anchor\" href=\"#顺序存储\">#</a> 顺序存储</h3>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406041323914.png\" alt=\"\"></p>\n<h3 id=\"链式存储\"><a class=\"markdownIt-Anchor\" href=\"#链式存储\">#</a> 链式存储</h3>\n<ol>\n<li>二叉链表</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* lcild;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* rchild;</span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>三叉链表</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* parent;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* lcild;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* rchild;</span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>静态链表</li>\n</ol>\n<h2 id=\"二叉树的遍历\"><a class=\"markdownIt-Anchor\" href=\"#二叉树的遍历\">#</a> 二叉树的遍历</h2>\n<p>时间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，空间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>​</p>\n<blockquote>\n<p>前序 + 中序 / 中序 + 后序可以唯一确定一个二叉树</p>\n<p>前序 + 后序不能唯一确定一个二叉树 (eg: 先序 ABC 后序 CBA)</p>\n</blockquote>\n<h3 id=\"先序遍历\"><a class=\"markdownIt-Anchor\" href=\"#先序遍历\">#</a> 先序遍历</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* BitTree;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PreOrderTraverse</span><span class=\"params\">(BiTree T)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, T-&gt;data);</span><br><span class=\"line\">        <span class=\"built_in\">PreOrderTraverse</span>(T-&gt;lchild);</span><br><span class=\"line\">        <span class=\"built_in\">PreOrderTraverse</span>(T-&gt;rchild);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"中序遍历\"><a class=\"markdownIt-Anchor\" href=\"#中序遍历\">#</a> 中序遍历</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* BitTree;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MidOrderTraverse</span><span class=\"params\">(BitTree T)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">MidOrderTraverse</span>(T-&gt;lchild);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, T-&gt;data);</span><br><span class=\"line\">        <span class=\"built_in\">MidOrderTraverse</span>(T-&gt;rchild);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"后序遍历\"><a class=\"markdownIt-Anchor\" href=\"#后序遍历\">#</a> 后序遍历</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* BitTree;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PostOrderTraverse</span><span class=\"params\">(BitTree T)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">PostOrderTraverse</span>(T-&gt;lchild);</span><br><span class=\"line\">        <span class=\"built_in\">PostOrderTraverse</span>(T-&gt;rchild);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, T-&gt;data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"非递归遍历\"><a class=\"markdownIt-Anchor\" href=\"#非递归遍历\">#</a> 非递归遍历</h3>\n<p>中序遍历：</p>\n<ol>\n<li>第一次访问到根节点不访问，直接入栈</li>\n<li>中序遍历左子树，左子树遍历结束之后，第二次遇到根节点，退栈进行访问，然后中序遍历右子树</li>\n<li>退栈时栈为空结束</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* BitTree;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MidOrder</span><span class=\"params\">(BitTree t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    BitTree st[max_length];</span><br><span class=\"line\">    <span class=\"type\">int</span> top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(t)<span class=\"comment\">//遍历完左孩子</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(top == max_length) <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">            st[top++] = t;</span><br><span class=\"line\">            t = t-&gt;lchild;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(top)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            t = st[--top];</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, t-&gt;data);<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">            t = t-&gt;rchild;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(top || t);<span class=\"comment\">//如果还有右子树 或者 栈非空（父节点未访问）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>前序遍历：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* BitTree;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PreOrder</span><span class=\"params\">(BitTree t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    BitTree st[max_length];</span><br><span class=\"line\">    <span class=\"type\">int</span> top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(t)<span class=\"comment\">//遍历完左孩子</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(top == max_length) <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">            st[top++] = t;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, t-&gt;data);<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">            t = t-&gt;lchild;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(top)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            t = st[--top];</span><br><span class=\"line\">            t = t-&gt;rchild;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(top || t);<span class=\"comment\">//如果还有右子树 或者 栈非空（父节点未访问）</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>后序遍历：</p>\n<ol>\n<li>沿着根的左孩子依次入栈，直到左孩子为空</li>\n<li>如果没有右孩子，或者右孩子已经访问过，就访问该根节点</li>\n<li>栈顶元素出栈</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PostOrder</span><span class=\"params\">(BitTree t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    BitTree last;<span class=\"comment\">//上一个访问的节点</span></span><br><span class=\"line\">    BitTree st[maxlength];</span><br><span class=\"line\">    <span class=\"type\">int</span> top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        st[top++] = t;</span><br><span class=\"line\">        t = t-&gt;lchild;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(top)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tBitTree tmp = st[--top];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((tmp-&gt;lchild ==<span class=\"literal\">NULL</span> &amp;&amp; tmp-&gt;rchild == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"comment\">/*如果左右孩子均为空*/</span></span><br><span class=\"line\">           ||(tmp-&gt;rchild == last)<span class=\"comment\">/*右孩子已经访问完*/</span></span><br><span class=\"line\">           ||(tmp-&gt;rchild == <span class=\"literal\">NULL</span> &amp;&amp; tmp-&gt;lchild == last))<span class=\"comment\">/*右孩子为空，左孩子访问了*/</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, tmp-&gt;data);<span class=\"comment\">//访问</span></span><br><span class=\"line\">            last = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            BitTree r = tmp-&gt;rchild;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(r)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                st[top++] = r;</span><br><span class=\"line\">                r = r-&gt;l·child;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"层序遍历\"><a class=\"markdownIt-Anchor\" href=\"#层序遍历\">#</a> 层序遍历</h3>\n<p>原理 ：使用队列进行存储，将根节点放入队列中，并且访问之后将该节点的左右孩子加入队列中</p>\n<h2 id=\"创建二叉树\"><a class=\"markdownIt-Anchor\" href=\"#创建二叉树\">#</a> 创建二叉树</h2>\n<h3 id=\"递归法\"><a class=\"markdownIt-Anchor\" href=\"#递归法\">#</a> 递归法</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">CreateBiTree</span><span class=\"params\">(BiTree&amp; root)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> ch;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%c&quot;</span>, &amp;ch);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch == #) root = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        root = (BiTree)<span class=\"built_in\">malloc</span>(SIZE);</span><br><span class=\"line\">        root-&gt;data = ch;</span><br><span class=\"line\">        <span class=\"built_in\">CreateBiTree</span>(root-&gt;lchild);</span><br><span class=\"line\">        <span class=\"built_in\">CreateBiTree</span>(root-&gt;rchild);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"非递归法\"><a class=\"markdownIt-Anchor\" href=\"#非递归法\">#</a> 非递归法</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">BiTree <span class=\"title\">CreateTree</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i, j;</span><br><span class=\"line\">    ElemType e;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;i, &amp;e);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q = (BiTNode*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(BiTNode));</span><br><span class=\"line\">        q-&gt;data = e;</span><br><span class=\"line\">        q-&gt;lchild = <span class=\"literal\">NULL</span>, q-&gt;rchild = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        s[i] = q;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == <span class=\"number\">1</span>) root = q;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j = i/<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j % <span class=\"number\">2</span>) s[j]-&gt;rchild = q;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> s[j]-&gt;lchild = q;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;i, &amp;e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"线索二叉树\"><a class=\"markdownIt-Anchor\" href=\"#线索二叉树\">#</a> 线索二叉树</h2>\n<h3 id=\"概念-2\"><a class=\"markdownIt-Anchor\" href=\"#概念-2\">#</a> 概念</h3>\n<p>规则：</p>\n<ol>\n<li>若结点的左子树为空，则该结点的左孩子指向其前驱结点</li>\n<li>若结点的右子树为空，则该结点的右孩子指针指向其后继结点</li>\n</ol>\n<p>为了区别 lchild/rchild 是指向左右孩子还是前 / 后驱结点，添加标志位 ltag, rtag：</p>\n<ol>\n<li><code>ltag == 0</code> ，指向左孩子； <code>ltag == 1</code> ，指向前驱结点</li>\n<li><code>rtag == 0</code> ，指向右孩子； <code>rtag == 1</code> ，指向后继结点</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405311434403.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405311443551.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405311444734.png\" alt=\"\"></p>\n<h3 id=\"线索化二叉树\"><a class=\"markdownIt-Anchor\" href=\"#线索化二叉树\">#</a> 线索化二叉树</h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Thread</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> <span class=\"title class_\">Thread</span>* lchild, rchild;</span><br><span class=\"line\">    <span class=\"type\">int</span> data;</span><br><span class=\"line\">    <span class=\"type\">int</span> ltag, rtag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">InitThreadTree</span><span class=\"params\">(<span class=\"keyword\">struct</span> Thread* node, <span class=\"keyword\">struct</span> Thread* pre)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"built_in\">InitThreadTree</span>(node-&gt;lchild, pre);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node-&gt;lchild != <span class=\"literal\">NULL</span>) node-&gt;ltag = <span class=\"number\">0</span>;<span class=\"comment\">//左孩子不是线索</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> node-&gt;ltag = <span class=\"number\">1</span>, node-&gt;lchild = pre;</span><br><span class=\"line\">    <span class=\"comment\">//处理前驱结点</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pre != <span class=\"literal\">NULL</span> &amp;&amp; pre-&gt;rchild == <span class=\"literal\">NULL</span>) </span><br><span class=\"line\">        pre-&gt;rchild = node, pre-&gt;rtag = <span class=\"number\">1</span>;</span><br><span class=\"line\">    pre = node;</span><br><span class=\"line\">    <span class=\"built_in\">InitThreadTree</span>(node-&gt;rchild, pre);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"遍历线索二叉树\"><a class=\"markdownIt-Anchor\" href=\"#遍历线索二叉树\">#</a> 遍历线索二叉树</h3>\n<p>前序遍历：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">PreOrder</span><span class=\"params\">(<span class=\"keyword\">struct</span> BitNode* node)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span> *p = node;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, p-&gt;data);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;ltag == <span class=\"number\">0</span>)<span class=\"comment\">//有左孩子</span></span><br><span class=\"line\">            p = p-&gt;lchild;</span><br><span class=\"line\">        <span class=\"keyword\">else</span><span class=\"comment\">//没有左孩子，指向右孩子或者后继结点</span></span><br><span class=\"line\">            p = p-&gt;rchild;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>中序遍历：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MidOrder</span><span class=\"params\">(<span class=\"keyword\">struct</span> BitNode* node)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> <span class=\"title class_\">BitNode</span>* p = node;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(p-&gt;ltag == <span class=\"number\">0</span>) p = p-&gt;lchild;<span class=\"comment\">//找到最左边的节点</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, p-&gt;data);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(p-&gt;rchild)<span class=\"comment\">//存在后继结点</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(p-&gt;rtag == <span class=\"number\">1</span>) p = p-&gt;rchild;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                p = p-&gt;rchild;</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(p-&gt;ltag == <span class=\"number\">0</span>)<span class=\"comment\">//找到最左边的结点</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    p = p-&gt;lchild;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, p-&gt;data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"树和森林\"><a class=\"markdownIt-Anchor\" href=\"#树和森林\">#</a> 树和森林</h1>\n<h2 id=\"树的表示形式\"><a class=\"markdownIt-Anchor\" href=\"#树的表示形式\">#</a> 树的表示形式</h2>\n<ol>\n<li>广义表</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406062231516.png\" alt=\"\">\t2. 嵌套集合</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406062231188.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>凹入表 / 目录表</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406062231758.png\" alt=\"\"></p>\n<h2 id=\"树的存储结构\"><a class=\"markdownIt-Anchor\" href=\"#树的存储结构\">#</a> 树的存储结构</h2>\n<ol>\n<li>双亲表示法 / 数组表示法 / 顺序表示法</li>\n</ol>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406021407567.png\" style=\"zoom:67%;\" />\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">snode</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> data;</span><br><span class=\"line\">    <span class=\"type\">int</span> parent;</span><br><span class=\"line\">&#125;t[maxlength + <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>孩子表示法 / 链接表表示法</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406021407745.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406021408154.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>孩子兄弟表示法 / 二叉树表示法 / 二叉链表</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406021408655.png\" alt=\"\"></p>\n<ol start=\"4\">\n<li>孩子链表表示法 / 单链表表示法</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406021408590.png\" alt=\"\"></p>\n<ol start=\"5\">\n<li>带双亲的孩子链表表示法</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406021408034.png\" alt=\"\"></p>\n<h2 id=\"森林-树和二叉树的转换\"><a class=\"markdownIt-Anchor\" href=\"#森林-树和二叉树的转换\">#</a> 森林、树和二叉树的转换</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406021424154.png\" alt=\"\"></p>\n<h2 id=\"树和森林的遍历\"><a class=\"markdownIt-Anchor\" href=\"#树和森林的遍历\">#</a> 树和森林的遍历</h2>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406041323277.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406041324802.png\" alt=\"\"></p>\n<h2 id=\"哈夫曼树\"><a class=\"markdownIt-Anchor\" href=\"#哈夫曼树\">#</a> 哈夫曼树</h2>\n<p>树 T 的路径长度：PL (T) 从树 T 的跟到其余每个结点的路径长度之和</p>\n<p>树的带权路径长度：WPL (T) 每个叶子的权与根到该叶子的路径长度的乘积之和</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">int</span> weight;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">int</span> parent, lchild, rchild;</span><br><span class=\"line\">&#125;HTNode, *HuffmanCode;<span class=\"comment\">//动态分配数组存储哈夫曼树</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">char</span>** HuffmanCode;<span class=\"comment\">//存储哈夫曼编码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HuffmanCoding</span><span class=\"params\">(HuffmanTree&amp; HT, HuffmanCode &amp;HC, <span class=\"type\">int</span> *w, <span class=\"type\">int</span> n)</span><span class=\"comment\">/*w存放n个字符的权值*/</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    m = <span class=\"number\">2</span> * n - <span class=\"number\">1</span>;</span><br><span class=\"line\">    HT = (HuffmanTree)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(HTNode) * (m + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(p = HT + <span class=\"number\">1</span>, i = <span class=\"number\">1</span>; i &lt;= n; i++, p++, w++)<span class=\"comment\">//0号单元未用</span></span><br><span class=\"line\">    \t*p = &#123;*w, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;i &lt;= m; i++, p++) *p = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = n + <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">Select</span>(HT, i - <span class=\"number\">1</span>, s1, s2);<span class=\"comment\">//在HT[1,..,i-1]中选择parent为0且weight最小的两个结点，其序号分别是s1,s2</span></span><br><span class=\"line\">        HT[s1].parent = i, HT[s2].parent = i;</span><br><span class=\"line\">        HT[i].lchild = s1, HT[i].rchild = s2;</span><br><span class=\"line\">        HT[i].weight = HT[s1].weight +HT[s2].weight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/*从叶子到根逆向求每个字符的哈夫曼编码*/</span></span><br><span class=\"line\">    HC = (HuffmanCode)<span class=\"built_in\">malloc</span>((n + <span class=\"number\">1</span>) * <span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>*));</span><br><span class=\"line\">    cd = (<span class=\"type\">char</span>*)<span class=\"built_in\">malloc</span>(n * <span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>));</span><br><span class=\"line\">    cd[n - <span class=\"number\">1</span>] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        start = n - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(c = i, f = HT[i].parent; f != <span class=\"number\">0</span>; c = f, f = HT[i].parent)</span><br><span class=\"line\">        \t<span class=\"keyword\">if</span>(HT[f].lchild == c) cd[--start] = <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">        \t<span class=\"keyword\">else</span> cd[--start] = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">        HC[i] = (<span class=\"type\">char</span>*)<span class=\"built_in\">mallov</span>(<span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>) * (n - start));<span class=\"comment\">//为编码开辟空间</span></span><br><span class=\"line\">        <span class=\"built_in\">strcpy</span>(HC[i], &amp;cd[start]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(cd);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"图\"><a class=\"markdownIt-Anchor\" href=\"#图\">#</a> 图</h1>\n<h2 id=\"概念-3\"><a class=\"markdownIt-Anchor\" href=\"#概念-3\">#</a> 概念</h2>\n<p>强连通图：图 G 中每对结点都存在路径</p>\n<p>强连通分量：图 G’是图 G 的极大连通子图，G’是 G 的一个强连通分量</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032002704.png\" alt=\"\"></p>\n<h2 id=\"图的存储结构\"><a class=\"markdownIt-Anchor\" href=\"#图的存储结构\">#</a> 图的存储结构</h2>\n<ol>\n<li>邻接矩阵\n<ul>\n<li>无向图中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>D</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>M</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>M</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">TD=\\sum\\limits_{j=1}^{n}M[i][j]=\\sum\\limits_{i=1}^{n}M[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.465174em;vertical-align:-1.113777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3513970000000004em;\"><span style=\"top:-2.122331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0000050000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.950005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.113777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.329066em;vertical-align:-0.9776689999999999em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3513970000000004em;\"><span style=\"top:-2.122331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0000050000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.950005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9776689999999999em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span></li>\n<li>有向图中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的入度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>D</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>M</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">ID = \\sum\\limits_{i=1}^{n}M[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.329066em;vertical-align:-0.9776689999999999em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3513970000000004em;\"><span style=\"top:-2.122331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0000050000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.950005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9776689999999999em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span>(每一列的和)，出度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mi>D</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>M</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">OD = \\sum\\limits_{j=1}^{n}M[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.465174em;vertical-align:-1.113777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3513970000000004em;\"><span style=\"top:-2.122331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0000050000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.950005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.113777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span>(每一行的和)</li>\n</ul>\n</li>\n<li>邻接表 / 逆邻接表</li>\n<li>十字链表</li>\n</ol>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032002846.png\" alt=\"\"></p>\n<ol start=\"4\">\n<li>\n<p>邻接多重表​</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVRMNDExYjdWMy8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2s=\">具体步骤见这个视频</span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032019350.png\" alt=\"\"></p>\n</li>\n</ol>\n<p><strong>存储结构的优缺点</strong></p>\n<p><strong>邻接矩阵</strong></p>\n<p>优点：</p>\n<ol>\n<li>简单直观，好理解</li>\n<li>便于计算一对顶点间是否有边，并且找到所有的邻接点</li>\n<li>方便计算一个顶点的度</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>不利于增加或者删除节点</li>\n<li>存储稀疏图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>e</mi><mo>&lt;</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(e&lt;nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 较浪费空间</li>\n<li>在统计边数等操作方面时间复杂度大</li>\n</ol>\n<p><strong>邻接表</strong></p>\n<p>缺点：</p>\n<ol>\n<li>求节点度困难</li>\n<li>每条边都要存两遍（无向图）</li>\n</ol>\n<h2 id=\"图的遍历\"><a class=\"markdownIt-Anchor\" href=\"#图的遍历\">#</a> 图的遍历</h2>\n<p>DFS/BFS 时间复杂度</p>\n<ol>\n<li>邻接矩阵存储<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>邻接表存储<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n+e)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span></span></span></li>\n</ol>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032038343.png\" style=\"zoom: 67%;\" />\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032038662.png\" style=\"zoom: 60%;\" />\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032040296.png\" style=\"zoom: 70%;\" />\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032041338.png\" style=\"zoom: 67%;\" />\n<h2 id=\"最小生成树\"><a class=\"markdownIt-Anchor\" href=\"#最小生成树\">#</a> 最小生成树</h2>\n<h3 id=\"prim\"><a class=\"markdownIt-Anchor\" href=\"#prim\">#</a> Prim</h3>\n<p>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，适合稠密图</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032312202.jpg\" alt=\"\"></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Prim</span><span class=\"params\">(MGraph G, <span class=\"type\">int</span> start)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; G.vertexNum; i++)<span class=\"comment\">//遍历所有点</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        shortEdge[i].lowcost = G.arc[start][i];<span class=\"comment\">//初始化最短路的数组</span></span><br><span class=\"line\">        shortEdge[i].adjvex = start;<span class=\"comment\">//存储这个路径距离中这个节点的上一个节点  </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    shortEdge[start].lowcost = <span class=\"number\">0</span>;<span class=\"comment\">//将start放入集合U</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>;i &lt; G.vertexNum - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        k = <span class=\"built_in\">minEdge</span>(shortEdge, G.vertexNum);<span class=\"comment\">//寻找最短边的邻接点k</span></span><br><span class=\"line\">        <span class=\"built_in\">outputMST</span>(k, shortEdge[k]);<span class=\"comment\">//输出最小生成树的路径</span></span><br><span class=\"line\">        shortEdge[k].lowcast = <span class=\"number\">0</span>;<span class=\"comment\">//将k加入集合U</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; G.vertexNum; j++)<span class=\"comment\">//调整shortEdge数组</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(G.arc[k][j] &lt; shortEdge[j].lowcast)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                shortEdge[j].lowcast = G.arc[k][j];</span><br><span class=\"line\">                shortEdge[j].adjvex = k;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"kruskal算法\"><a class=\"markdownIt-Anchor\" href=\"#kruskal算法\">#</a> Kruskal 算法</h3>\n<p>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(eloge)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032312333.jpg\" alt=\"\"></p>\n<h2 id=\"拓扑排序\"><a class=\"markdownIt-Anchor\" href=\"#拓扑排序\">#</a> 拓扑排序</h2>\n<blockquote>\n<p>有回路的有向图不存在拓扑排序</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406032312495.png\" alt=\"\"></p>\n<h2 id=\"aoe网\"><a class=\"markdownIt-Anchor\" href=\"#aoe网\">#</a> AOE 网</h2>\n<blockquote>\n<p>先求点，再求边</p>\n</blockquote>\n<p>工程完成的最短时间是从开始点到完成点的最长路径长度，路径长度最长的路径叫做关键路径，关键路径上的点为关键点–开始时间等于结束时间</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWR5NDIxYTdTMS8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2smYW1wO3ZkX3NvdXJjZT1lZjVlNTEyNzgxOTQ2MGUyNjE4Mjk4MjkzM2NmYTIxZQ==\">请参考这个视频</span></p>\n<ol>\n<li>ve (事件 / 节点的最早开始时间)，拓扑排序，每次选取<strong>入度</strong>为 0 的点，更新与之相邻的结点，ve 是最长的那条路径长度</li>\n<li>vl (事件 / 节点的最晚开始时间)，初始化所有结点的 vl 为终点的 ve，<strong>逆</strong>拓扑排序，每次选取<strong>出度</strong>为 0 的点，更新与之相邻的结点，vl 是选择使 vl 最小的那条路</li>\n<li>e (活动 / 边的最早开始时间)，与发出这条边的结点的 ve 一致</li>\n<li>l (活动 / 边的最晚开始时间)，用这条边指向的结点的 vl 减去这条边的边权</li>\n</ol>\n<h2 id=\"最短路径\"><a class=\"markdownIt-Anchor\" href=\"#最短路径\">#</a> 最短路径</h2>\n<h3 id=\"dijkstra算法\"><a class=\"markdownIt-Anchor\" href=\"#dijkstra算法\">#</a> Dijkstra 算法</h3>\n<blockquote>\n<p>解决单源最短路问题</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXVUNHkxcDdKeS8/c3BtX2lkX2Zyb209MzMzLjk5OS4wLjAmYW1wO3ZkX3NvdXJjZT1lZjVlNTEyNzgxOTQ2MGUyNjE4Mjk4MjkzM2NmYTIxZQ==\">请参考这个视频</span></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">dijsktra</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dist, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\">    dist[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;<span class=\"comment\">//把起始点距离初始化为0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = <span class=\"number\">-1</span>;<span class=\"comment\">//用于找到当前距离起点最短的点</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!st[j] &amp;&amp; (t == <span class=\"number\">-1</span> || dist[j] &lt; dist[t])) t = j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        st[t] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++)<span class=\"comment\">//更新节点距离</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dist[j] &gt; dist[t] + g[t][j]) dist[j] = dist[t] + g[t][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dist[n] == <span class=\"number\">0x3f3f3f3f</span>) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dist[n];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"floyd算法\"><a class=\"markdownIt-Anchor\" href=\"#floyd算法\">#</a> Floyd 算法</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTlrNHkxUTdHai8/c3BtX2lkX2Zyb209MzMzLjc4OCZhbXA7dmRfc291cmNlPWVmNWU1MTI3ODE5NDYwZTI2MTgyOTgyOTMzY2ZhMjFl\">请参考这个视频</span></p>\n<blockquote>\n<p>求任意两个节点间的最短路径</p>\n</blockquote>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Floyd</span><span class=\"params\">(MGraph G, PathMatrix&amp; p[], DistanceMatrix&amp; D)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(v = <span class=\"number\">0</span>; v &lt; G.vexnum; v++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(w = <span class=\"number\">0</span>; w &lt; G.vexnum; w++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            D[v][w] = G.arcs[v][w];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(u = <span class=\"number\">0</span>; u &lt; G.vexnum; u++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                P[v][w][u] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(D[v][w] &lt; INFINITY)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    P[v][w][v] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    P[v][w][w] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(u = <span class=\"number\">0</span>; u &lt; G.vexnum; u++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(v = <span class=\"number\">0</span>; v &lt; G.vexnum; v++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(w = <span class=\"number\">0</span>; w &lt; G.vexnum; w++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(D[v][u] + D[u][w] &lt; D[v][w])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    D[v][w] = D[v][u] + D[u][w];</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; G.vexnum; i++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        P[v][w][i] = P[v][u][i] || P[u][w][i];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"查找\"><a class=\"markdownIt-Anchor\" href=\"#查找\">#</a> 查找</h1>\n<h2 id=\"静态查找表\"><a class=\"markdownIt-Anchor\" href=\"#静态查找表\">#</a> 静态查找表</h2>\n<h3 id=\"顺序查找法\"><a class=\"markdownIt-Anchor\" href=\"#顺序查找法\">#</a> 顺序查找法</h3>\n<ol>\n<li>\n<p>不设置监视哨</p>\n<p>判断条件：</p>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = ST.length;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(i &gt;= <span class=\"number\">1</span> &amp;&amp; k != ST.elem[i].key)\ti--;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>设置监视哨</li>\n</ol>\n<p>​\t <code>elem[0].key = k;</code></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = ST.length;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(k != ST.elem[i].key)\ti--;</span><br></pre></td></tr></table></figure>\n<p>ASL 成功 = (n + 1) / 2</p>\n<p>ASL 失败：使用监视哨 = n + 1, 不使用监视哨 = n</p>\n<h3 id=\"折半查找法\"><a class=\"markdownIt-Anchor\" href=\"#折半查找法\">#</a> 折半查找法</h3>\n<p>相当于二分查找</p>\n<h3 id=\"判定树\"><a class=\"markdownIt-Anchor\" href=\"#判定树\">#</a> 判定树</h3>\n<p>描述折半查找过程的二叉树 (从 1 开始，放的是序号不是值)</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406051340541.png\" alt=\"\"></p>\n<p>若判定树为满二叉树：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mi>n</mi></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mn>2</mn><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">ASL = \\frac{n+1}{n}log2(n + 1) - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<p>证明：<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406051338386.jpg\" alt=\"\"></p>\n<h2 id=\"动态查找表\"><a class=\"markdownIt-Anchor\" href=\"#动态查找表\">#</a> 动态查找表</h2>\n<h3 id=\"二叉排序树二叉查找树\"><a class=\"markdownIt-Anchor\" href=\"#二叉排序树二叉查找树\">#</a> <strong>二叉排序树（二叉查找树）</strong></h3>\n<p>特点：如果二叉树的任一结点大于其非空左子树的所有结点，而小于其非空右子树的所有结点，则这棵二叉树称为二叉排序树。<strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mo stretchy=\"false\">(</mo><mtext>左小右大</mtext><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">{\\color{red}(左小右大)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord cjk_fallback\" style=\"color:red;\">左</span><span class=\"mord cjk_fallback\" style=\"color:red;\">小</span><span class=\"mord cjk_fallback\" style=\"color:red;\">右</span><span class=\"mord cjk_fallback\" style=\"color:red;\">大</span><span class=\"mclose\" style=\"color:red;\">)</span></span></span></span></span>​​</strong></p>\n<p>平均 ASL= O (logn)</p>\n<h4 id=\"删除二叉排序树中的结点\"><a class=\"markdownIt-Anchor\" href=\"#删除二叉排序树中的结点\">#</a> <em><strong>删除二叉排序树中的结点</strong></em></h4>\n<p>设被删除的结点为 * p，其双亲结点为 * f，*s 为 * p 的前驱结点，*p 是 * f 的左孩子，有三种情况：</p>\n<ol>\n<li>\n<p>*p 为叶子结点：直接删除</p>\n</li>\n<li>\n<p>*p 只有左孩子 PL 或者右孩子 PR：让 PL/PR 为 * f 的左孩子</p>\n</li>\n<li>\n<p>*p 的左孩子 PL 和右孩子 PR 均不为空：</p>\n<ol>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405071134367.png\" alt=\"\"></p>\n</li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405071135262.png\" alt=\"\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<p>算法实现：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//p是待删除的结点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Delete</span><span class=\"params\">(BiTree &amp;p)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p-&gt;lchild)<span class=\"comment\">//如果左子树为空，或者为叶子结点</span></span><br><span class=\"line\">    &#123; q = p; p = p-&gt;rchild; <span class=\"built_in\">free</span>(q);&#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!p-&gt;rchild)<span class=\"comment\">//如果右子树为空</span></span><br><span class=\"line\">    &#123; q = p; p = p-&gt;lchild; <span class=\"built_in\">free</span>(q);&#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span><span class=\"comment\">//如果左右子树均不为空 以方法二为例</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">        s = p-&gt;lchild;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(s-&gt;rchild)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            q = s;<span class=\"comment\">//设置s的双亲结点是q</span></span><br><span class=\"line\">            s = s-&gt;rchild;<span class=\"comment\">//遍历直到找到p的前驱结点</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        p-&gt;data = s-&gt;data;<span class=\"comment\">//将p替换成s</span></span><br><span class=\"line\">        <span class=\"comment\">//要判断是因为如果删除结点的左子树有右子树那么中序遍历的前驱结点是右孩子，否则前驱结点是左孩子，就会导致移动的不同</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p != q)<span class=\"comment\">//表明删除节点的左子树有右子树</span></span><br><span class=\"line\">            q-&gt;rchild = s-&gt;lchild;<span class=\"comment\">//不需要free因为原来的s占的是q-&gt;left，现在已经被替换了</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            q-&gt;lchild = s-&gt;lchild;</span><br><span class=\"line\">            <span class=\"built_in\">free</span>(S);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"平衡二叉树avl树\"><a class=\"markdownIt-Anchor\" href=\"#平衡二叉树avl树\">#</a> <strong>平衡二叉树</strong> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>V</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">AVL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathnormal\">L</span></span></span></span> 树)</h3>\n<ol>\n<li>结点的平衡因子：结点的左右子树深度之差（左子树高度 - 右子树高度）</li>\n<li>平衡二叉树：任意结点平衡因子的绝对值小于等于 1 的二叉树</li>\n</ol>\n<h4 id=\"高度一定的avl树所含最小节点个数\"><a class=\"markdownIt-Anchor\" href=\"#高度一定的avl树所含最小节点个数\">#</a> 高度一定的 AVL 树所含最小节点个数</h4>\n<p>S (h) 表示深度为 h 的平衡二叉树所含有的最少节点个数</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406051555220.png\" alt=\"\"></p>\n<img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406051556641.png\" style=\"zoom: 67%;\" />\n<h4 id=\"构造平衡二叉搜索树的方法\"><a class=\"markdownIt-Anchor\" href=\"#构造平衡二叉搜索树的方法\">#</a> <em><strong>构造平衡二叉搜索树的方法</strong></em></h4>\n<ul>\n<li>\n<p>左旋：向作左旋转，冲突的左孩变右孩</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081654715.png\" alt=\"\"></p>\n</li>\n<li>\n<p>右旋：向右旋转，冲突的右孩变左孩</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081656759.png\" alt=\"\"></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">LL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">L</span></span></span></span> 型，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">RR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 型，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">LR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 型，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">RL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">L</span></span></span></span>​型</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081714341.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081716342.png\" alt=\"\"></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">LL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">L</span></span></span></span> 型：右旋</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081715912.png\" alt=\"\"></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">RR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>​型：左旋</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081849686.png\" alt=\"\"></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">LR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>​型：先左旋左孩子，再右旋</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081715436.png\" alt=\"\"></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">RL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">L</span></span></span></span>​型：先右旋右孩子，再左旋</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405081715357.png\" alt=\"\"></p>\n</li>\n<li>\n<p>插入结点时平衡失调，调整离删除结点最近的失衡结点即可</p>\n<p>删除结点时平衡失调，依次对每个祖先进行检查和调整</p>\n</li>\n</ul>\n<h3 id=\"哈希表\"><a class=\"markdownIt-Anchor\" href=\"#哈希表\">#</a> 哈希表</h3>\n<h4 id=\"构造哈希函数的方法\"><a class=\"markdownIt-Anchor\" href=\"#构造哈希函数的方法\">#</a> <em>构造哈希函数的方法</em></h4>\n<ol>\n<li>\n<p>直接定址法：取关键字或者关键字的某个线性函数值作为哈希地址</p>\n</li>\n<li>\n<p>除留余数法：设哈希表 HT [0,1,…,m-1] 的表长为 m，哈希地址为 key 除以 p 所得余数（ p 为接近 m 的素数或为不包含 20 以内质因数的合数）</p>\n</li>\n<li>\n<p>平方取中法：取关键字平方后的中间某几位为哈希地址</p>\n</li>\n<li>\n<p>折叠法：将关键字分割成位数相同的几部分，然后取这几部分的叠加和作为哈希地址</p>\n<ol>\n<li>\n<p>边界折叠法：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>g</mi><mo>:</mo><mi>k</mi><mn>1</mn><mo>=</mo><mn>056439527</mn></mrow><annotation encoding=\"application/x-tex\">eg: k1 = 056439527</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">5</span><span class=\"mord\">6</span><span class=\"mord\">4</span><span class=\"mord\">3</span><span class=\"mord\">9</span><span class=\"mord\">5</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span> 对应的地址为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>650</mn><mo>+</mo><mn>439</mn><mo>+</mo><mn>725</mn></mrow><annotation encoding=\"application/x-tex\">650+439+725</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">4</span><span class=\"mord\">3</span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">7</span><span class=\"mord\">2</span><span class=\"mord\">5</span></span></span></span></p>\n</li>\n<li>\n<p>移位折叠法：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>g</mi><mo>:</mo><mi>k</mi><mn>1</mn><mo>=</mo><mn>056439527</mn></mrow><annotation encoding=\"application/x-tex\">eg: k1 = 056439527</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">5</span><span class=\"mord\">6</span><span class=\"mord\">4</span><span class=\"mord\">3</span><span class=\"mord\">9</span><span class=\"mord\">5</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span> 对应的地址为</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>056</mn><mo>+</mo><mn>439</mn><mo>+</mo><mn>527</mn></mrow><annotation encoding=\"application/x-tex\">056+439+527</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mord\">5</span><span class=\"mord\">6</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">4</span><span class=\"mord\">3</span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">2</span><span class=\"mord\">7</span></span></span></span></p>\n</li>\n</ol>\n</li>\n<li>\n<p>数字分析法：如果哈希表中可能出现的关键字都是事先知道的，则可取关键字的若干分布均匀的位组成哈希地址</p>\n</li>\n<li>\n<p>随机数法：利用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>o</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">random(key)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>​</p>\n</li>\n</ol>\n<h4 id=\"解决哈希冲突的方法\"><a class=\"markdownIt-Anchor\" href=\"#解决哈希冲突的方法\">#</a> <em>解决哈希冲突的方法</em></h4>\n<ol>\n<li>开放地址法\n<ol>\n<li>线性嗅探再散列</li>\n<li>二次嗅探再散列</li>\n</ol>\n</li>\n<li>链地址法</li>\n<li>建立公共溢出区</li>\n<li>再哈希法</li>\n</ol>\n<h4 id=\"哈希化的效率\"><a class=\"markdownIt-Anchor\" href=\"#哈希化的效率\">#</a> <em><strong>哈希化的效率</strong></em></h4>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405132118931.png\" alt=\"\"></p>\n<h4 id=\"哈希表的平均查找长度\"><a class=\"markdownIt-Anchor\" href=\"#哈希表的平均查找长度\">#</a> <em><strong>哈希表的平均查找长度</strong></em></h4>\n<p><a href=\"%5B%E5%93%88%E5%B8%8C%E8%A1%A8%EF%BC%9A%E7%BA%BF%E6%80%A7%E6%8E%A2%E6%B5%8B%E6%B3%95%E5%92%8C%E9%93%BE%E5%9C%B0%E5%9D%80%E6%B3%95%E6%B1%82%E6%9F%A5%E6%89%BE%E6%88%90%E5%8A%9F%E4%B8%8E%E4%B8%8D%E6%88%90%E5%8A%9F%E7%9A%84%E5%B9%B3%E5%9D%87%E6%9F%A5%E6%89%BE%E9%95%BF%E5%BA%A6_%E9%93%BE%E5%9C%B0%E5%9D%80%E6%B3%95%E6%9F%A5%E6%89%BE%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%B9%B3%E5%9D%87%E6%9F%A5%E6%89%BE%E9%95%BF%E5%BA%A6%E6%80%8E%E4%B9%88%E7%AE%97-CSDN%E5%8D%9A%E5%AE%A2%5D(https://blog.csdn.net/KD35KD/article/details/107054474)\">见此篇 BLOG</a></p>\n<p>散列表</p>\n<p>查找成功的概率：</p>\n<ul>\n<li>分母：所有待插入的元素的个数</li>\n<li>分子：每个位置元素出现的个数</li>\n</ul>\n<p>查找失败的概率：</p>\n<ul>\n<li>分母：mod 的大小</li>\n<li>分子：从 0-m-1 的每一个位置到下一个空位置需要查找的个数</li>\n</ul>\n<h1 id=\"排序\"><a class=\"markdownIt-Anchor\" href=\"#排序\">#</a> 排序</h1>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202406052033580.png\" alt=\"\"></p>\n<h2 id=\"插入排序朴素版稳定排序-折半版不稳定\"><a class=\"markdownIt-Anchor\" href=\"#插入排序朴素版稳定排序-折半版不稳定\">#</a> 插入排序（朴素版–稳定排序 折半版–不稳定）</h2>\n<blockquote>\n<p>第 n 趟排序，保证前 n + 1 个元素有序</p>\n</blockquote>\n<p>操作：将新的元素插入到已排序的数组中</p>\n<p>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>​</p>\n<ul>\n<li>\n<p>最好的情况：原 n 个记录递增有序</p>\n<p>比较关键字次数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 次</p>\n<p>移动记录次数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">2(n-1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 次（将数据复制到 a [0] 又复制回来）</p>\n</li>\n<li>\n<p>最坏的情况：原 n 个记录递减有序</p>\n<p 2=\"\">比较关键字次数：\\sum_\\limits{i = 2}^n i = 2+3+...+n = \\frac{(n-1)(n+2)}</p>\n<p 2=\"\">移动记录次数：\\sum_\\limits{i=2}^{n} (i-1+2)=3+4+...+n=\\frac{(n-1)(n+4)}</p>\n<p>（+2 是因为监视哨，先复制一遍，再加到合适的位置）</p>\n</li>\n</ul>\n<p>朴素版本：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//升序 </span></span><br><span class=\"line\"><span class=\"comment\">//对1-n进行排序(n表示的是数组的最后一个元素的下标，不是元素个数) </span></span><br><span class=\"line\"><span class=\"comment\">//在a[0]设置监视哨</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">InsertSort</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> cur;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta[<span class=\"number\">0</span>] = a[i];</span><br><span class=\"line\">\t\tcur = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (a[cur] &gt; a[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ta[cur + <span class=\"number\">1</span>] = a[cur];</span><br><span class=\"line\">\t\t\tcur--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta[cur + <span class=\"number\">1</span>] = a[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>折半插入排序（不稳定）：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//折半插入排序</span></span><br><span class=\"line\"><span class=\"comment\">//优化了比较次数，但是只有当n很大时使用折半插入效率更高</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">InsertSort</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta[<span class=\"number\">0</span>] = a[i];</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> low = <span class=\"number\">1</span>, high = i - <span class=\"number\">1</span>, m = (low + high) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (low &lt;= high)<span class=\"comment\">//利用二分法折半查找</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = (low + high) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[<span class=\"number\">0</span>] &lt; a[m])\thigh = m - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"comment\">//插入的位置可能在high左边</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> low = m + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"comment\">//插入的位置可能在low的右边</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        <span class=\"comment\">//high + 1即是待插入的位置</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i - <span class=\"number\">1</span>; j &gt;= high + <span class=\"number\">1</span>; j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ta[j + <span class=\"number\">1</span>] = a[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta[high + <span class=\"number\">1</span>] = a[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>二路插入排序：</p>\n<p>优点：可以减少移动的次数</p>\n<p>操作：（排序长度为 n 的序列）相当于先开辟长度为 n 的数组，将该数组当做一个循环的空间，进行插入。</p>\n<p>表插入排序：</p>\n<h2 id=\"希尔排序colorred-不稳定排序\"><a class=\"markdownIt-Anchor\" href=\"#希尔排序colorred-不稳定排序\">#</a> 希尔排序<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mtext>（不稳定排序）</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red} {（不稳定排序）}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord cjk_fallback\" style=\"color:red;\">（</span><span class=\"mord cjk_fallback\" style=\"color:red;\">不</span><span class=\"mord cjk_fallback\" style=\"color:red;\">稳</span><span class=\"mord cjk_fallback\" style=\"color:red;\">定</span><span class=\"mord cjk_fallback\" style=\"color:red;\">排</span><span class=\"mord cjk_fallback\" style=\"color:red;\">序</span><span class=\"mord cjk_fallback\" style=\"color:red;\">）</span></span></span></span></span>​</h2>\n<blockquote>\n<p>第 n 趟排序后，能找到 n 个 gap 使元素每隔 gap 个元素就有序</p>\n</blockquote>\n<p>操作：每次排序相隔 gap 的元素，不断缩小 gap，直至 gap == 1，排序后退出循环</p>\n<p>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>1.3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n ^{1.3})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//升序--希尔排序  O(n^1.3)</span></span><br><span class=\"line\"><span class=\"comment\">//1. gap &gt; 1 预排序</span></span><br><span class=\"line\"><span class=\"comment\">//2. gap == 1 插入排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ShellSort</span><span class=\"params\">(<span class=\"type\">int</span> gap, <span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (gap &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tgap = gap / <span class=\"number\">3</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = gap + <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ta[<span class=\"number\">0</span>] = a[i];</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> cur = i - gap;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (a[cur] &gt; a[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ta[cur + gap] = a[cur];</span><br><span class=\"line\">\t\t\t\tcur -= gap;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ta[cur + gap] = a[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>伪代码版：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//前后记录位置的增量为dk</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">shellInsert</span><span class=\"params\">(Sqlist&amp; L, <span class=\"type\">int</span> dk)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = dk + <span class=\"number\">1</span>; i &lt;= L.length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(<span class=\"built_in\">LT</span>(L.r[i].key, L.r[i - dk].key))<span class=\"comment\">//将L.r[i]插入有序增量子表</span></span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             L.r[<span class=\"number\">0</span>] = L.r[i];<span class=\"comment\">//暂存在L.r[0]中，不是哨兵位</span></span><br><span class=\"line\">             <span class=\"keyword\">for</span>(j = i - dk; j &gt; <span class=\"number\">0</span> &amp;&amp; (<span class=\"built_in\">LT</span>(L.r[j].key, L.r[<span class=\"number\">0</span>].key)); j -= dk)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">                 L.r[j + dk] = L.r[j];</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             L.r[j + dk] = L.r[<span class=\"number\">0</span>];</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ShellSort</span><span class=\"params\">(Sqlist&amp; L, <span class=\"type\">int</span> delta[], <span class=\"type\">int</span> t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k = <span class=\"number\">0</span>; k &lt; t; k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">ShellInsert</span>(L, delta[k]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"快速排序colorred不稳定排序\"><a class=\"markdownIt-Anchor\" href=\"#快速排序colorred不稳定排序\">#</a> 快速排序<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mrow><mo stretchy=\"false\">(</mo><mtext>不稳定排序</mtext><mo stretchy=\"false\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{(不稳定排序)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord cjk_fallback\" style=\"color:red;\">不</span><span class=\"mord cjk_fallback\" style=\"color:red;\">稳</span><span class=\"mord cjk_fallback\" style=\"color:red;\">定</span><span class=\"mord cjk_fallback\" style=\"color:red;\">排</span><span class=\"mord cjk_fallback\" style=\"color:red;\">序</span><span class=\"mclose\" style=\"color:red;\">)</span></span></span></span></span>​</h2>\n<blockquote>\n<p>第 n 趟排序之后，有 n 个元素在它应该在的位置上</p>\n</blockquote>\n<p>操作：随机在数组中找一个数，利用递归，让左边的数都小于该数，右边的数都大于该数</p>\n<ul>\n<li>时间复杂度：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，最坏的情况下（序列基本有序）时间复杂度为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>空间复杂度：快排需要一个栈做辅助空间，平均情况下需要<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 的空间，最坏的情况下，要递归 n 次，需要<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 的空间</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">PartSort</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span> left, <span class=\"type\">int</span> right)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> keyi = <span class=\"built_in\">GetMidIndex</span>(a, left, right);<span class=\"comment\">//找到在left，mid，right三个下标下大小是中间的那个的下标</span></span><br><span class=\"line\">\t<span class=\"built_in\">Swap</span>(a + keyi, a + left);</span><br><span class=\"line\">\t<span class=\"comment\">//左边当key 右边先走 ；右边当key 左边先走</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (left &lt; right)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (left &lt; right &amp;&amp; a[right] &gt;= a[keyi])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tright--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (left &lt; right &amp;&amp; a[left] &lt;= a[keyi])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tleft++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"built_in\">Swap</span>(a + left, a + right);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">Swap</span>(a + left, a + keyi);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">QuickSort</span><span class=\"params\">(<span class=\"type\">int</span> begin, <span class=\"type\">int</span> end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (begin &gt; end) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> part = <span class=\"built_in\">PartSort</span>(a, begin, end);</span><br><span class=\"line\">\t<span class=\"built_in\">QuickSort</span> (part + <span class=\"number\">1</span>, end);</span><br><span class=\"line\">\t<span class=\"built_in\">QuickSort</span>(begin, part - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">partition</span><span class=\"params\">(Sqlist&amp; L, <span class=\"type\">int</span> low, <span class=\"type\">int</span> high)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tL.r[<span class=\"number\">0</span>] = L.r[low];<span class=\"comment\">//选最左边为pivotkey</span></span><br><span class=\"line\">    pivotkey = L.r[low];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(low &lt; high)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt; high &amp;&amp; L.r[high].key &gt;= pivotkey)</span><br><span class=\"line\">           \thigh--;</span><br><span class=\"line\">        L.r[low] = L.r[high];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt; high &amp;&amp; L.r[low].key &lt;= pivotkey)</span><br><span class=\"line\">            low++;</span><br><span class=\"line\">        L.r[high] = L.r[low];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.r[low] = L.r[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> low;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>递归版：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Qsort</span><span class=\"params\">(Sqlist&amp; L, <span class=\"type\">int</span> low, <span class=\"type\">int</span> high)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(low &lt; high)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tpivotloc = <span class=\"built_in\">partition</span>(L, low, high);</span><br><span class=\"line\">        <span class=\"built_in\">Qsort</span>(L, low, pivotloc - <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"built_in\">Qsort</span>(L, pivotloc + <span class=\"number\">1</span>, high);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>优化版：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//三路划分的优化快排</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">QuickSortThree</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span> begin, <span class=\"type\">int</span> end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (begin &gt; end)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> keyi = <span class=\"built_in\">GetMidIndex</span>(a, begin, end);</span><br><span class=\"line\">\t<span class=\"built_in\">Swap</span>(a + keyi, a + begin);</span><br><span class=\"line\">\t<span class=\"type\">int</span> left = begin, right = end, cur = begin + <span class=\"number\">1</span>, key = a[begin];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (cur &lt;= right)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[cur] &lt; key)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Swap</span>(a + cur, a + left);</span><br><span class=\"line\">\t\t\t++cur, ++left;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a[cur] == key)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t++cur;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Swap</span>(a + cur, a + right);</span><br><span class=\"line\">\t\t\t--right;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">QuickSortThree</span>(a, begin,left - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">QuickSortThree</span>(a, right + <span class=\"number\">1</span>, end);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"选择排序colorred不稳定排序\"><a class=\"markdownIt-Anchor\" href=\"#选择排序colorred不稳定排序\">#</a> 选择排序<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mrow><mo stretchy=\"false\">(</mo><mtext>不稳定排序</mtext><mo stretchy=\"false\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{(不稳定排序)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord cjk_fallback\" style=\"color:red;\">不</span><span class=\"mord cjk_fallback\" style=\"color:red;\">稳</span><span class=\"mord cjk_fallback\" style=\"color:red;\">定</span><span class=\"mord cjk_fallback\" style=\"color:red;\">排</span><span class=\"mord cjk_fallback\" style=\"color:red;\">序</span><span class=\"mclose\" style=\"color:red;\">)</span></span></span></span></span>​</h2>\n<blockquote>\n<p>排序 n 趟之后，前 n 个元素应该是整个序列中最小的 n 个元素，并且顺序排列</p>\n</blockquote>\n<p>操作：每次选择未选择序列中最小的（最大的），放在已经排序的序列之后时间复杂度：</p>\n<ul>\n<li>比较次数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{n(n-1)}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>​</li>\n<li>移动次数：\n<ul>\n<li>最好的情况，一开始就是升序，不需要移动</li>\n<li>最坏的情况：每次都需要移动（不是降序的时候），交换记录数为 n-1 对，移动记录数为 3 (n-1)（因为 swap 里面有三条语句）</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">SelectSort</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> mini = i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt;= n; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[j] &lt; a[mini]) mini = j;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">Swap</span>(&amp;a[mini], &amp;a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"堆排序colorred不稳定排序\"><a class=\"markdownIt-Anchor\" href=\"#堆排序colorred不稳定排序\">#</a> 堆排序<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mrow><mo stretchy=\"false\">(</mo><mtext>不稳定排序</mtext><mo stretchy=\"false\">)</mo></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\color{red}{(不稳定排序)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord cjk_fallback\" style=\"color:red;\">不</span><span class=\"mord cjk_fallback\" style=\"color:red;\">稳</span><span class=\"mord cjk_fallback\" style=\"color:red;\">定</span><span class=\"mord cjk_fallback\" style=\"color:red;\">排</span><span class=\"mord cjk_fallback\" style=\"color:red;\">序</span><span class=\"mclose\" style=\"color:red;\">)</span></span></span></span></span>​</h2>\n<blockquote>\n<p>排序 n 趟之后，数组的最后 n 个元素应该是最大且有序的</p>\n</blockquote>\n<p>对 n 较大的文件有效</p>\n<p>操作：升序建大堆，降序建小堆</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//升序--堆排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AdjustDown</span><span class=\"params\">(<span class=\"type\">int</span> *a, <span class=\"type\">int</span> n, <span class=\"type\">int</span> parent)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> child = parent * <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (child &lt; n)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (child + <span class=\"number\">1</span> &lt; n &amp;&amp; a[child] &lt; a[child + <span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t++child;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[child] &gt; a[parent])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Swap</span>(a + child, a + parent);</span><br><span class=\"line\">\t\t\tparent = child;</span><br><span class=\"line\">\t\t\tchild = parent * <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">AdjustUp</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span> child)</span><span class=\"comment\">//造大堆</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> parent = (child - <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (child &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[child] &gt; a[parent])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Swap</span>(a + child, a + parent);</span><br><span class=\"line\">\t\t\tchild = parent;</span><br><span class=\"line\">\t\t\tparent = (child - <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HeapSort</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">AdjustUp</span>(a, i);</span><br><span class=\"line\">\t<span class=\"type\">int</span> end = n - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (end &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">Swap</span>(a, a + end);</span><br><span class=\"line\">\t\t<span class=\"built_in\">AdjustDown</span>(a, end , <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">//因为end是交换过去的最后一个 所以循环应该到这个就结束 不应该传end+1</span></span><br><span class=\"line\">\t\tend--;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> Sqlist HeapType;</span><br><span class=\"line\"><span class=\"comment\">//H[s...m]中除了H.r[s].key其他都满足堆的定义</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HeapAdjust</span><span class=\"params\">(HeapType&amp; H, <span class=\"type\">int</span> s, <span class=\"type\">int</span> m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    rc = H.r[s];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = <span class=\"number\">2</span> * s; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j &lt; m &amp;&amp; <span class=\"built_in\">LT</span>(H.r[j].key, H.r[j + <span class=\"number\">1</span>].key)) j++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!(rc.key, H.r[j].key)) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        H.r[s] = H.r[j]; s = j;<span class=\"comment\">//向下遍历</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    H.r[s] = rc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">HeapSort</span><span class=\"params\">(HeapType&amp; H)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = H.length / <span class=\"number\">2</span>; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">        <span class=\"built_in\">HeapAdjust</span>(H, i, H.length);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = H.length; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        H.r[i]&lt;--&gt;H.r[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"built_in\">HeapAdjust</span>(H, <span class=\"number\">1</span>, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"归并排序稳定排序\"><a class=\"markdownIt-Anchor\" href=\"#归并排序稳定排序\">#</a> 归并排序（稳定排序）</h2>\n<blockquote>\n<p>第 1 趟排序之后，从开始起相邻两个元素为升序排列；第二趟排序之后，相邻 4 个元素为升序排列…… 第 n 趟排序之后，相邻<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.664392em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> 个元素为升序排列</p>\n</blockquote>\n<p>操作：将它们划分为长度均为 1 的子序列，然后逐步二路归并</p>\n<p>时间复杂度：</p>\n<ul>\n<li>对 n 个记录的文件进行归并排序，共需要<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">log_2n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">n</span></span></span></span> 趟，每趟所需要比较的关键字次数不超过 n，所以总比较次数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>每趟移动 n 个记录，移动次数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>归并排序需要一个大小为 n 的辅助空间</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MergeSort</span><span class=\"params\">(<span class=\"type\">int</span> *a, <span class=\"type\">int</span> begin, <span class=\"type\">int</span> end, <span class=\"type\">int</span>* tmp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (begin == end) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = (begin + end) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">MergeSort</span>(a, begin, mid, tmp);</span><br><span class=\"line\">\t<span class=\"built_in\">MergeSort</span>(a, mid + <span class=\"number\">1</span>, end, tmp);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> begin1 = begin, end1 = mid;</span><br><span class=\"line\">\t<span class=\"type\">int</span> begin2 = mid + <span class=\"number\">1</span>, end2 = end;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i = begin;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (begin1 &lt;= end1 &amp;&amp; begin2 &lt;= end2)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[begin1] &lt; a[begin2])</span><br><span class=\"line\">\t\t\ttmp[i++] = a[begin1++];</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\ttmp[i++] = a[begin2++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (begin1 &lt;= end1)</span><br><span class=\"line\">\t\ttmp[i++] = a[begin1++];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (begin2 &lt;= end2)</span><br><span class=\"line\">\t\ttmp[i++] = a[begin2++];</span><br><span class=\"line\">\t<span class=\"built_in\">memcpy</span>(a + begin, tmp + begin, <span class=\"built_in\">sizeof</span>(<span class=\"type\">int</span>) * (end - begin + <span class=\"number\">1</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>伪码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Merge</span><span class=\"params\">(RcdType SR[], RcdType&amp; TR[], <span class=\"type\">int</span> i, <span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//将有序的SR[i...m]和SR[m + 1...n]归并为有序的TR[i...n]</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = m + <span class=\"number\">1</span>, k = i; i &lt;= m &amp;&amp; j &lt;= n; k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">LQ</span>(SR[i].key, SR[j].key)) TR[k] = SR[i++];</span><br><span class=\"line\">        <span class=\"keyword\">else</span> TR[k] = SR[j++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i &lt;= m) TR[k...n] = SR[i...m];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(j &lt;= n) TR[k...n] = SR[j...n];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MSort</span><span class=\"params\">(RcdType SR[], ScdType&amp; TR1[], <span class=\"type\">int</span> s, <span class=\"type\">int</span> t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//将SR[s...t]归并为TR1[s...t]</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s == t) TR1[s] = SR[s];</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        m = (s + t)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"built_in\">Msort</span>(SR, TR2, s, m);</span><br><span class=\"line\">        <span class=\"built_in\">Msort</span>(SR, TR2, m + <span class=\"number\">1</span>, t);</span><br><span class=\"line\">        <span class=\"built_in\">Merge</span>(TR2, TR1, s, m, t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MergeSort</span><span class=\"params\">(Sqlist &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">Msort</span>(L.r, L.r, <span class=\"number\">1</span>, L.length);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基数排序稳定排序\"><a class=\"markdownIt-Anchor\" href=\"#基数排序稳定排序\">#</a> 基数排序（稳定排序）</h2>\n<p>操作：</p>\n<ul>\n<li>MSD：高位有效优先</li>\n<li>LSD：低位有效优先</li>\n</ul>\n<p>MSD 对应数字排序：下面以个位为例</p>\n<p>数组形式：</p>\n<p><video src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405281546971.mp4\" width=\"100%\" height=\"100%\" controls=\"controls\"></video></p>\n<p>队列形式：</p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405230936416.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202405230936776.png\" alt=\"\"></p>\n<p>时间复杂度：设数字的有效位数为 d</p>\n<ul>\n<li>需要 d 趟回收分配，每趟分配运算时间为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>收集：基数为 rd, 即 rd 个队列。从 rd 个队列中收集，运算时间 O (rd)</li>\n<li>一趟分配、回收运算时间 O (n+rd),  时间复杂度 O (d*(n+rd))</li>\n<li>辅助空间：每个队列首尾 2 个指针，共 2rd 个指针；n 个记录需要 n 个指针域。</li>\n</ul>\n",
            "tags": [
                "数据结构"
            ]
        }
    ]
}