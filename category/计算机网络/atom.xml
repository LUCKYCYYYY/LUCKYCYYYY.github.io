<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://www.luckycyyyy.top</id>
    <title>眨眼的小星玥 • Posts by &#34;计算机网络&#34; category</title>
    <link href="http://www.luckycyyyy.top" />
    <updated>2024-11-14T05:22:23.000Z</updated>
    <category term="Linux" />
    <category term="python" />
    <category term="数字电路与逻辑设计" />
    <category term="半导体与激光" />
    <category term="原子核物理" />
    <category term="振动与波动" />
    <category term="量子物理" />
    <category term="实验" />
    <category term="波动光学" />
    <category term="稳恒磁场" />
    <category term="无穷级数" />
    <category term="静电场" />
    <category term="物理实验" />
    <category term="概率论" />
    <category term="离散数学上" />
    <category term="AC自动机" />
    <category term="Dp" />
    <category term="algorithm" />
    <category term="sstream" />
    <category term="memset" />
    <category term="数据库" />
    <category term="前缀和" />
    <category term="差分" />
    <category term="二分" />
    <category term="电磁感应" />
    <category term="并查集" />
    <category term="数论" />
    <category term="图论" />
    <category term="贪心" />
    <category term="数据结构" />
    <category term="线段树" />
    <category term="级数" />
    <category term="常微分方程" />
    <category term="常用定理" />
    <category term="微分中值定理" />
    <category term="公式" />
    <category term="极限" />
    <category term="积分" />
    <category term="汇编" />
    <category term="计网" />
    <category term="DP" />
    <category term="Codeforces" />
    <category term="Nowcoder" />
    <category term="CSP" />
    <entry>
        <id>http://www.luckycyyyy.top/2024/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E9%93%BE%E8%B7%AF%E5%B1%82/</id>
        <title>链路层</title>
        <link rel="alternate" href="http://www.luckycyyyy.top/2024/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMzYwOTk2NDAyL2NoYW5uZWwvc2VyaWVzZGV0YWlsP3NpZD0xNzIxODgy&#34;&gt;文章参考–湖科大教书匠&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;链路层概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路层概述&#34;&gt;#&lt;/a&gt; 链路层概述&lt;/h1&gt;
&lt;h2 id=&#34;链路层提供的服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路层提供的服务&#34;&gt;#&lt;/a&gt; 链路层提供的服务&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;成帧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141436390.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将数据加上头部和尾部，封装成数据帧&lt;/li&gt;
&lt;li&gt;帧头部用 MAC 地址标识源和目的（不同于 IP 地址）&lt;/li&gt;
&lt;li&gt;MSS = MTU - IP 头部长度 - TCP 头部长度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141429164.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;透明传输中因为对传输数据没有任何限制，即允许数据中存在帧定界符，所以接收方可能把数据中的那段数据错认成帧定界符。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对帧界定符进行 “转义”，在其之前加上 ESC&lt;/li&gt;
&lt;li&gt;在数据中与转义字符相同的数据段中填充 0&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;eg：&lt;br&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141435145.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;链路接入&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共享介质的信道访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;可靠交付&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;很少用于误码率低的链路（光纤、双绞线链路）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用于误码率高的链路（无线链路）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;差错检测和纠正&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信号衰减和电磁干扰噪声导致出错&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收方检测到错误存在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给发送方发送信号要求重传或丢弃该数据帧&lt;/li&gt;
&lt;li&gt;接收方检测和纠正帧中错误，不用重传&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;流量控制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在相邻的收发节点间限制流量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;半双工和全双工&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;半双工时，链路两端的节点都能传输分组，但不能同时传输&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;链路层实现地点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路层实现地点&#34;&gt;#&lt;/a&gt; 链路层实现地点&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141422284.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;差错检测和纠正技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#差错检测和纠正技术&#34;&gt;#&lt;/a&gt; 差错检测和纠正技术&lt;/h1&gt;
&lt;h2 id=&#34;奇偶校验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#奇偶校验&#34;&gt;#&lt;/a&gt; 奇偶校验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141441883.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;循环冗余校验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#循环冗余校验&#34;&gt;#&lt;/a&gt; 循环冗余校验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141517355.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141517857.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;发送方：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141516661.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;” 除法 “实质上是异或运算&lt;/li&gt;
&lt;li&gt;是否够除，是看位数是否足够&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接收方：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141516573.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411141516644.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;因特网检查和&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#因特网检查和&#34;&gt;#&lt;/a&gt; 因特网检查和&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;分组&lt;/strong&gt;：首先，将数据（或数据包）分为若干个 16 位的字（即每个字为两个字节）。如果数据长度不是 16 位的倍数，最后的一个部分将补充零填充。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;求和&lt;/strong&gt;：将所有 16 位的字相加，如果出现溢出（即超过 16 位），将溢出的部分加到和的最低位。也就是说，要进行 “循环加法”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;取反&lt;/strong&gt;：对最终的和值进行按位取反（将 0 变为 1，1 变为 0），得到检查和。这个和值就是&lt;strong&gt;校验和&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;校验&lt;/strong&gt;：接收方收到数据后，执行相同的操作，计算出一个校验和。若计算出的校验和为全 1，则认为数据无误；如果不为全 1，表示数据在传输过程中可能发生了错误。&lt;/p&gt;
&lt;h1 id=&#34;多路访问链路和协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多路访问链路和协议&#34;&gt;#&lt;/a&gt; 多路访问链路和协议&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;广播链路的特点&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;广播链路是指在一个通信系统中，信号从单个源设备发送出去，所有处于链路上的接收设备都能接收到该信号。广播通常用于无线通信或广播电视中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单个共享广播信道&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;两个或多个节点同时传输：相互干扰&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;碰撞：一个节点同时收到两个或多个信号&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;多路访问协议&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多路访问是指多个设备在同一时间使用共享的通信介质进行通信。为了避免冲突，多路访问需要一些协议来协调不同设备的传输。常见的多路访问方法包括时分多路访问（TDMA）、频分多路访问（FDMA）、码分多路访问（CDMA）等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分布式算法决定节点如何共享信道，如节点何时可以传输数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;** 特别注意：** 有关共享信道的通信（协商）需使用信道本身&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有额外的信道来进行协调&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;多址访问协议分类&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多址访问实际上是多路访问的一个子集，特指如何在多个设备之间有效地分配通信资源。在多址访问中，每个设备有一个独立的标识（地址），这样设备之间可以根据地址来区分不同的通信流。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信道划分协议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将信道划分成小的 “片”（时隙、频率、编码）&lt;/li&gt;
&lt;li&gt;将 “片” 分配给节点使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;随机接入（访问）协议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信道没有被分割，允许碰撞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;碰撞恢复&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;轮流协议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;节点轮流传送，但数据量大的节点轮流更长时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;信道的划分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信道的划分&#34;&gt;#&lt;/a&gt; 信道的划分&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150913515.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;静态信道划分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#静态信道划分&#34;&gt;#&lt;/a&gt; 静态信道划分&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150806445.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150806602.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150807071.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150812909.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;动态信道划分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#动态信道划分&#34;&gt;#&lt;/a&gt; 动态信道划分&lt;/h3&gt;
&lt;h4 id=&#34;aloha&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#aloha&#34;&gt;#&lt;/a&gt; ALOHA&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150918169.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时隙 ALOHA&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;所有的帧大小相同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时间被划分为相同大小的时隙，一个时隙等于传输一帧的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点只在时隙的开始传输帧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点被同步&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若有两个或多个节点在一个时隙内传送，则所有节点都能在该时隙内检测到冲突&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当节点有新的帧发送，它等到下一个时隙发送&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若没有碰撞，节点能在下一时隙传送完新帧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若有碰撞，节点以概率 p 在后续的每一个时隙重传该帧，即在发生冲突后会随机间隔 n 个时隙进行重发&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单个活动节点能以全速 R 连续传输&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高度分散：时隙只在节点同步&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简单&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;碰撞，浪费时隙&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时隙空闲&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点需要在分组传送时间以内检测到碰撞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时钟同步&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;效率：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;时隙 ALOHA：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150926401.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;纯 ALOHA：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150927423.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;csmacd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csmacd&#34;&gt;#&lt;/a&gt; CSMA/CD&lt;/h4&gt;
&lt;h5 id=&#34;概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150933829.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分类：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非坚持 CSMA&lt;/strong&gt;：一旦监听到信道忙（即发现有其他站在发送数据），就不再坚持听下去，而是根据协议的算法&lt;strong&gt;延迟一个随机的时间后&lt;/strong&gt;重新再监听。若进行载波监听时发现信道空闲，则将准备好的帧发送出去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时隙非坚持 CSMA：&lt;strong&gt;采用划分时隙的随机接入 CSMA 协议，协议规定只能&lt;/strong&gt;在每个时隙开始时&lt;/strong&gt;才能发送帧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1 坚持 CSMA：&lt;strong&gt;当一个站点要传送数据时，首先侦听信道，看是否有其他站点正在传送。如果信道正忙，它就&lt;/strong&gt;持续等待直到它侦听到信道空闲&lt;/strong&gt;时，便将数据送出。若发生&lt;strong&gt;冲突&lt;/strong&gt;，站点就&lt;strong&gt;等待一个随机长的时间&lt;/strong&gt;，然后重新开始。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;P 坚持 CSMA：&lt;strong&gt;当一个站点要传送数据时，首先侦听信道，看是否有其他站点正在传送。如果信道正忙，它就&lt;/strong&gt;持续等待直到它侦听到信道空闲&lt;/strong&gt;时，以&lt;strong&gt;概率 P 发送数据&lt;/strong&gt;，而&lt;strong&gt;以概率（1－P）延迟一段时间 τ&lt;/strong&gt;（网络中最远的端到端的传播时延），重新监听信道。若发生冲突，站点就等待一个随机长的时间，然后重新开始。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CSMA 比较：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;非坚持：不能充分利用信道刚刚转入空闲期的这段时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 坚持：容易在上述这段时间产生冲突。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;P 坚持：可以在一定程度上克服这些缺点，但却很难选择一个能用于各种通信量强度的 P 值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在实际网络中常选择 1 坚持&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151015046.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150940320.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150942115.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150943083.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150945231.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150947490.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;习题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#习题&#34;&gt;#&lt;/a&gt; 习题&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151000035.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151003140.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151003086.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;发送流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#发送流程&#34;&gt;#&lt;/a&gt; 发送流程&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150948941.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411150948573.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;轮流协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#轮流协议&#34;&gt;#&lt;/a&gt; 轮流协议&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151019498.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三者比较&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;信道划分协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在重负荷时，共享信道有效、公平&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在轻负荷时效率低：信道访问延时，即使只有一个活动节点，也只能分配到 1/N 的带宽&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;随机访问协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;轻负荷时效率高：只有一个节点时，能充分利用信道&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在重负荷下：碰撞的开销&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;轮流协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在两个方面寻求最佳的解决方案！&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;交换局域网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交换局域网&#34;&gt;#&lt;/a&gt; 交换局域网&lt;/h1&gt;
&lt;h2 id=&#34;链路层寻址和arp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路层寻址和arp&#34;&gt;#&lt;/a&gt; 链路层寻址和 ARP&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;：既然有 IP 地址，为何要 MAC 地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;：局域网设备不能够识别 IP 地址（工作在链路层），只能通过 MAC 地址寻找主机&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;：进程产生的套接字是端口号 + IP 地址，在局域网中如何找到目的主机&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;：通过 IP 地址获取 MAC 地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;：如何在已知 IP 地址的情况下，获得 MAC 地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;：地址解析协议（ARP）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151045976.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mac地址lan地址物理地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mac地址lan地址物理地址&#34;&gt;#&lt;/a&gt; MAC 地址（LAN 地址，物理地址）&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047259.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047902.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047332.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151045825.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151047437.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;物理地址指的是 MAC 地址，在数据链路层上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151046083.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;arp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arp&#34;&gt;#&lt;/a&gt; ARP&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;根据目标的 IP 地址获取其 MAC 地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411172037484.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151057305.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151057575.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ARP 协议只能在一段链路或一个网络上使用，而不能跨网络使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411151058910.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;以太网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以太网&#34;&gt;#&lt;/a&gt; 以太网&lt;/h2&gt;
&lt;h3 id=&#34;以太网类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以太网类型&#34;&gt;#&lt;/a&gt; 以太网类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;总线式以太网&lt;/li&gt;
&lt;li&gt;交换式以太网&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;以太网的帧结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以太网的帧结构&#34;&gt;#&lt;/a&gt; 以太网的帧结构&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161124022.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据字段&lt;/strong&gt;：（46 字节～1500 字节）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前同步码&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;总共 8 字节，前 7 字节的格式为 10101010 ，最后一个字节格式为 10101011&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用于同步发送方与接收方时钟&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;地址&lt;/strong&gt;：6 字节&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若适配器收到以太网帧，目的地址为自己的 MAC 地址或广播地址（如 ARP 包），就将帧中的数据传给网络层。&lt;/li&gt;
&lt;li&gt;否则，适配器丢弃该帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;类型&lt;/strong&gt;：上层协议类型 （大多为 IP 协议，也支持其它协议如 Novell IPX 和 AppleTalk）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CRC&lt;/strong&gt;：由接收方检查，若检测到错误，就将该帧丢弃&lt;/p&gt;
&lt;h3 id=&#34;以太网提供的服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以太网提供的服务&#34;&gt;#&lt;/a&gt; 以太网提供的服务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无连接服务&lt;/strong&gt;：在发送适配器和接收适配器之间不需要握手&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;不可靠服务&lt;/strong&gt;：接收适配器不发送确认帧或否认帧给发送方&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交给网络层的数据报可能存在间隙&lt;/li&gt;
&lt;li&gt;若应用使用 TCP，间隙会被填充&lt;/li&gt;
&lt;li&gt;否则，应用就会看见间隙&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;以太网使用的csmacd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以太网使用的csmacd&#34;&gt;#&lt;/a&gt; 以太网使用的 CSMA/CD&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;没有时隙&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当适配器侦听到其它适配器在传输，则不传输帧，即&lt;strong&gt;载波侦听&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;正在传输的适配器若检测到其它适配器也在传输，则它中止自己的传输，即&lt;strong&gt;碰撞检测&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在重新传输之前，适配器要等待一段随机时间，即&lt;strong&gt;随机访问&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;算法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;适配器收到来自网络层的数据报，创建帧&lt;/li&gt;
&lt;li&gt;若适配器检测到信道空闲，则开始传输帧；若检测到信道忙，就开始等待，直到信道空闲再开始传输该帧&lt;/li&gt;
&lt;li&gt;若适配器传输了整个帧而没有检测到其它适配器的传输，则该适配器完成该帧的传输&lt;/li&gt;
&lt;li&gt;若适配器在传输时检测到其它适配器也在传输，则停止传输，发送拥塞信号&lt;/li&gt;
&lt;li&gt;中止传输后，适配器进入指数回退阶段，在经历第 m 次碰撞后，适配器随机从&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/msup&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;{0，1，2，…，2^m-1}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.664392em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 中选择 K 值。适配器在等待 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;K&lt;/mi&gt;&lt;mtext&gt;·&lt;/mtext&gt;&lt;mn&gt;512&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;K·512&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;·&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 比特时间后，返回第 2 步&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;重要特性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 CSMA/CD 协议的以太网不能进行&lt;strong&gt;全双工通信&lt;/strong&gt;而只能进行双向交替通信（&lt;strong&gt;半双工通信&lt;/strong&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个站在发送数据之后的一小段时间内，存在着遭遇碰撞的可能性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这种发送的不确定性使整个以太网的平均通信量远小于以太网的最高数据率。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;传统以太网的物理层&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#传统以太网的物理层&#34;&gt;#&lt;/a&gt; 传统以太网的物理层&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161429974.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10BASE5&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;10 表示传输速率为 10Mbps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BASE 表示基带传输：将信源的数据经过变换变为数字基带信号直接传输，信号不经过频谱搬移。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基带数字信号在传输过程中，随着传输距离加大，信号衰减及噪声干扰会使得数字信号波形产生&lt;strong&gt;失真&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;为消除失真，每隔一定传输距离加设一个&lt;strong&gt;中继器&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中继器&lt;/strong&gt;工作在&lt;strong&gt;物理层&lt;/strong&gt;，把一端电缆的信号放大后传到另一端的电缆中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5 表示最远传输距离为 500m&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;吉比特以太网千兆以太网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#吉比特以太网千兆以太网&#34;&gt;#&lt;/a&gt; 吉比特以太网（千兆以太网）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用标准以太网帧格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;允许点对点链路和共享的广播信道&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共享信道时，使用 CSMA/CD; 为了得到可接受的效率，节点之间的距离要短&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于点到点链路，可以以 1Gbps 的速率全双工工作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2006 年达到 10 Gbps&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;信号编码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信号编码&#34;&gt;#&lt;/a&gt; 信号编码&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;曼彻斯特编码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161530621.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编码规则&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每个比特周期分为两个部分（前半周期和后半周期）。&lt;/li&gt;
&lt;li&gt;逻辑 &lt;code&gt;0&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;前半周期为高电平，后半周期为低电平（高到低跳变）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;逻辑 &lt;code&gt;1&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;前半周期为低电平，后半周期为高电平（低到高跳变）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也可以简单记为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电平&lt;strong&gt;高到低&lt;/strong&gt;表示 &lt;code&gt;0&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;电平&lt;strong&gt;低到高&lt;/strong&gt;表示 &lt;code&gt;1&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;同步性
&lt;ul&gt;
&lt;li&gt;每个比特周期都有一个中间跳变（高到低或低到高），提供了时钟同步信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;直流平衡
&lt;ul&gt;
&lt;li&gt;平均电平为零，不存在直流分量（频谱更适合传输介质）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;抗干扰性
&lt;ul&gt;
&lt;li&gt;即使传输中发生一些干扰，由于信号变化的频率较高，接收端更容易检测和恢复信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;差分曼彻斯特编码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于信号的物理层编码技术，常用于数字通信中，用于将比特数据转换成电信号传输。它结合了差分编码和曼彻斯特编码的优点，具有良好的抗干扰能力和同步特性。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161538118.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;编码规则&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑 “0”&lt;/strong&gt;：在比特开始时进行&lt;strong&gt;翻转&lt;/strong&gt;（电平从高到低，或低到高）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逻辑 “1”&lt;/strong&gt;：在比特开始时&lt;strong&gt;不翻转&lt;/strong&gt;（电平保持上一位结束时的状态）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步跳变&lt;/strong&gt;：每个比特周期中间（即位间隔中点）必须&lt;strong&gt;翻转&lt;/strong&gt;，确保同步信号的存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NRZ 信号&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作为对比，NRZ 信号直接用高低电平表示逻辑 “1” 和逻辑 “0”。&lt;/li&gt;
&lt;li&gt;无中点翻转，容易因长时间电平不变而丢失同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;差分曼彻斯特信号&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每位的中点始终有一次&lt;strong&gt;固定翻转&lt;/strong&gt;（用于时钟同步）。&lt;/li&gt;
&lt;li&gt;根据开始时是否翻转来区分逻辑 “0” 和 “1”。&lt;/li&gt;
&lt;li&gt;不同于普通曼彻斯特编码，差分曼彻斯特编码对信号极性反转不敏感。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;信号解读&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以图中的比特流  &lt;code&gt;0 1 0 0 1 1 0 1 0&lt;/code&gt;  为例，逐位分析：&lt;/p&gt;
&lt;p&gt;在最开头的高横线表示之前的状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一位  &lt;code&gt;0&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;开始时翻转（横线高到低）。&lt;/li&gt;
&lt;li&gt;中点时翻转（横线低到高）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二位 &lt;code&gt;1&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;开始时不翻转，保持上一位结束时的状态（横线高）。&lt;/li&gt;
&lt;li&gt;中点时翻转（横线高到低）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三位  &lt;code&gt;0&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;开始时翻转（横线低到高）。&lt;/li&gt;
&lt;li&gt;中点时翻转（横线高到低）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;后续位依次按规则进行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;链路交换机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路交换机&#34;&gt;#&lt;/a&gt; 链路交换机&lt;/h2&gt;
&lt;h3 id=&#34;集线器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集线器&#34;&gt;#&lt;/a&gt; 集线器&lt;/h3&gt;
&lt;p&gt;集线器本质上是&lt;strong&gt;物理层&lt;/strong&gt;的中继器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;从一个接口收到的比特流会传给其它所有接口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同样速率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有帧缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;集线器没有 CSMA/CD ：由适配器检测碰撞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提供网络管理功能（可网管、智能、网络分段）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161547157.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;交换机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交换机&#34;&gt;#&lt;/a&gt; 交换机&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据链路层 + 物理层&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主机&lt;strong&gt;直接连接&lt;/strong&gt;到交换机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交换机&lt;strong&gt;缓存&lt;/strong&gt;数据包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一条链路都采用了以太网协议，但之间&lt;strong&gt;没有冲突，全双工通信&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161612362.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161553650.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自学习转发&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161612013.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161612196.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;每条记录都有自己的有效时间，到期会自动删除；因为 MAC 地址和结构的关系不是永久的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;习题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161614140.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;网桥&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网桥&#34;&gt;#&lt;/a&gt; 网桥&lt;/h3&gt;
&lt;p&gt;网桥实质上就是一种存储转发设备，用来实现 MAC 层的 LAN 互连&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161620742.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网桥的工作原理&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不断监听各端口是否有信号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;收到无差错的帧则缓存，反之将差错帧丢弃&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若所收帧的目的 MAC 地址属另一网段，则通过站表决定向何端口转发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网桥不转发同一 “网段” 内通信的帧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目的主机和源主机不连接在网桥的同一接口上才会转发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网桥不修改所转发的帧的源地址&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;网桥的优势&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;过滤通信量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;扩大了局域网的物理范围&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提高了可靠性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可互连不同物理层、不同 MAC 子层和不同速率的局域网&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;网桥的缺点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;由于要接收和转发，增加了时延&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MAC 子层没有流量控制功能，网络负荷重时，网桥缓存空间可能发生溢出，产生帧丢失现象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不同 MAC 子层的网段桥接时，在转发帧之前要修改帧的某些字段，这也需要耗费时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出现&lt;strong&gt;广播风暴&lt;/strong&gt;。网桥只适合用户少于几百个和通信量不太大的局域网，否则有时会因传播过多广播信息而产生网络拥塞&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;网桥和集线器的区别&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;集线器只是将网络的覆盖距离简单的延长，而且距离有限，具体实现在&lt;strong&gt;物理层&lt;/strong&gt;；网桥不仅具有将 LAN 的覆盖距离延长的作用，而且理论上可做到无限延长（?），具体实现在&lt;strong&gt; MAC 层&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MAC 层&lt;/strong&gt;（媒体访问控制层）是计算机网络中的一个子层，属于数据链路层。MAC 层的主要职责是控制设备如何访问物理介质并实现数据帧的可靠传输。它是网络中通信设备之间协同工作、避免冲突的重要机制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;集线器仅具有简单的信号整形和放大的功能；网桥则属于一种智能互连设备，它主要提供&lt;strong&gt;信号的存储 / 转发、数据过滤、路由选择&lt;/strong&gt;等能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;集线器仅是一种&lt;strong&gt;硬设备&lt;/strong&gt;，而网桥既包括&lt;strong&gt;硬件又包括软件&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;集线器仅只能互连&lt;strong&gt;同类 LAN&lt;/strong&gt;，而网桥可支持&lt;strong&gt;不同类型的 LAN&lt;/strong&gt; 互连。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;透明网桥&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里所谓 “透明” 是指局域网上的每个站并不知道所发送的帧将经过哪几个网桥，即网桥对各站来说是看不见的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;存在问题一一兜圈子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假设网络中存在多个互联网桥 A、B、C，形成了一个环路。当某设备发送广播帧时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;广播帧从网桥 A 被转发到网桥 B，然后又被转发到网桥 C，再返回到网桥 A。&lt;/li&gt;
&lt;li&gt;每个网桥不断将广播帧转发到其他网桥，帧在环路中不断循环，形成广播风暴。&lt;/li&gt;
&lt;li&gt;在此过程中，各网桥不断更新 MAC 地址表，但无法正确确定设备的位置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;解决方案 —— 支撑树算法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;互连在一起的网桥彼此通信后，就能找出原来的网络拓扑的一个子集，在这个子集里整个连通的网络中&lt;strong&gt;不存在回路&lt;/strong&gt;。一旦支撑树确定了网桥就会将某些端口断开，以确保从原来的拓扑得出一个支撑树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支撑树算法选择&lt;strong&gt;一个网桥为树的根&lt;/strong&gt;，然后以最短路径为依据，找到树上的每一个结点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了让支撑树能反映网络拓扑的变化，每隔几秒钟每个网桥要广播其标识号，和它所知道的所有其他网桥&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;：互连局域网数目非常大时，支撑树算法可能花很多时间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以太网交换机 —— 多端口网桥&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;链路层设备&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存储和转发以太网帧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查帧头部，根据目的 MAC 地址转发帧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当帧转发到 LAN 网段，用 CSMA/CD 访问 LAN 网段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;透明主机不知道交换机的存在&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;即插即用，自学习，交换机不需配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直通交换：帧从入端口转发到出端口不需收集整个帧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;能少量减少延迟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共享 / 专用的、10/100/1000Mbps 接口的结合&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对比&#34;&gt;#&lt;/a&gt; 对比&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161638793.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161558608.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161639568.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;虚拟局域网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟局域网&#34;&gt;#&lt;/a&gt; 虚拟局域网&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161657489.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161657254.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658542.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658986.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658779.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658977.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161658761.png&#34; style=&#34;zoom: 50%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;习题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411161659018.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="计网" />
        <updated>2024-11-14T05:22:23.000Z</updated>
    </entry>
    <entry>
        <id>http://www.luckycyyyy.top/2024/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E7%BD%91%E7%BB%9C%E5%B1%82/</id>
        <title>网络层</title>
        <link rel="alternate" href="http://www.luckycyyyy.top/2024/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMzYwOTk2NDAyL2NoYW5uZWwvc2VyaWVzZGV0YWlsP3NpZD0xNzIxODgy&#34;&gt;文章参考：湖科大教书匠&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;网络层概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络层概述&#34;&gt;#&lt;/a&gt; 网络层概述&lt;/h1&gt;
&lt;h2 id=&#34;主要功能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主要功能&#34;&gt;#&lt;/a&gt; 主要功能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在全局范畴为主机之间的通信进行&lt;strong&gt;选路&lt;/strong&gt;，选路的结果反映为分组交换机（设备）上的&lt;strong&gt;转发表&lt;/strong&gt; &lt;strong&gt;(控制层面）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分组交换机（设备）上的网络层根据&lt;strong&gt;转发表&lt;/strong&gt;以及&lt;strong&gt;分组头部信息&lt;/strong&gt;，将分组向适当链路进行&lt;strong&gt;转发（数据层面）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于面向连接的网络层服务，提供&lt;strong&gt;连接建立&lt;/strong&gt;的功能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分组交换机分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组交换机分类&#34;&gt;#&lt;/a&gt; 分组交换机分类&lt;/h2&gt;
&lt;p&gt;交换机：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接不同 pc 端，连接到同一个局域网中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接不同网段&lt;/li&gt;
&lt;li&gt;转换网络地址，私网和公网的转换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据&lt;strong&gt;链路层首部信息&lt;/strong&gt;进行转发的 ——&lt;strong&gt; 链路层节点交换机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据&lt;strong&gt;网络层首部信息&lt;/strong&gt;进行转发的 ——&lt;strong&gt; 路由器&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;虚电路和数据报网络&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚电路和数据报网络&#34;&gt;#&lt;/a&gt; 虚电路和数据报网络&lt;/h1&gt;
&lt;p&gt;面向连接的服务 ——&lt;strong&gt; 虚电路&lt;/strong&gt;，需事先握手&lt;/p&gt;
&lt;p&gt;面向无连接的服务 ——&lt;strong&gt; 数据报&lt;/strong&gt;，无需握手&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132002702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132002216.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;路由器工作原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由器工作原理&#34;&gt;#&lt;/a&gt; 路由器工作原理&lt;/h1&gt;
&lt;p&gt;最长前缀匹配：查找给定目标地址的转发表项时，请使用与目标地址匹配的最长地址前缀&lt;/p&gt;
&lt;h2 id=&#34;交换结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交换结构&#34;&gt;#&lt;/a&gt; 交换结构&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132006397.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132006004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132007513.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;路由器的拥塞问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由器的拥塞问题&#34;&gt;#&lt;/a&gt; 路由器的拥塞问题&lt;/h2&gt;
&lt;h3 id=&#34;缓冲区大小&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#缓冲区大小&#34;&gt;#&lt;/a&gt; 缓冲区大小&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132023542.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;分组调度策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组调度策略&#34;&gt;#&lt;/a&gt; 分组调度策略&lt;/h3&gt;
&lt;p&gt;尾部丢弃：丢弃到达的数据包&lt;/p&gt;
&lt;p&gt;优先级：按优先级丢弃 / 删除&lt;/p&gt;
&lt;p&gt;随机：随机丢弃 / 移除&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132023291.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ip数据报的分片和重组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip数据报的分片和重组&#34;&gt;#&lt;/a&gt; ip 数据报的分片和重组&lt;/h1&gt;
&lt;p&gt;网络链路具有 &lt;strong&gt;MTU&lt;/strong&gt; (最大传输单位) 属性 —— 是由链路层最大帧的限制决定的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同类型的链路有不同的&lt;strong&gt; MTU&lt;/strong&gt; 值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大的&lt;strong&gt; IP&lt;/strong&gt; 数据报在网络中会被分成小的分片&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一个数据报变成了几个数据报&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重组只在目的主机进行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据报头部的&lt;strong&gt;标识&lt;/strong&gt;、&lt;strong&gt;标志&lt;/strong&gt;以及片&lt;strong&gt;偏移字段&lt;/strong&gt;用于目的主机对接收的分片进行重组&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132023505.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个小的分片都需要包含头部信息&lt;/li&gt;
&lt;li&gt;标志：1 为未结束，0 为结束（分片）&lt;/li&gt;
&lt;li&gt;片偏移量：每个分片在整个报文中的位置，偏移以 8 字节为单位，所以需要除以 8&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ipv4地址概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ipv4地址概述&#34;&gt;#&lt;/a&gt; ipv4 地址概述&lt;/h1&gt;
&lt;h2 id=&#34;分类编址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分类编址&#34;&gt;#&lt;/a&gt; 分类编址&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132035454.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132029638.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132031570.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132034998.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;习题：&lt;/p&gt;
&lt;p 注意解析3=&#34;&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mstyle mathcolor=&#34;red&#34;&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\color{red}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132037574.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p 0.0.0.0只能作为源地址=&#34;&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mstyle mathcolor=&#34;red&#34;&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\color{red}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132041724.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;划分子网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#划分子网&#34;&gt;#&lt;/a&gt; 划分子网&lt;/h2&gt;
&lt;p&gt;子网划分的方法：从主机号中借用一部分位数作为子网号&lt;/p&gt;
&lt;p&gt;子网掩码：通过在网络号的子网号相应的位置全置 1，主机号相应的位置全置 0，即可得到子网掩码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132045035.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132047630.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;cidr&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cidr&#34;&gt;#&lt;/a&gt; CIDR&lt;/h3&gt;
&lt;p&gt;构造超网&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CIDR 编址格式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li &amp;lt;网络前缀,=&#34;&#34; &amp;lt;主机号=&#34;&#34;&gt;
&lt;p&gt;IP 地址 ::=&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;斜线记法：192.168.0.1/24&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简写记法：10.0.0.0/10 10/10&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132051121.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132056925.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132057231.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132059897.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ip数据报的发送和转发过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip数据报的发送和转发过程&#34;&gt;#&lt;/a&gt; ip 数据报的发送和转发过程&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;广播地址&lt;/strong&gt;路由器&lt;strong&gt;不转发&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132124697.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132125993.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132126920.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cidr路由表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cidr路由表&#34;&gt;#&lt;/a&gt; CIDR 路由表&lt;/h2&gt;
&lt;p&gt;使用 CIDR 时，路由表中的每个项目由 “网络前缀” 和 “下一跳地址” 组成。在查找路由表时可能会得到不止一个匹配结果。&lt;/p&gt;
&lt;p&gt;应当从匹配结果中选择具有最长网络前缀的路由：&lt;strong&gt;最长前缀匹配&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132130033.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;获得ip地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获得ip地址&#34;&gt;#&lt;/a&gt; 获得 ip 地址&lt;/h1&gt;
&lt;p&gt;手工配置&lt;/p&gt;
&lt;p&gt;DHCP: 动态主机配置协议：从服务器上动态获取 IP 地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工作在应用层&lt;/li&gt;
&lt;li&gt;使用 UDP 协议工作&lt;/li&gt;
&lt;li&gt;DHCP 有 3 个端口&lt;/li&gt;
&lt;li&gt;67 和 68 为正常的 DHCP 服务端口，分别作为 DHCP Server 和 DHCP Client 的服务端口&lt;/li&gt;
&lt;li&gt;546 号端口用于 DHCPv6 Client，而不用于 DHCPv4，是为 DHCP failover 服务，这是需要特别开启的服务，DHCP failover 是用来做 “双机热备” 的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411132135450.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;icmp协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#icmp协议&#34;&gt;#&lt;/a&gt; ICMP 协议&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140757622.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nat&#34;&gt;#&lt;/a&gt; NAT&lt;/h1&gt;
&lt;p&gt;动机：本地网络只要使用&lt;strong&gt;一个 IP 地址&lt;/strong&gt;就可以和外部网络相连 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不需要从 ISP 处获得大批 IP 地址：所有设备可以使用&lt;strong&gt;同一个 IP 地址&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以在不通知外部网络的情况下改变内网主机的 IP 地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;即使改变了 ISP 也无须改变内网主机的 IP 地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内网主机对外网主机而言是不可见的、不可寻址的。(这也算是一项安全措施).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三种地址转换方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;静态 NAT：一个本地地址对应一个全球地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动态 NAT：一个全球地址对应多个本地地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端口 NAT：一个本地地址的端口对应到一个全球地址的端口&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140819564.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;选路算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#选路算法&#34;&gt;#&lt;/a&gt; 选路算法&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140843643.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;路由信息协议rip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由信息协议rip&#34;&gt;#&lt;/a&gt; 路由信息协议 RIP&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140824352.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140825681.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RIP 路由器更新规则&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140825568.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RIP 协议中，距离 16 表示不可达&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140826283.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;坏消息传的慢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140827705.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;开放最短路优先ospf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开放最短路优先ospf&#34;&gt;#&lt;/a&gt; 开放最短路优先 OSPF&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140831734.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140832764.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140832541.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140836018.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140832664.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140834167.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140835313.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140836785.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;外部网关协议bgp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#外部网关协议bgp&#34;&gt;#&lt;/a&gt; 外部网关协议 BGP&lt;/h2&gt;
&lt;p&gt;因特网上的 AS 间路由 ——BGP4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;因特网的规模太大，使得自治系统之间路由选择非常困难。对于自治系统之间的路由选择，要寻找最佳路由是很不现实的。自治系统之间的路由选择必须考虑有关策略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BGP 为每个 AS 提供一种手段，以处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;eBGP&lt;/strong&gt;: 从相邻 AS 获取子网可达性信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;iBGP&lt;/strong&gt;: 向该 AS 内部的所有路由器传播这些可达性信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于该可达性信息和 AS 策略，决定到达子网的 “好” 路由&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边界网关协议 BGP 只能是力求寻找一条能够到达目的网络且&lt;strong&gt;比较好&lt;/strong&gt;的路由（不能兜圈子），而并非要寻找一条最佳路由&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BGP 会话：两个 BGP 路由器间通过半永久的&lt;strong&gt; TCP&lt;/strong&gt; 连接来交换 BGP 消息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140842520.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411140842052.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="计网" />
        <updated>2024-11-13T11:46:24.000Z</updated>
    </entry>
    <entry>
        <id>http://www.luckycyyyy.top/2024/10/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E5%BA%94%E7%94%A8%E5%B1%82/</id>
        <title>应用层</title>
        <link rel="alternate" href="http://www.luckycyyyy.top/2024/10/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E5%BA%94%E7%94%A8%E5%B1%82/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;应用层协议原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应用层协议原理&#34;&gt;#&lt;/a&gt; 应用层协议原理&lt;/h1&gt;
&lt;h2 id=&#34;网络应用的架构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络应用的架构&#34;&gt;#&lt;/a&gt; 网络应用的架构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;客户端 / 服务器（Client/Server，C/S)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;总是打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拥有一个固定的地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缩放的数据中心&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;客户端：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与服务器通信&lt;/li&gt;
&lt;li&gt;可能是间歇性连接&lt;/li&gt;
&lt;li&gt;可能有动态的 IP 地址&lt;/li&gt;
&lt;li&gt;客户端之间不能相互通信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170837220.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对等网（Peer-to-Peer，P2P）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不一定总在线&lt;/li&gt;
&lt;li&gt;结点之间可以直接通信&lt;/li&gt;
&lt;li&gt;结点的地址以及他们之间的连接可能随时发生变化&lt;/li&gt;
&lt;li&gt;任何一方既提供服务又享受服务，自扩展：新的节点带来新的服务能力，同时也带来新的服务需求&lt;/li&gt;
&lt;li&gt;节点之间是间歇性连接、地址也是变化的&lt;/li&gt;
&lt;li&gt;管理非常复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170838469.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;混合体系结构&lt;/strong&gt;： C/S+P2P&lt;/p&gt;
&lt;h2 id=&#34;安全性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安全性&#34;&gt;#&lt;/a&gt; 安全性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TCP/UDP 天生不具备安全性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全套接字层 SSL&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供加密的 TCP 连接&lt;/li&gt;
&lt;li&gt;数据的完整性检查&lt;/li&gt;
&lt;li&gt;端点身份鉴别&lt;/li&gt;
&lt;li&gt;SSL 位于应用层与 TCP 之间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;web和http&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#web和http&#34;&gt;#&lt;/a&gt; WEB 和 HTTP&lt;/h1&gt;
&lt;h2 id=&#34;web的构成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#web的构成&#34;&gt;#&lt;/a&gt; WEB 的构成&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;WEB 属于 C/S 模式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;WEB 服务器&lt;/strong&gt;：IIS、Apache、TomCat……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浏览器&lt;/strong&gt;：IE、Maxthon、Firefox&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;信息&lt;strong&gt;表达&lt;/strong&gt;的协议 ——HTML&lt;/li&gt;
&lt;li&gt;信息&lt;strong&gt;传输&lt;/strong&gt;的协议 ——HTTP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;http&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http&#34;&gt;#&lt;/a&gt; HTTP&lt;/h2&gt;
&lt;h3 id=&#34;客户端服务器模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#客户端服务器模式&#34;&gt;#&lt;/a&gt; 客户端 / 服务器模式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;客户端:&lt;/strong&gt; 浏览器&lt;strong&gt;请求、接收、展示&lt;/strong&gt; Web 对象&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务器&lt;/strong&gt;: Web 服务器发送对象对请求进行&lt;strong&gt;响应&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;tcp-传输服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp-传输服务&#34;&gt;#&lt;/a&gt; TCP 传输服务&lt;/h3&gt;
&lt;p&gt;客户端启动 TCP 连接 (创建套接字) 到服务器，端口 &lt;strong&gt;80&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务器接受来自客户端的 TCP 连接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;http 报文 (应用层协议报文) 在浏览器 (http client) 和 Web 服务器 (http server) 之间进行交换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭 TCP 连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTP 是 “&lt;strong&gt;无状态有连接&lt;/strong&gt; &amp;quot; 的，服务器&lt;strong&gt;不保留&lt;/strong&gt;任何访问过的请求信息&lt;/p&gt;
&lt;h3 id=&#34;http连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http连接&#34;&gt;#&lt;/a&gt; HTTP 连接&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非持续 HTTP&lt;/strong&gt;&lt;/p&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182105298.png&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;总时间 = 2RTT + 文件传输时间&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过 TCP 连接最多发送一个对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;连接然后被关闭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载多个对象需要建立多个连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;持续 HTTP&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端和服务器之间的单个 TCP 连接上可以发送&lt;strong&gt;多个&lt;/strong&gt;对象&lt;/li&gt;
&lt;li&gt;服务器在发送响应后，&lt;strong&gt;不再断开 TCP 连接&lt;/strong&gt;，而是保持该连接，用于后续对象的传送，直至该连接 “休息” 了一个较长的时间后，方断开该连接&lt;/li&gt;
&lt;li&gt;减少了对服务器端连接数的需要，从而减少了对服务器端套接字资源的占用，提高了服务器的负载能力&lt;/li&gt;
&lt;li&gt;持久连接又可以分为
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;非流水线&lt;/strong&gt;方式：一个&lt;strong&gt;对象传输完成&lt;/strong&gt;方能传输下一个&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流水线&lt;/strong&gt;方式：可以&lt;strong&gt;一次性发送所有请求&lt;/strong&gt;，慢慢接收&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;HTTP 请求报文&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170854337.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP 响应报文&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170854380.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170855360.png&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;h1 id=&#34;用户-服务器交互cookie&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户-服务器交互cookie&#34;&gt;#&lt;/a&gt; 用户 - 服务器交互：Cookie&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Cookie&lt;/strong&gt; 是一种由服务器生成并存储在用户浏览器中的小型文本文件，用于在客户端和服务器之间保存状态信息。它主要用于以下几种场景：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cookie 的主要用途&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;会话管理&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;例如用户登录状态、购物车信息、游戏进度等。&lt;/li&gt;
&lt;li&gt;当用户访问网站时，服务器可以通过 Cookie 识别用户是否已经登录，或者存储用户的偏好设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;个性化设置&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;网站可以通过 Cookie 存储用户的语言偏好、主题选择等，使用户获得更符合个人习惯的浏览体验。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跟踪与分析&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Cookie 被用来记录用户在网站上的行为，例如访问的页面、点击的内容等。这对广告投放和数据分析非常重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Cookie 技术的组成部分:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 HTTP 响应报文中有一个 Cookie 首部行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 HTTP 请求报文中也有一个 Cookie 首部行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在用户的端系统中保留了一个 Cookie 文件，由用户浏览器负责管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Web 站点有一个后端数据库&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170859642.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;文件传输协议ftp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件传输协议ftp&#34;&gt;#&lt;/a&gt; 文件传输协议：FTP&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171002874.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170958896.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;习题：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411170957442.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;电子邮件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#电子邮件&#34;&gt;#&lt;/a&gt; 电子邮件&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171021688.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;实现过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实现过程&#34;&gt;#&lt;/a&gt; 实现过程&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171004259.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171005173.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171007958.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;习题：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171023889.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;邮件格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#邮件格式&#34;&gt;#&lt;/a&gt; 邮件格式&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171022811.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171019582.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;邮件读取格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#邮件读取格式&#34;&gt;#&lt;/a&gt; 邮件读取格式&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171022358.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;基于万维网的电子邮件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基于万维网的电子邮件&#34;&gt;#&lt;/a&gt; 基于万维网的电子邮件&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171023126.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;dns&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dns&#34;&gt;#&lt;/a&gt; DNS&lt;/h1&gt;
&lt;h2 id=&#34;简况&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简况&#34;&gt;#&lt;/a&gt; 简况&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DNS 是一个分布式数据库，由很多台 DNS 服务器按照层次结构组织起来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS 运行在端到端系统上，且使用 UDP 协议（53 号端口）进行报文传输，因此 DNS 是应用层协议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS 以 C/S 的模式工作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS 不直接和用户打交道，而是因特网的核心功能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结构&#34;&gt;#&lt;/a&gt; 结构&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171053144.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;根 DNS 服务器&lt;/strong&gt;：如果域名映射未知，则向授权域名服务器查询；取得映射；将映射返回本地域名服务器&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;顶级域 DNS 服务器&lt;/strong&gt;：负责顶级域名和所有国家的顶级域名解析工作，例如：com, org, net, gov, uk, cn, jp 等&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;权威 DNS 服务器&lt;/strong&gt;：属于某个组织的 DNS 服务器，为组织的服务器提供一个权威的域名到 IP 地址的映射服务 (例如：Web 和 mail)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171056288.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171056669.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;域名解析过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域名解析过程&#34;&gt;#&lt;/a&gt; 域名解析过程&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171057358.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dns缓存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dns缓存&#34;&gt;#&lt;/a&gt; DNS 缓存&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171058954.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;习题：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171058034.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dns提供服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dns提供服务&#34;&gt;#&lt;/a&gt; DNS 提供服务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;域名到 IP 地址的转换&lt;/li&gt;
&lt;li&gt;主机 / 邮件服务器别名：为不好记的规范主机 / 邮件服务器名提供一个易记的别名 e.g. &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ob3RtYWlsLmNvbQ==&#34;&gt;www.hotmail.com&lt;/span&gt; -&amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ob3RtYWlsLmFhdGUubnNhdGMubmV0&#34;&gt;www.hotmail.aate.nsatc.net&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;负载均衡
&lt;ul&gt;
&lt;li&gt;一个域名对应多个 IP&lt;/li&gt;
&lt;li&gt;DNS 服务器在多个 IP 中进行轮转&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171100551.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;p2p文件共享&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#p2p文件共享&#34;&gt;#&lt;/a&gt; P2P 文件共享&lt;/h1&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171105425.png&#34; style=&#34;zoom:67%;&#34; /&gt;</content>
        <category term="计网" />
        <updated>2024-10-18T06:54:14.000Z</updated>
    </entry>
    <entry>
        <id>http://www.luckycyyyy.top/2024/10/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E8%BF%90%E8%BE%93%E5%B1%82/</id>
        <title>运输层</title>
        <link rel="alternate" href="http://www.luckycyyyy.top/2024/10/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91--%E8%BF%90%E8%BE%93%E5%B1%82/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;概述运输层服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概述运输层服务&#34;&gt;#&lt;/a&gt; 概述运输层服务&lt;/h1&gt;
&lt;p&gt;运输层为运行在&lt;strong&gt;不同&lt;/strong&gt;主机上的&lt;strong&gt;应用进程&lt;/strong&gt;提供直接的通信服务。&lt;/p&gt;
&lt;p&gt;运输层协议是在&lt;strong&gt;端系统&lt;/strong&gt;中而不是在路由器中实现的。具体实现过程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;发送端&lt;/strong&gt;：运输层将从发送应用程序进程接收到的报文转换成运输层分组，即运输层报文段（先将应用报文划分成小块，再加上运输层首部）。运输层将这些报文段发送给网络层，网络层将其封装成网络分组（即数据报）并向目的地发送。&lt;strong&gt;网络路由器&lt;/strong&gt;只作用于数据报的&lt;strong&gt;网络层字段&lt;/strong&gt;，而&lt;strong&gt;不&lt;/strong&gt;检查封装在该数据报运输层报文段的字段。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;接收端&lt;/strong&gt;：网络层从数据报中提取运输层报文段并将该报文段向上交给运输层。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;运输层和网络层的关系&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运输层和网络层的关系&#34;&gt;#&lt;/a&gt; 运输层和网络层的关系&lt;/h2&gt;
&lt;p&gt;网络层提供&lt;strong&gt;主机&lt;/strong&gt;间的逻辑通信，运输层为运行在&lt;strong&gt;不同主机上的进程&lt;/strong&gt;之间提供逻辑通信。&lt;/p&gt;
&lt;p&gt;在端系统中运输层协议将来自应用进程的报文&lt;strong&gt;移动到网络边缘&lt;/strong&gt;（即网络层）。&lt;/p&gt;
&lt;p&gt;计算机网络中可以安排多种运输层协议，每种协议为应用程序提供&lt;strong&gt;不同&lt;/strong&gt;的服务模型。&lt;/p&gt;
&lt;p&gt;运输层协议能够提供的服务尝尝&lt;strong&gt;受制于&lt;/strong&gt;底层网络层协议的服务模型。&lt;/p&gt;
&lt;p&gt;即使网络层不能保证运输层报文段的机密性，运输协议也能使用加密来确保应用程序报文不被入侵者读取。&lt;/p&gt;
&lt;h2 id=&#34;运输层概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运输层概述&#34;&gt;#&lt;/a&gt; 运输层概述&lt;/h2&gt;
&lt;p&gt;UDP（用户数据报协议）：提供不可靠、无连接的服务，只能提供数据交付和差错检查。&lt;/p&gt;
&lt;p&gt;TCP（传输控制协议）：提供可靠的、面向连接的服务。&lt;/p&gt;
&lt;h1 id=&#34;多路复用与多路分解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多路复用与多路分解&#34;&gt;#&lt;/a&gt; 多路复用与多路分解&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191132567.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;一个进程有一个或多个套接字（ip + 端口号），接收主机怎样将一个到达的运输层报文段定向到适当的套接字？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多路分解&lt;/strong&gt;：在接收端，运输层检查这些字段，标识出接收套接字，进而将报文段定向到该套接字。将运输层报文段中的数据交付到正确的套接字的工作称为多路分解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多路复用&lt;/strong&gt;：在源主机从不同套接字中收集数据块，并为每个数据块封装上首部信息从而生成报文段，然后将报文段传递到网络层，这所有的工作称为多路复用。&lt;/p&gt;
&lt;p&gt;运输层报文段的结构：&lt;/p&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111333486.png&#34; style=&#34;zoom: 50%;&#34; /&gt;
&lt;p&gt;应用程序的客户端让运输层自动地分配端口号，服务器端则分配一个特定的端口号。&lt;/p&gt;
&lt;p&gt;UDP 套接字由一个&lt;strong&gt;二元组&lt;/strong&gt;全面标识，该二元组包含一个目的 ip 和一个目的端口号。&lt;/p&gt;
&lt;p&gt;TCP 套接字由一个&lt;strong&gt;四元组&lt;/strong&gt;全面标识，该四元组包含源 ip 地址、源端口号、目的 ip 地址、目的端口号。&lt;/p&gt;
&lt;h1 id=&#34;udp和tcp对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#udp和tcp对比&#34;&gt;#&lt;/a&gt; UDP 和 TCP 对比&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191146630.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191148024.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191149976.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;无连接运输udp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#无连接运输udp&#34;&gt;#&lt;/a&gt; 无连接运输：UDP&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;UDP 优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关于发送什么数据以及何时发送的应用层控制更为精细（没有拥塞控制机制），按需随时发送。&lt;/li&gt;
&lt;li&gt;无需建立连接，不会引入建立连接的时延。&lt;/li&gt;
&lt;li&gt;无连接状态，TCP 维护连接状态需要维护包括接收和发送缓存、拥塞控制参数、序号与确认号的参数，而 UDP 不需要，因此当应用程序运行在 UDP 上，某些专门用于某种特定应用的服务器一般都能支持更多的活跃用户。&lt;/li&gt;
&lt;li&gt;首部开销小。UDP：8Byte，TCP：20Byte&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是因为 UDP 没有拥塞控制，所以如果网络进入拥塞状态，UDP 的&lt;strong&gt;高丢包率&lt;/strong&gt;会引起&lt;strong&gt; TCP&lt;/strong&gt; 的发送方大大&lt;strong&gt;减小&lt;/strong&gt;它们的&lt;strong&gt;速率&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;采用 UDP 的应用：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;远程文件服务器（NFS）&lt;/li&gt;
&lt;li&gt;流式多媒体&lt;/li&gt;
&lt;li&gt;因特网电话&lt;/li&gt;
&lt;li&gt;网络管理（SNMP）&lt;/li&gt;
&lt;li&gt;选路协议（RIP）&lt;/li&gt;
&lt;li&gt;域名解析（NDS）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;UDP 报文段：&lt;/strong&gt;&lt;/p&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111413149.jpg&#34; style=&#34;zoom: 25%;&#34; /&gt;
&lt;p&gt;UDP 首部有 4 个字段，每个字段由两个字节组成。&lt;/p&gt;
&lt;p&gt;长度：首部 + 数据。&lt;/p&gt;
&lt;p&gt;接收方通过检验和检查该报文段是否出现问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UDP 检验和&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将报文段切成 16bit 的数据&lt;/li&gt;
&lt;li&gt;对报文段中所有 16 比特字的和进行反码运算，求和时任何溢出都被回卷（进的位回到个位）&lt;/li&gt;
&lt;li&gt;因为原码 + 反码 = 全 1，所以检查是否为全 1 即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;可靠数据传输原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可靠数据传输原理&#34;&gt;#&lt;/a&gt; 可靠数据传输原理&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;rdt1.0~rdt3.0 都使用停等协议&lt;/p&gt;
&lt;p&gt;停等协议：发送方发送数据后等待接收方的响应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;经完全可靠的信道的可靠信息传输rdt10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#经完全可靠的信道的可靠信息传输rdt10&#34;&gt;#&lt;/a&gt; 经完全可靠的信道的可靠信息传输：rdt1.0&lt;/h2&gt;
&lt;p&gt;底层信道完全可靠。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111431075.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;有限状态机（FSM）&lt;/p&gt;
&lt;p&gt;因为底层信道完全可靠，所以接收方不需要反馈信息给发送方。&lt;/p&gt;
&lt;h2 id=&#34;经具有比特差错信道的可靠数据传输rdt2x&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#经具有比特差错信道的可靠数据传输rdt2x&#34;&gt;#&lt;/a&gt; 经具有比特差错信道的可靠数据传输：rdt2.x&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;2.x 解决了流控问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;底层信道分组中的比特可能受损。&lt;/p&gt;
&lt;h3 id=&#34;20-发送的数据受损&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#20-发送的数据受损&#34;&gt;#&lt;/a&gt; 2.0 发送的数据受损&lt;/h3&gt;
&lt;p&gt;采用自动重传请求协议（ARQ），进行差错检测、接收方反馈（ACK/NAK）、重传&lt;/p&gt;
&lt;p&gt;重传：使用缓冲区缓存已发出但未收到反馈的报文段&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111441861.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;21-acknak受损&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#21-acknak受损&#34;&gt;#&lt;/a&gt; 2.1 ACK/NAK 受损&lt;/h3&gt;
&lt;p&gt;发送方不知道接收方的情况，只能重传。&lt;/p&gt;
&lt;p&gt;但是可能导致接收方的重复接收，那么接收方怎么知道收到的分组是新的还是一次重传？于是引入分组编号。&lt;/p&gt;
&lt;p&gt;因为只有两种状态：新的分组或者重传，所以只需要编号 0 和 1。如果收到的分组和上一次收到的分组编号一致，说明是一次重传&lt;/p&gt;
&lt;h3 id=&#34;22-使用一个无nak的可靠数据传输协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#22-使用一个无nak的可靠数据传输协议&#34;&gt;#&lt;/a&gt; 2.2 使用一个无 NAK 的可靠数据传输协议&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;重复的 ACK = NAK&lt;/strong&gt;：不发送 NAK，而是对上次正确接收的分组发送一个 ACK；即当发送方接收到冗余的 ACK，就知道接收方没有正确接收到跟在被确认两次的分组后的分组。&lt;/p&gt;
&lt;h2 id=&#34;经具有比特差错的丢包信道的可靠数据传输rdt30&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#经具有比特差错的丢包信道的可靠数据传输rdt30&#34;&gt;#&lt;/a&gt; 经具有比特差错的丢包信道的可靠数据传输：rdt3.0&lt;/h2&gt;
&lt;p&gt;除了比特受损外，底层信道还会丢包。&lt;/p&gt;
&lt;p&gt;设置倒计数定时器，面对超时的数据进行重传。如果数据本身未丢失只是超时了，就会导致冗余数据分组，直接忽略即可。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111509160.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;流水线可靠数据传输协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流水线可靠数据传输协议&#34;&gt;#&lt;/a&gt; 流水线可靠数据传输协议&lt;/h2&gt;
&lt;p&gt;因为 rdt3.0 使用的是停等协议，所以效率较低，于是使用流水线技术。&lt;/p&gt;
&lt;p&gt;允许发送方发送多个分组并无需等待确认&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原本的两个序号（0,1）不够用，必须增大序号范围&lt;/li&gt;
&lt;li&gt;发送方最低限度应能缓存那些已发送但未被确认的分组&lt;/li&gt;
&lt;li&gt;接收方需缓存那些已经正确接收的分组&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111519103.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410111522171.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;当流水线技术中丢失一个分组，差错恢复有两种方法：&lt;strong&gt;回退 N 步&lt;/strong&gt;和&lt;strong&gt;选择重传&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;回退n步协议gbn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#回退n步协议gbn&#34;&gt;#&lt;/a&gt; 回退 N 步协议（GBN）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;累计确认 ACK (n)&lt;/strong&gt;：接收方对序号 n 之前包括 n 在内的所有分组进行确认&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;超时事件&lt;/strong&gt;：发送方重传所有已发送但未被确认的分组，发送方只使用一个定时器，如果收到一个 ACK 但是仍有已发送但未被确认的分组，则定时器被重新启动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分组失序&lt;/strong&gt;：接收方无缓存，所以直接丢弃，重发按序到达的最高序号后面的分组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;滑动窗口大小&lt;/strong&gt;：&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mstyle mathcolor=&#34;red&#34;&gt;&lt;mrow&gt;&lt;mtext&gt;发送端&lt;/mtext&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/msup&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mtext&gt;，接收端&lt;/mtext&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\color{red}{发送端\leq 2^{k}-1，接收端=1}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.985078em;vertical-align:-0.13597em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34; style=&#34;color:red;&#34;&gt;&lt;span class=&#34;mord cjk_fallback&#34; style=&#34;color:red;&#34;&gt;发&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34; style=&#34;color:red;&#34;&gt;送&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34; style=&#34;color:red;&#34;&gt;端&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;color:red;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34; style=&#34;color:red;&#34;&gt;≤&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;color:red;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34; style=&#34;color:red;&#34;&gt;&lt;span class=&#34;mord&#34; style=&#34;color:red;&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.849108em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34; style=&#34;color:red;&#34;&gt;&lt;span class=&#34;mord mtight&#34; style=&#34;color:red;&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;color:red;&#34;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;color:red;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34; style=&#34;color:red;&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;color:red;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34; style=&#34;color:red;&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34; style=&#34;color:red;&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34; style=&#34;color:red;&#34;&gt;接&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34; style=&#34;color:red;&#34;&gt;收&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34; style=&#34;color:red;&#34;&gt;端&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;color:red;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34; style=&#34;color:red;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;color:red;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34; style=&#34;color:red;&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191437793.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;选择重传sr&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#选择重传sr&#34;&gt;#&lt;/a&gt; 选择重传（SR）&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191444933.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191448175.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发送方&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从上层收到数据：如果下一个可用于该分组的序号在窗口内，则将数据打包并发送。&lt;/li&gt;
&lt;li&gt;超时（n）：为每个分组定义定时器；重传分组 n，重置定时器&lt;/li&gt;
&lt;li&gt;收到确认（n）在&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;[sendbase,sendbase+N-1]&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 范围内：标记分组 n 为已接收，如果 n 是发送方窗口基序号 sendbase，则将窗口基序号推到下一个未确认序号&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;接收方&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分组序号 n 在&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;[rcvbase,rcvbase+N-1]&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 范围内
&lt;ul&gt;
&lt;li&gt;发送 n 的确认 ACK（n）&lt;/li&gt;
&lt;li&gt;如果分组序号失序，将其缓存&lt;/li&gt;
&lt;li&gt;按序分组：将该分组以及以前的缓存的序号连续的分组一起交付给上层，将窗口前推到下一个未收到的分组。&lt;/li&gt;
&lt;li&gt;再次发送 n 的确认 ACK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他情况，忽略该分组&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接收方窗口 **&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\leq 2^{k-1}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7719400000000001em;vertical-align:-0.13597em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;≤&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8491079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8491079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;**，即窗口的长度必须小于等于序号空间大小的一半&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410120031874.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;面向连接的运输tcp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向连接的运输tcp&#34;&gt;#&lt;/a&gt; 面向连接的运输：TCP&lt;/h1&gt;
&lt;h2 id=&#34;tcp的特点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp的特点&#34;&gt;#&lt;/a&gt; TCP 的特点&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;面向连接&lt;/strong&gt;：必须相互发送某些预备报文段，以建立确保数据传输的参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全双工服务&lt;/strong&gt;：可双向同时传输数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;点对点连接&lt;/strong&gt;：仅能存在于两个端系统之间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三次握手&lt;/strong&gt;：客户端先发送一个特殊的 TCP 报文段，服务器用一个特殊的报文段进行响应，这两个报文段都不含应用层数据；最后客户端用第三个特殊报文段作为响应，第三个报文段可以承载有效数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可靠的字节流&lt;/strong&gt;：TCP 可以从缓存中取出并放入报文段中的数据数量受限于最大报文段长度 MSS，MSS 由本地发送主机发送的最大链路层帧长度【即最大运输单元 MTU】设置。MSS 要保证加上 TCP/IP 首部长度（通常是 40 字节）将适合单个链路层帧。&lt;/p&gt;
&lt;p&gt;注意：MSS 是指报文段中&lt;strong&gt;应用层数据的最大长度&lt;/strong&gt;，而&lt;strong&gt;不是&lt;/strong&gt;指包括首部的 TCP 报文段的最大长度。&lt;/p&gt;
&lt;h2 id=&#34;tcp报文段结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp报文段结构&#34;&gt;#&lt;/a&gt; TCP 报文段结构&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410141051586.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;源端口和目的端口&lt;/strong&gt;：各占 2 字节，端口是应用层和运输层的服务端口。运输层的复用和分解都需要通过端口实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;序号&lt;/strong&gt;：占 4 字节，TCP 连接中传输的数据流的每一个字节都有一个序号，序号字段的值指的是本报文段所发送的数据的第一个字节在整个报文字节流中的序号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;确认号&lt;/strong&gt;：占 4 字节，是期望收到对方的下一个报文段的数据段的第一个字节的序号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首部长度&lt;/strong&gt;：占 4bit，该字段指示了以 32bit 的字为单位的 TCP 首部长度。（通常选项字段为空，TCP 首部典型长度是 20 字节）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;保留字段&lt;/strong&gt;：占 6bit，保留为今后使用，但目前应置为 0。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;URG&lt;/strong&gt;：紧急比特，UGR=1 表明此报文段中有紧急数据，应尽快送达。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ACK&lt;/strong&gt;：确认 ACK，只有当 ACK=1 时确认号字段才有效；ACK=0 时，确认号无效。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PSH&lt;/strong&gt;：接收到 PSH=1 的报文段，就尽快交付给接收应用进程，而不再等到整个缓存都填满再向上交付。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RST&lt;/strong&gt;：当 RST=1 时，表名 TCP 连接中出现严重差错，必须释放连接，然后再重新建立运输链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SYN&lt;/strong&gt;：同步比特，SYN=1，这是一个连接请求或连接接收的报文。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FIN&lt;/strong&gt;：释放一个链接，当 FIN=1，此报文段的发送端的数据已经发送完毕，并要求释放运输链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;窗口&lt;/strong&gt;：占 2 字节，窗口字段用来控制对方发送的数据量，单位为字节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;检验和&lt;/strong&gt;：占 2 字节，检验范围包括首部和数据两部分，计算时要在 TCP 报文段的前面加上 12 字节的伪首部。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;紧急指针&lt;/strong&gt;：占 2 字节，指出本报文段中紧急数据的最后一个字节的序号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;填充&lt;/strong&gt;：为了使整个首部的长度是 4 字节的整数倍。&lt;/p&gt;
&lt;h2 id=&#34;估计往返时间rtt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#估计往返时间rtt&#34;&gt;#&lt;/a&gt; 估计往返时间 RTT&lt;/h2&gt;
&lt;p&gt;在任意时刻，仅为一个已发送但目前尚未被确定的报文段估计 SampleRTT，从而产生一个接近每个 RTT 的新的 SampleRTT。&lt;/p&gt;
&lt;p&gt;TCP 不为已被重传的报文段计算 SampleRTT。&lt;/p&gt;
&lt;p&gt;因为 RTT 有波动，所以利用加权平均值计算 EstimatedRTT&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0.875&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;0.125&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;EstimatedRTT=0.875*EstimatedRTT+0.125*SampleRTT
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;估算 SampleRTT 偏离 EstimatedRTT 的程度：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;β&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;β&lt;/mi&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;∣&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;∣&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;β&lt;/mi&gt;&lt;mtext&gt;推荐值为&lt;/mtext&gt;&lt;mn&gt;0.25&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;DevRTT=(1-\beta)\cdot DevRTT+\beta\cdot|SampleRTT-EstimatedRTT|,\beta推荐值为0.25
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05278em;&#34;&gt;β&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;⋅&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05278em;&#34;&gt;β&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;⋅&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;∣&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;∣&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05278em;&#34;&gt;β&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;推&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;荐&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;值&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;为&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;第一次计算时&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0.5&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;DevRTT=0.5*SampleRTT&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;TCP 中确定重传超时间隔的方法：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;TimeoutInterval=EstimatedRTT+4\cdot DevRTT
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;⋅&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;推荐初始的&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;TimeoutInterval = 1s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191411344.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现超时 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;RTO*2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;可靠数据传输&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可靠数据传输&#34;&gt;#&lt;/a&gt; 可靠数据传输&lt;/h2&gt;
&lt;p&gt;TCP 使用&lt;strong&gt;单一定时器&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;从上面应用程序收到数据 e：如果当前定时器没有运行，启动定时器并向 IP 传递报文段。&lt;/p&gt;
&lt;p&gt;定时器超时：重传具有最小序号但仍未应答的报文段并启动定时器。&lt;/p&gt;
&lt;p&gt;收到 ACK，具有 ACK 字段值 y：如果 &lt;code&gt;y &amp;gt; SendBase&lt;/code&gt; ，重置 &lt;code&gt;Sendbase = y&lt;/code&gt; ，如果仍有尚未确认的报文段，启动定时器。&lt;/p&gt;
&lt;p&gt;（SendBase 是最早未被确认的字节的序号，SendBase - 1 是指接收方已正确按序接收到的数据的最后一个字节的序号）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;超时间隔加倍&lt;/strong&gt;：每次超时时间发生，TCP 重传时都会将下一次的超时时间间隔设为先前的两倍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;快速重传&lt;/strong&gt;：当 TCP 接收方检测到了数据流中的一个间隔，就会不断重发它期望的这个 ACK，当冗余 ACK 的数量达到 3 的时候，就采用快速重传机制，在超时之前就重传该分组。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410141803966.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;流量控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流量控制&#34;&gt;#&lt;/a&gt; 流量控制&lt;/h2&gt;
&lt;p&gt;接收方在反馈时，将缓冲区剩余空间的大小填充在报文段首部的窗口字段中，通知发送方&lt;/p&gt;
&lt;p&gt;主机 A 向主机 B 发送文件，主机 B 接收缓存的大小是 RcvBuffer；主机 B 上的应用进程从缓存读出的数据流的最后一个字节的编号是 LastByteRead；从网络中到达的并且已放入主机 B 接收缓存中的数据流的最后一个字节的编号。&lt;/p&gt;
&lt;p&gt;接收窗口的大小：&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;rwnd = RcvBuffer - (LastByteRead - LastByteRead)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05017em;&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;为让发送方在接收方的缓存满了之后可以及时了解什么时候又有新的空间，发送方持续向接收方发送只有&lt;strong&gt;一字节&lt;/strong&gt;数据的报文段。&lt;/p&gt;
&lt;h2 id=&#34;tcp连接管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp连接管理&#34;&gt;#&lt;/a&gt; TCP 连接管理&lt;/h2&gt;
&lt;p&gt;3 次握手，4 次分手&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191517080.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191509839.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191514191.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;拥塞控制协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拥塞控制协议&#34;&gt;#&lt;/a&gt; 拥塞控制协议&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;拥塞控制方法&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网络辅助的拥塞控制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接网络反馈：&lt;strong&gt;路由器&lt;/strong&gt;以阻塞分组的形式通知发送方 “网络拥塞了”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;经由接收方的网络反馈：路由器标识从发送方流向接收方分组中的某个字段以指示拥塞的产生，由&lt;strong&gt;接收方&lt;/strong&gt;通知发送方 “网络拥塞了”（至少要经过一个完整的往返时间）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181313027.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;端到端拥塞控制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网络层不为拥塞控制提供任何帮助和支持&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端系统通过对网络行为（丢包或时延增加）的观测判断网络是否发生拥塞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前 TCP 采用该种方法（通过三个冗余的 ACK 实现）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tcp拥塞控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp拥塞控制&#34;&gt;#&lt;/a&gt; TCP 拥塞控制&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411191357221.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;reno算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#reno算法&#34;&gt;#&lt;/a&gt; Reno 算法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;加性增，乘性减（AIMD）&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;出现丢包事件后将当前 CongWin 大小&lt;strong&gt;减半&lt;/strong&gt;，可以大大减少注入到网络中的分组数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当&lt;strong&gt;没有丢包&lt;/strong&gt;事件发生了，每个 RTT 之后将 CongWin&lt;strong&gt; 增大 1 个 MSS&lt;/strong&gt;，使拥塞窗口缓慢增大，以防止网络过早出现拥塞&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;慢启动和拥塞避免&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#慢启动和拥塞避免&#34;&gt;#&lt;/a&gt; 慢启动和拥塞避免&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;建立连接时，CongWin = 1 MSS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MSS（最大报文段大小）&lt;/strong&gt; = 500 字节&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CongWin&lt;/strong&gt; = 1 MSS = 500 字节 = 500 * 8 比特&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RTT&lt;/strong&gt; = 200 毫秒&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt;初始速率&lt;/mtext&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mn&gt;500&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;/mrow&gt;&lt;mn&gt;200&lt;/mn&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;20&lt;/mn&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;初始速率=\frac{500 * 8}{200}=20kbps&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;初&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;始&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;速&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;率&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.190108em;vertical-align:-0.345em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.845108em;&#34;&gt;&lt;span style=&#34;top:-2.6550000000000002em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.394em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.345em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可用带宽 &amp;gt;&amp;gt; MSS/RTT&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;初始阶段以指数的速度增加发送速率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;连接初始阶段，以&lt;strong&gt;指数的速度&lt;/strong&gt;增加发送速率，直到发生一个丢包事件为止&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每收到一次确认则将 CongWin 的值&lt;strong&gt;增加一个 MSS&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181412990.png&#34; style=&#34;zoom: 50%;&#34; /&gt;
&lt;p&gt;对收到&lt;strong&gt; 3 个重复 ACK&lt;/strong&gt; 的反应&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将&lt;strong&gt; CongWin 减&lt;/strong&gt;为原来的&lt;strong&gt;一半&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线性增大&lt;/strong&gt;拥塞窗口&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对&lt;strong&gt;超时&lt;/strong&gt;事件的反应&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;门限值&lt;/strong&gt;设为当前 CongWin 的&lt;strong&gt;一半&lt;/strong&gt;（门限值初始值 65kB）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将&lt;strong&gt; CongWin&lt;/strong&gt; 设为&lt;strong&gt; 1 个 MSS&lt;/strong&gt; 大小；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;窗口以&lt;strong&gt;指数&lt;/strong&gt;速度增大&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;窗口增大到&lt;strong&gt;门限值&lt;/strong&gt;之后，再以&lt;strong&gt;线性&lt;/strong&gt;速度增大&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181421162.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当 TCP 连接进行初始化时，将&lt;strong&gt;拥塞窗口置为 1&lt;/strong&gt;。图中的窗口单位不使用字节而使用&lt;strong&gt;报文段&lt;/strong&gt;。慢开始门限的初始值设置为 16 个报文段，即 ssthresh = 16。&lt;/li&gt;
&lt;li&gt;发送端的发送窗口不能超过&lt;strong&gt;拥塞窗口 cwnd&lt;/strong&gt; 和&lt;strong&gt;接收端窗口 rwnd&lt;/strong&gt; 中的&lt;strong&gt;最小值&lt;/strong&gt;。我们假定接收端窗口足够大，因此现在发送窗口的数值等于拥塞窗口的数值。&lt;/li&gt;
&lt;li&gt;当拥塞窗口 cwnd 增长到&lt;strong&gt;慢开始门限值 ssthresh&lt;/strong&gt; 时（即当 cwnd = 16 时），就改为执行&lt;strong&gt;拥塞避免算法&lt;/strong&gt;，拥塞窗口按&lt;strong&gt;线性规律&lt;/strong&gt;增长。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;快速恢复&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#快速恢复&#34;&gt;#&lt;/a&gt; 快速恢复&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181425437.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3 个冗余 ACK 进入快速重传后&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每收到一个&lt;strong&gt;冗余&lt;/strong&gt; ACK：&lt;strong&gt;CongWin++&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直至收到一个&lt;strong&gt;新的&lt;/strong&gt; ACK：&lt;strong&gt;CongWin = 门限值&lt;/strong&gt;，重新进入拥塞避免；因为已经收到了三个冗余 ACK，所以实际 cwnd = 门限值 + 3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在进入&lt;strong&gt;快速恢复之后&lt;/strong&gt;及重新&lt;strong&gt;进入拥塞避免之间&lt;/strong&gt;，如果出现&lt;strong&gt;超时&lt;/strong&gt;现象，直接&lt;strong&gt;按&lt;/strong&gt;照前述&lt;strong&gt;超时事件&lt;/strong&gt;进行&lt;strong&gt;处理&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202410181430514.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;tcp吞吐量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp吞吐量&#34;&gt;#&lt;/a&gt; TCP 吞吐量&lt;/h2&gt;
&lt;p&gt;假定当丢包事件发生时，窗口大小为 W，此时吞吐量为 W/RTT&lt;/p&gt;
&lt;p&gt;丢包事件发生后，窗口大小减为 W/2, 吞吐量为 W/2RTT，因此平均吞吐量为: 0.75 W/RTT&lt;/p&gt;
&lt;p&gt;吞吐量是丢包率 (L) 的函数:&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mn&gt;1.22&lt;/mn&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;msqrt&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msqrt&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\frac{1.22\cdot MSS}{RTT\sqrt{L}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.410331em;vertical-align:-0.538em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.872331em;&#34;&gt;&lt;span style=&#34;top:-2.537397em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mord sqrt mtight&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.9322900000000001em;&#34;&gt;&lt;span class=&#34;svg-align&#34; style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mtight&#34; style=&#34;padding-left:0.833em;&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-2.89229em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;hide-tail mtight&#34; style=&#34;min-width:0.853em;height:1.08em;&#34;&gt;&lt;svg width=&#39;400em&#39; height=&#39;1.08em&#39; viewBox=&#39;0 0 400000 1080&#39; preserveAspectRatio=&#39;xMinYMin slice&#39;&gt;&lt;path d=&#39;M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z&#39;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.10770999999999997em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.394em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;⋅&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.10903em;&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.538em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;并行tcp连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#并行tcp连接&#34;&gt;#&lt;/a&gt; 并行 TCP 连接&lt;/h2&gt;
&lt;p&gt;考虑一段速率为 R 且支持 9 个在线客户 - 服务器应用的链路，每个应用使用一条 TCP 连接，如果一个新的应用加入进来&lt;/p&gt;
&lt;ul&gt;
&lt;li 10=&#34;&#34;&gt;如果新的应用也使用一条 TCP 连接，则每个应用得到差不多相同的传输速率\frac{R}&lt;/li&gt;
&lt;li&gt;如果新的应用使用了 11 个并行的 TCP 连接，那这个应用就会不公平的分到超过&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\frac{R}{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.217331em;vertical-align:-0.345em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.872331em;&#34;&gt;&lt;span style=&#34;top:-2.6550000000000002em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.394em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.345em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的带宽&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="计网" />
        <updated>2024-10-11T04:48:23.000Z</updated>
    </entry>
    <entry>
        <id>http://www.luckycyyyy.top/2024/09/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/</id>
        <title>计算机网络和因特网</title>
        <link rel="alternate" href="http://www.luckycyyyy.top/2024/09/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%BD%91-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;因特网的组成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#因特网的组成&#34;&gt;#&lt;/a&gt; 因特网的组成&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;端系统&lt;/strong&gt;（主机）：与因特网相连的计算机和其他设备称为端系统，端系统通过&lt;strong&gt;通信链路&lt;/strong&gt;和&lt;strong&gt;分组交换机&lt;/strong&gt;的网络连接到一起。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通信链路&lt;/strong&gt;由不同的物理媒介组成。&lt;strong&gt;物理媒介&lt;/strong&gt;包括同轴电缆、铜线、光纤、无线电频谱；链路的传输速率以 ** 比特 / 秒 (bit/s，或 bps)** 度量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分组交换机&lt;/strong&gt;常见的类型有&lt;strong&gt;路由器&lt;/strong&gt;和&lt;strong&gt;链路层交换机&lt;/strong&gt;，路由器常用于网络核心，链路交换机常用于接入网。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分组&lt;/strong&gt;：发送端将数据分段，并为每段加上首部字节。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;类比：分组–卡车，分组交换机–交叉口，通信链路–公路，端系统–建筑物&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;因特网服务供应商 ISP&lt;/strong&gt;：端系统通过 ISP 接入因特网，每个 ISP 自身就是一个由多台分组交换机和多段通信链路组成的网络。各 ISP 为端系统提供各种不同类型的网络接入，同时也为内容提供者提供因特网接入服务；因特网把各处的端系统互联，所以为端系统提供接入服务的 ISP 也必须互联。&lt;strong&gt;ISP 是因特网的硬件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;因特网标准&lt;/strong&gt;：由&lt;strong&gt;因特网工程任务组（IETF）&lt;strong&gt;研发，IETF 的标准文档称为&lt;/strong&gt;请求评论（RFC）&lt;/strong&gt;，RFC 定义了 TCP、IP、HTTP 等协议。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议&lt;/strong&gt;：定义了在两个或多个通信实体之间交换的报文格式和顺序，以报文的发送 / 接收或其他事件所采取的操作。&lt;/p&gt;
&lt;h1 id=&#34;网络边缘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络边缘&#34;&gt;#&lt;/a&gt; 网络边缘&lt;/h1&gt;
&lt;h2 id=&#34;主机端系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主机端系统&#34;&gt;#&lt;/a&gt; 主机（端系统）&lt;/h2&gt;
&lt;h2 id=&#34;接入网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#接入网&#34;&gt;#&lt;/a&gt; 接入网&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;将端系统物理连接到边缘路由器的网络&lt;/p&gt;
&lt;p&gt;相对骨干网络，接入网往往是传输速度的瓶颈&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;家庭接入网&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数字用户线（DSL）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;使用 DSL 时用户的本地&lt;strong&gt;电话公司&lt;/strong&gt;也是它的因特网服务供应商 (ISP)&lt;/li&gt;
&lt;li&gt;每个用户的&lt;strong&gt; DSL 调制解调器&lt;/strong&gt;使用现有的电话线与位于电话公司的本地中心局中的 ** 数字用户线接入复用器（DSLAM）** 交换数据&lt;/li&gt;
&lt;li&gt;用户一侧：使用一个分频器把到达家庭的数据信号和电话信号分隔开来，并将数据信号转发给 DSL 调制解调器&lt;/li&gt;
&lt;li&gt;本地中心局中：DSLAM 把数据和电话信号分隔开&lt;/li&gt;
&lt;li&gt;不对称接入，上行和下行速率不同&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410051553011.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;电缆因特网接入–混合光纤同轴（HFC）系统&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;因为该系统既应用了光纤也应用了同轴电缆，所以被称为混合光纤同轴系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用有线电视公司现有的有线电视基础设施&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用电缆调制解调器、电缆调制解调器端接系统（CMTS）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不对称接入&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410051557255.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;光纤到户（FTTH）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;有源光纤网络（AON）&lt;/strong&gt;，本质上是交换以太网&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无源光纤网络（PON）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;每个家庭有一个&lt;strong&gt;光纤网络端接器（ONT）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ONT 由专门的光纤连接到邻近的分配器，该分配器把一些家庭连接到一根共享光纤，该光纤再连接到本地电话和公司的中心局中的 ONT，该 ONT 提供光电信号的转换，经过本地电话公司路由器与因特网相连&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410051558362.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;5G&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;采用波束成形级数，数据以无线方式从供应商的基站发送到家中的调制解调器，由一个无线路由器与该调制解调器相连&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;企业接入&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;以太网&lt;/strong&gt;：使用双绞铜线与一台以太网交换机相连&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WiFi&lt;/strong&gt;：基于 IEEE 802.11 技术的无线 LAN 接入&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;物理媒介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#物理媒介&#34;&gt;#&lt;/a&gt; 物理媒介&lt;/h2&gt;
&lt;p&gt;分类：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导引型媒介&lt;/strong&gt;：光缆、双绞铜线、同轴电缆&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双绞铜线：最便宜且最常用的导引型传输媒介，无屏蔽双绞线（UTP）常用在建筑物内的计算机网络中，即局域网中&lt;/li&gt;
&lt;li&gt;同轴电缆：被用作共享媒介&lt;/li&gt;
&lt;li&gt;光纤：长途导引型传输媒介，特别是跨海链路&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;非导引型媒介&lt;/strong&gt;：在无线局域网、数字卫星频道中传播&lt;/p&gt;
&lt;p&gt;各网络接入技术使用的物理媒介：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HFC&lt;/strong&gt;：光缆和同轴电缆&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DSL、以太网&lt;/strong&gt;：双绞铜线&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;移动接入网&lt;/strong&gt;：无线电频谱&lt;/p&gt;
&lt;h1 id=&#34;网络核心&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络核心&#34;&gt;#&lt;/a&gt; 网络核心&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411171144576.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182101785.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;即由 互联 因特网端系统 的 &lt;strong&gt;分组交换机&lt;/strong&gt;和&lt;strong&gt;链路&lt;/strong&gt;构成的 &lt;strong&gt;网状网络&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;分组交换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组交换&#34;&gt;#&lt;/a&gt; 分组交换&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;分组：将长报文划分成较小的数据块，固定长度的数据段。每个分组都通过通信链路和分组交换机传送&lt;/li&gt;
&lt;li&gt;存储转发传输：仅当路由器已经接收完该分组的所有比特后，它才能开始向出链路传输该分组&lt;/li&gt;
&lt;li&gt;排队时延和分组丢失&lt;/li&gt;
&lt;li&gt;转发表和路由选择协议：在分组的首部包含目的地的 IP 地址；每台路由器有一个转发表，用于将目的地址映射为输出链路，路由选择协议用于自动设置这些转发表&lt;/li&gt;
&lt;li&gt;资源不预留，不预先确定分组的传输路径&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;时延的计算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#时延的计算&#34;&gt;#&lt;/a&gt; 时延的计算&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182032963.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果忽略传播时延：总时延&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;=(n+m-1)\  *&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.36687em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.66666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;∗&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 1 个分组的传输时延&lt;/p&gt;
&lt;h2 id=&#34;电路交换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#电路交换&#34;&gt;#&lt;/a&gt; 电路交换&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在端系统间通信会话期间预留了端系统间沿路径通信所需要的资源&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;频分复用（FDM）、时分复用（TDM）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FDM：在电话网络中频段的宽度通常为 4kHz，频段的宽度称为带宽。&lt;/li&gt;
&lt;li&gt;TDM：其时域被分割成帧，在每个帧中有 4 个时隙，&lt;strong&gt;一条电路的传输速率等于帧速率乘以一个时隙中的比特数量&lt;/strong&gt;。eg：如果链路每秒传输 8000 个帧，每个时隙由 8 个比特组成，则每条电路的传输速率是 64kbps。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例：从主机 A 到主机 B 发送一个 640 000bit 的文件需要多长时间？假如在该网络中所有链路使用具有 24 时隙的 TDM，比特速率为 1.536Mbps。同时假定在主机 A 开始传输文件之前，需要 500ms 创建一条端到端的电路，它需要多久发送文件？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每条链路的传输速率：1.536Mbps / 24 = 64kbps&lt;/p&gt;
&lt;p&gt;文件传输时间：640kb / 64kbps = 10s&lt;/p&gt;
&lt;p&gt;总时间：10s + 0.5s = 10.5s&lt;/p&gt;
&lt;p&gt;注意：该传输时间与链路数量无关：端到端电路不管是通过 1 条链路还是 100 条链路，传输时间都是 10s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;网络应用的通信模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络应用的通信模型&#34;&gt;#&lt;/a&gt; 网络应用的通信模型&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;客户 / 服务器模型（C/S）&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户：使用服务者&lt;/li&gt;
&lt;li&gt;服务器：提供服务者&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;对等模式（P2P）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所有主机同时承担服务器和客户机的双重身份&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;混合模式&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;分组交换网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组交换网&#34;&gt;#&lt;/a&gt; 分组交换网&lt;/h1&gt;
&lt;h2 id=&#34;分组交换网中的时延&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组交换网中的时延&#34;&gt;#&lt;/a&gt; 分组交换网中的时延&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;节点处理时延&lt;/li&gt;
&lt;li&gt;排队时延&lt;/li&gt;
&lt;li&gt;传输时延：将所有分组的比特推向链路所需要的时间&lt;/li&gt;
&lt;li&gt;传播时延：传播速率接近光速可近似忽略&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;计算机网络中的吞吐量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算机网络中的吞吐量&#34;&gt;#&lt;/a&gt; 计算机网络中的吞吐量&lt;/h2&gt;
&lt;p&gt;瞬时吞吐量：从主机 A 到主机 B 发文件，主机 B 收到该文件的速率就是瞬时吞吐量&lt;/p&gt;
&lt;p&gt;瓶颈链路的传输速率：主机 B 收到 F bit 的文件，以速率 Rs 到达路由器，以速率 Rc 离开路由器，那么&lt;strong&gt;吞吐量是&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;min(Rs,Rc)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;，传输文件的时间为&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;F/min(Rs,Rc)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;吞吐量不仅取决于沿着路径的传输速率，而且取决于干扰流量&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410060854081.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;协议层次及其服务模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#协议层次及其服务模型&#34;&gt;#&lt;/a&gt; 协议层次及其服务模型&lt;/h1&gt;
&lt;h2 id=&#34;因特网的协议栈&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#因特网的协议栈&#34;&gt;#&lt;/a&gt; 因特网的协议栈&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;应用层&lt;/li&gt;
&lt;li&gt;运输层&lt;/li&gt;
&lt;li&gt;网络层&lt;/li&gt;
&lt;li&gt;链路层&lt;/li&gt;
&lt;li&gt;物理层&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181902635.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182000235.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;isoosi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#isoosi&#34;&gt;#&lt;/a&gt; ISO/OSI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;应用层&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表示层&lt;/strong&gt; ：允许应用程序解释数据的含义，如加密、压缩、特定机器的数据描述方法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;会话层&lt;/strong&gt;：提供了数据交换的同步、定界、建立检查点和恢复的能力&lt;/li&gt;
&lt;li&gt;运输层&lt;/li&gt;
&lt;li&gt;网络层&lt;/li&gt;
&lt;li&gt;链路层&lt;/li&gt;
&lt;li&gt;物理层&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181959357.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;实体&lt;/strong&gt;：实体是任何可以&lt;strong&gt;发送和接收&lt;/strong&gt;信息的&lt;strong&gt;硬件和软件&lt;/strong&gt;进程，通常是一个特定的软件模型&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对等体&lt;/strong&gt;：不同机器上包含&lt;strong&gt;对应层的实体&lt;/strong&gt;称为对等体&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议&lt;/strong&gt;：控制两个&lt;strong&gt;对等实体&lt;/strong&gt;进行逻辑通信的规则的集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法，即数据和控制信息的结构或&lt;strong&gt;格式&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;语义，即需要发现何种控制信息，完成何种动作以及如何应答，定义收发双方需要&lt;strong&gt;完成的操作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;同步，即事件&lt;strong&gt;实现顺序&lt;/strong&gt;的详细说明&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;服务&lt;/strong&gt;：为保证上层对等体能够互相通信，&lt;strong&gt;下层向上层提供的功能&lt;/strong&gt;&lt;/p&gt;
&lt;p 协议是”水平“的，服务是“垂直”的=&#34;&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mstyle mathcolor=&#34;red&#34;&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\color{red}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202410060908367.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务原语&lt;/strong&gt;：网络相邻层之间进行交互的时候需要交换的一些&lt;strong&gt;必要指令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务访问点（SAP）&lt;/strong&gt;：同一系统中&lt;strong&gt;相邻层&lt;/strong&gt;的实体进行&lt;strong&gt;交互的地方&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181919274.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议数据单元（PDU）&lt;/strong&gt;：&lt;strong&gt;对等&lt;/strong&gt;层次上 传送数据的单位&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务数据单元（SDU）&lt;/strong&gt;：&lt;strong&gt;层与层&lt;/strong&gt;之间交换数据的单位&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411181921896.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网络体系结构&lt;/strong&gt;：层和协议的集合&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议栈&lt;/strong&gt;：一个特定的系统所使用的一组协议&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202411182037493.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
</content>
        <category term="计网" />
        <updated>2024-09-24T04:40:54.000Z</updated>
    </entry>
</feed>
