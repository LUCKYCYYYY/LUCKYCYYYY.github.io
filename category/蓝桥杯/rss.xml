<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
    <channel>
        <title>眨眼的小星玥 • Posts by &#34;蓝桥杯&#34; category</title>
        <link>http://www.luckycyyyy.top</link>
        <description>小星玥，要努力学习呀！</description>
        <language>zh-CN</language>
        <pubDate>Tue, 04 Mar 2025 11:35:12 +0800</pubDate>
        <lastBuildDate>Tue, 04 Mar 2025 11:35:12 +0800</lastBuildDate>
        
        <category>Linux</category>
        
        <category>半导体与激光</category>
        
        <category>原子核物理</category>
        
        <category>量子物理</category>
        
        <category>振动与波动</category>
        
        <category>波动光学</category>
        
        <category>实验</category>
        
        <category>电磁感应</category>
        
        <category>python</category>
        
        <category>稳恒磁场</category>
        
        <category>静电场</category>
        
        <category>物理实验</category>
        
        <category>AC自动机</category>
        
        <category>Dp</category>
        
        <category>algorithm</category>
        
        <category>memset</category>
        
        <category>sstream</category>
        
        <category>二分</category>
        
        <category>前缀和</category>
        
        <category>差分</category>
        
        <category>无穷级数</category>
        
        <category>图论</category>
        
        <category>并查集</category>
        
        <category>线段树</category>
        
        <category>数论</category>
        
        <category>贪心</category>
        
        <category>概率论</category>
        
        <category>离散数学上</category>
        
        <category>级数</category>
        
        <category>微分中值定理</category>
        
        <category>公式</category>
        
        <category>常微分方程</category>
        
        <category>极限</category>
        
        <category>常用定理</category>
        
        <category>积分</category>
        
        <category>汇编</category>
        
        <category>数据结构</category>
        
        <category>计网</category>
        
        <category>数据库</category>
        
        <category>Codeforces</category>
        
        <category>DP</category>
        
        <category>Nowcoder</category>
        
        <category>CSP</category>
        
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2025/03/04/algorithm/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%93%9D%E6%A1%A5%E6%9D%AF/algorithm--%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF/</guid>
            <title>第十四届蓝桥杯</title>
            <link>http://www.luckycyyyy.top/2025/03/04/algorithm/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%93%9D%E6%A1%A5%E6%9D%AF/algorithm--%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF/</link>
            
            <category>algorithm</category>
            
            <pubDate>Tue, 04 Mar 2025 11:35:12 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="填空题"><a class="markdownIt-Anchor" href="#填空题">#</a> 填空题</h1>
<h2 id="1-幸运数"><a class="markdownIt-Anchor" href="#1-幸运数">#</a> 1 幸运数</h2>
<p>暴力求解即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100000000</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">	  <span class="type">int</span> t = i, s = <span class="number">0</span>;</span><br><span class="line">	  <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line">	  <span class="keyword">while</span>(t)</span><br><span class="line">	  &#123;</span><br><span class="line">		a[s++] = t % <span class="number">10</span>;</span><br><span class="line">		t /= <span class="number">10</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">	  <span class="type">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>;</span><br><span class="line">	  <span class="keyword">if</span>(s % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">	  &#123;</span><br><span class="line">	  	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; s / <span class="number">2</span>; j++) ans1 += a[j];</span><br><span class="line">	  	<span class="keyword">for</span>(<span class="type">int</span> j = s / <span class="number">2</span>; j &lt; s; j++) ans2 += a[j];</span><br><span class="line">	  	<span class="keyword">if</span>(ans1 == ans2) res++;	</span><br><span class="line">	  &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; res;<span class="comment">//4430091</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-有奖问答"><a class="markdownIt-Anchor" href="#2-有奖问答">#</a> 2 有奖问答</h2>
<p>暴力 dfs</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> s)</span><span class="comment">//题数和分数 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//注意是先判断分数，再判断是否结束</span></span><br><span class="line">	<span class="keyword">if</span>(s == <span class="number">70</span>) ans++;</span><br><span class="line">	<span class="keyword">if</span>(i == <span class="number">30</span> || s == <span class="number">100</span>) <span class="keyword">return</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">dfs</span>(i + <span class="number">1</span>, s + <span class="number">10</span>);</span><br><span class="line">	<span class="built_in">dfs</span>(i + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	cout &lt;&lt; ans;<span class="comment">//8335366</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Dp</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">35</span>][<span class="number">150</span>];<span class="comment">//前i道题 分数为j 的方案数 </span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;<span class="comment">//初始化答0题得0分的方案数是1</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">100</span>; j += <span class="number">10</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(j &lt; <span class="number">100</span>) dp[i][<span class="number">0</span>] += dp[i - <span class="number">1</span>][j];<span class="comment">//第i道题答错，上一道题的分数不能是100 </span></span><br><span class="line">			<span class="keyword">if</span>(j &gt; <span class="number">0</span>) dp[i][j] += dp[i - <span class="number">1</span>][j - <span class="number">10</span>];<span class="comment">//第i道题答对，答完后不能是0分 </span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i++) res += dp[i][<span class="number">70</span>];</span><br><span class="line">	cout &lt;&lt; res;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="程序题"><a class="markdownIt-Anchor" href="#程序题">#</a> 程序题</h1>
<h2 id="3-平方差"><a class="markdownIt-Anchor" href="#3-平方差">#</a> 3 平方差</h2>
<p>高精度模版题</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">bigint</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	string value;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> bigint&amp; other)</span> <span class="type">const</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(value.<span class="built_in">length</span>() != other.value.<span class="built_in">length</span>()) <span class="keyword">return</span> value.<span class="built_in">length</span>() &lt; other.value.<span class="built_in">length</span>() ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">return</span> value.<span class="built_in">compare</span>(other.value);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">bigint</span>(<span class="type">const</span> string&amp; s = <span class="string">&quot;0&quot;</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		value = s;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//加法 </span></span><br><span class="line">	bigint <span class="keyword">operator</span>+(<span class="type">const</span> bigint&amp; other) <span class="type">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		string result;</span><br><span class="line">		<span class="type">int</span> carry = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> i = value.<span class="built_in">size</span>() - <span class="number">1</span>, j = other.value.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>(i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span> || carry &gt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> sum = carry;</span><br><span class="line">			<span class="keyword">if</span>(i &gt;= <span class="number">0</span>) sum += value[i--] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			<span class="keyword">if</span>(j &gt;= <span class="number">0</span>) sum += other.value[j--] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			carry = sum / <span class="number">10</span>;</span><br><span class="line">			result.<span class="built_in">push_back</span>(sum % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">reverse</span>(result.<span class="built_in">begin</span>(), result.<span class="built_in">end</span>());</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">bigint</span>(result);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//减法</span></span><br><span class="line">	bigint <span class="keyword">operator</span>-(<span class="type">const</span> bigint&amp; other) <span class="type">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		string result;</span><br><span class="line">		<span class="type">int</span> borrow = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> i = value.<span class="built_in">length</span>() - <span class="number">1</span>, j = other.value.<span class="built_in">length</span>() - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>(i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> diff = borrow;</span><br><span class="line">			<span class="keyword">if</span>(i &gt;= <span class="number">0</span>) diff += value[i--] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			<span class="keyword">if</span>(j &gt;= <span class="number">0</span>) diff -= other.value[j--] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			<span class="keyword">if</span>(diff &lt; <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				diff += <span class="number">10</span>;</span><br><span class="line">				borrow = <span class="number">-1</span>; </span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> borrow = <span class="number">0</span>;</span><br><span class="line">			result.<span class="built_in">push_back</span>(diff + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"> 		&#125;</span><br><span class="line"> 		<span class="built_in">reverse</span>(result.<span class="built_in">begin</span>(), result.<span class="built_in">end</span>());</span><br><span class="line"> 		result.<span class="built_in">erase</span>(<span class="number">0</span>, result.<span class="built_in">find_first_not_of</span>(<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line"> 		<span class="keyword">if</span>(result.<span class="built_in">empty</span>()) result = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"> 		<span class="keyword">return</span> <span class="built_in">bigint</span>(result);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//乘法</span></span><br><span class="line">	bigint <span class="keyword">operator</span>*(<span class="type">const</span> bigint&amp; other) <span class="type">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function">string <span class="title">result</span><span class="params">(value.length() + other.value.length(), <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = value.<span class="built_in">length</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> carry = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = other.value.<span class="built_in">length</span>() - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> temp = (value[i] - <span class="string">&#x27;0&#x27;</span>) * (other.value[j] - <span class="string">&#x27;0&#x27;</span>) + carry + (result[i + j + <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">				carry = temp / <span class="number">10</span>;</span><br><span class="line">				result[i + j + <span class="number">1</span>] = temp % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>;<span class="comment">//得到的数从1开始 </span></span><br><span class="line">			&#125;</span><br><span class="line">			result[i] += carry;<span class="comment">//进位 </span></span><br><span class="line">		&#125;</span><br><span class="line">		result.<span class="built_in">erase</span>(<span class="number">0</span>, result.<span class="built_in">find_first_not_of</span>(<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">		<span class="keyword">if</span>(result.<span class="built_in">empty</span>()) result = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">bigint</span>(result);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="comment">//除法</span></span><br><span class="line">	bigint <span class="keyword">operator</span>/(<span class="type">const</span> bigint&amp; other)<span class="type">const</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(other.value == <span class="string">&quot;0&quot;</span>)  <span class="keyword">throw</span> <span class="built_in">runtime_error</span>(<span class="string">&quot;Division by zero&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">cmp</span>(other) &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">bigint</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		string result;</span><br><span class="line">		<span class="function">bigint <span class="title">temp</span><span class="params">(<span class="string">&quot;0&quot;</span>)</span></span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">char</span> digit: value)</span><br><span class="line">		&#123;</span><br><span class="line">			temp = temp * <span class="built_in">bigint</span>(<span class="string">&quot;10&quot;</span>) + <span class="built_in">bigint</span>(<span class="built_in">string</span>(<span class="number">1</span>, digit));</span><br><span class="line">			<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">while</span>(temp.<span class="built_in">cmp</span>(other) &gt; <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				temp = temp - other;</span><br><span class="line">				count++;</span><br><span class="line">			&#125;</span><br><span class="line">			result.<span class="built_in">push_back</span>(count + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		result.<span class="built_in">erase</span>(<span class="number">0</span>, result.<span class="built_in">find_first_not_of</span>(<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">		<span class="keyword">if</span>(result.<span class="built_in">empty</span>()) result = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">bigint</span>(result);</span><br><span class="line"> 	&#125; </span><br><span class="line"> 	<span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; os, <span class="type">const</span> bigint&amp; num)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		os &lt;&lt; num.value;</span><br><span class="line"> 		<span class="keyword">return</span> os;</span><br><span class="line">	 &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	string a, b;</span><br><span class="line">	cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>) a.<span class="built_in">erase</span>(a.<span class="built_in">begin</span>());</span><br><span class="line">    <span class="keyword">if</span>(b[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>) b.<span class="built_in">erase</span>(b.<span class="built_in">begin</span>());</span><br><span class="line">	<span class="function">bigint <span class="title">x</span><span class="params">(a)</span>, <span class="title">y</span><span class="params">(b)</span></span>;</span><br><span class="line">	<span class="keyword">if</span>(a.<span class="built_in">length</span>() &gt; b.<span class="built_in">length</span>() || (a.<span class="built_in">length</span>() == b.<span class="built_in">length</span>() &amp;&amp; a.<span class="built_in">compare</span>(b) &gt; <span class="number">0</span>))</span><br><span class="line">		cout &lt;&lt; x * x - y * y &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">		cout &lt;&lt; <span class="string">&#x27;-&#x27;</span> &lt;&lt; y * y - x * x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-更小的数"><a class="markdownIt-Anchor" href="#4-更小的数">#</a> 4 更小的数</h2>
<p>双指针</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  string s;</span><br><span class="line">  cin &gt;&gt; s;</span><br><span class="line">  <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; s.<span class="built_in">size</span>(); j++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="type">int</span> l = i, r = j;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r &amp;&amp; s[l] == s[r])</span><br><span class="line">        &#123;</span><br><span class="line">            l++, r--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r || s[l] - <span class="string">&#x27;0&#x27;</span> &lt; s[r] - <span class="string">&#x27;0&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> ans++;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; ans;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-颜色平衡树"><a class="markdownIt-Anchor" href="#5-颜色平衡树">#</a> 5 颜色平衡树</h2>
<p>数据结构：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> color; <span class="comment">//该节点的颜色</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; child; <span class="comment">//该节点的孩子节点</span></span><br><span class="line">    unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; color_cnt;<span class="comment">//每种颜色的个数 </span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>启发式合并：每次将小的树合并到大的树上</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> color; </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; child; </span><br><span class="line">    unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; color_cnt; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Node node[N];</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启发式合并函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&amp; a, unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&amp; b)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.<span class="built_in">size</span>() &lt; b.<span class="built_in">size</span>()) <span class="built_in">swap</span>(a, b); </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; [color, cnt] : b) </span><br><span class="line">    &#123;</span><br><span class="line">        a[color] += cnt; </span><br><span class="line">    &#125;</span><br><span class="line">    b.<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DFS 遍历树</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> v : node[u].child) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">dfs</span>(v); </span><br><span class="line">        <span class="built_in">merge</span>(node[u].color_cnt, node[v].color_cnt); </span><br><span class="line">    &#125;</span><br><span class="line">    node[u].color_cnt[node[u].color]++; </span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; [color, num] : node[u].color_cnt) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (cnt == <span class="number">-1</span>) cnt = num; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cnt != num) </span><br><span class="line">        &#123; </span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag) ans++; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> color, parent;</span><br><span class="line">        cin &gt;&gt; color &gt;&gt; parent; </span><br><span class="line">        node[i].color = color;</span><br><span class="line">        <span class="keyword">if</span> (parent != <span class="number">0</span>) node[parent].child.<span class="built_in">push_back</span>(i); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-卖瓜"><a class="markdownIt-Anchor" href="#6-卖瓜">#</a> 6 卖瓜</h2>
<p>预处理：将瓜的重量 *<strong>2</strong></p>
<p>贪心：从最大的开始取</p>
<p>dfs 会 TLE，注意剪枝：</p>
<ol>
<li>当前枚举情况大于曾经的最好的值，退出</li>
<li>如果取的值大于需要的 m 或者 即使取出后面的所有仍然小于 m，退出</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(<span class="number">50</span>)</span>, <span class="title">last</span><span class="params">(<span class="number">50</span>)</span></span>;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">50</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> sum, <span class="type">int</span> i, <span class="type">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(cnt &gt;= ans) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(sum == m) ans = <span class="built_in">min</span>(ans, cnt);</span><br><span class="line">    <span class="keyword">if</span>(i &gt; n || sum &gt;= m || sum + last[i] &lt; m) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(sum + a[i], i + <span class="number">1</span>, cnt);<span class="comment">//取一整个</span></span><br><span class="line">    <span class="built_in">dfs</span>(sum + a[i] / <span class="number">2</span>, i + <span class="number">1</span>, cnt + <span class="number">1</span>);<span class="comment">//取一半</span></span><br><span class="line">    <span class="built_in">dfs</span>(sum, i + <span class="number">1</span>, cnt);<span class="comment">//不取</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">  m &lt;&lt;= <span class="number">1</span>;<span class="comment">//为了消除小数点的影响</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i], a[i] &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">begin</span>() + n + <span class="number">1</span>, <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">      last[i] = last[i + <span class="number">1</span>] + a[i];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span>(ans == <span class="number">50</span>) cout &lt;&lt; <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">else</span> cout &lt;&lt; ans;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="7-网络稳定性"><a class="markdownIt-Anchor" href="#7-网络稳定性">#</a> 7 网络稳定性</h2>
<p>Kruskal：找到最大生成树，因为要求找到稳定性最大的那条，而所有的两个节点一定可以通过这个最大生成树连接，且一定是最大的</p>
<p>LCA：找到两个节点到最近公共祖先的 “稳定性”，分别为 <code>a,b</code> ，则两个节点的稳定性为 <code>min(a, b)</code></p>
<p>利用树上倍增：维护 cost 数组，找到两个节点之间的最小权重边， <code>cost[u][i] = min(cost[u][i - 1], cost[dp[u][i - 1]][i - 1])</code></p>
<p>可能有多个连通块，dfs 需要从多个根节点开始；kruskal 不能以找到 <code>n - 1</code>  条边为结束依据，因为可能有多个连通块，需要将所有满足的边加进去</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> w;</span><br><span class="line">    <span class="type">int</span> to, pre;</span><br><span class="line">&#125;edge[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(Edge&amp; x, Edge&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x.w &gt; y.w;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;PII&gt; tree[N];</span><br><span class="line"><span class="type">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x != fa[x]) fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">	<span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">kruskal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> fx = <span class="built_in">find</span>(edge[i].pre), fy = <span class="built_in">find</span>(edge[i].to);</span><br><span class="line">		<span class="keyword">if</span>(fx != fy)</span><br><span class="line">		&#123;</span><br><span class="line">			fa[fx] = fy;</span><br><span class="line">			tree[edge[i].pre].<span class="built_in">push_back</span>(&#123;edge[i].to, edge[i].w&#125;);</span><br><span class="line">			tree[edge[i].to].<span class="built_in">push_back</span>(&#123;edge[i].pre, edge[i].w&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> dep[N], dp[N][<span class="number">20</span>], cost[N][<span class="number">20</span>], vis[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	vis[u] = <span class="number">1</span>;</span><br><span class="line">	dep[u] = dep[p] + <span class="number">1</span>;</span><br><span class="line">	dp[u][<span class="number">0</span>] = p;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">20</span>; i++) </span><br><span class="line">	&#123;</span><br><span class="line">		dp[u][i] = dp[dp[u][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">		cost[u][i] = <span class="built_in">min</span>(cost[u][i - <span class="number">1</span>], cost[dp[u][i - <span class="number">1</span>]][i - <span class="number">1</span>]);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> t: tree[u])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> child = t.first, c = t.second;</span><br><span class="line">		<span class="keyword">if</span>(child != p)</span><br><span class="line">		&#123;</span><br><span class="line">			cost[child][<span class="number">0</span>] = c;</span><br><span class="line">			<span class="built_in">dfs</span>(child, u);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">1e18</span>;</span><br><span class="line">	<span class="keyword">if</span>(dep[x] &lt; dep[y]) <span class="built_in">swap</span>(x, y);</span><br><span class="line">	<span class="type">int</span> d = dep[x] - dep[y];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) </span><br><span class="line">		<span class="keyword">if</span>((<span class="number">1</span> &lt;&lt; i) &amp; d) </span><br><span class="line">		&#123;</span><br><span class="line">			ans = <span class="built_in">min</span>(ans, cost[x][i]);</span><br><span class="line">			x = dp[x][i];</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">if</span>(x == y) <span class="keyword">return</span> ans;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">20</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(dp[x][i] != dp[y][i])</span><br><span class="line">		&#123;</span><br><span class="line">			ans = <span class="built_in">min</span>(ans, <span class="built_in">min</span>(cost[x][i], cost[y][i]));</span><br><span class="line">			x = dp[x][i], y = dp[y][i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ans = <span class="built_in">min</span>(ans, <span class="built_in">min</span>(cost[x][<span class="number">0</span>], cost[y][<span class="number">0</span>]));</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) cin &gt;&gt; edge[i].pre &gt;&gt; edge[i].to &gt;&gt; edge[i].w;</span><br><span class="line">	<span class="built_in">sort</span>(edge + <span class="number">1</span>, edge + <span class="number">1</span> + m, cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) fa[i] = i;</span><br><span class="line">	<span class="built_in">kruskal</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="keyword">if</span>(!vis[i]) <span class="built_in">dfs</span>(i, <span class="number">0</span>);<span class="comment">//可能有多个连通块	</span></span><br><span class="line">	<span class="keyword">while</span>(q--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x, y;</span><br><span class="line">		cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">		<span class="type">int</span> fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line">		<span class="keyword">if</span>(fx != fy) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> cout &lt;&lt; <span class="built_in">lca</span>(x, y) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="8-异或和之和"><a class="markdownIt-Anchor" href="#8-异或和之和">#</a> 8 异或和之和</h2>
<p>首先利用异或前缀和，将最后的结果用 <code>ans += a[j] ^ a[i - 1]</code>  得到，这样可以过 <code>8 / 10</code></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i], a[i] = a[i] ^ a[i - <span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += a[j] ^ a[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为只需要两个值的异或即 <code>a[j], a[i - 1]</code> ，那么就可以利用二进制，计算每一位 0 和 1 的个数。</p>
<p>对于第 <code>i</code>  位， <code>cnt[i][0]</code>  和 <code>cnt[i][1]</code>  分别表示 0 和 1 的个数，那么最后的结果这一位为 1 的情况有 <code>cnt[i][0] * cnt[i][1]</code>  个，而这一位对结果的贡献是 <code>1 &lt;&lt; i</code> ，所以最后的总贡献为 <code>cnt[i][0] * cnt[i][1] * (1 &lt;&lt; i)</code></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">25</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">	<span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="built_in">sizeof</span>(cnt));</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i], a[i] ^= a[i - <span class="number">1</span>];</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">25</span>; i++)<span class="comment">//位数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">            cnt[i][(a[j] &gt;&gt; i) &amp; <span class="number">1</span>]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">25</span>; i++)</span><br><span class="line">        ans += cnt[i][<span class="number">0</span>] * cnt[i][<span class="number">1</span>] * (<span class="number">1</span> &lt;&lt; i);</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="9-像素放置"><a class="markdownIt-Anchor" href="#9-像素放置">#</a> 9 像素放置</h2>
<p>dfs 暴力即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">15</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"><span class="type">int</span> ans[N][N], st[N][N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(g[x][y] == <span class="string">&#x27;_&#x27;</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; j++)</span><br><span class="line">			cnt += ans[i][j];</span><br><span class="line">	<span class="keyword">if</span>(cnt == g[x][y] - <span class="string">&#x27;0&#x27;</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ans[x][y] = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> ok = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x &gt; <span class="number">1</span> &amp;&amp; y &gt; <span class="number">1</span>) ok &amp;= <span class="built_in">check</span>(x - <span class="number">1</span>, y - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">if</span>(x &gt; <span class="number">1</span> &amp;&amp; y == m) ok &amp;= <span class="built_in">check</span>(x - <span class="number">1</span>, y);</span><br><span class="line">	<span class="keyword">if</span>(x  == n &amp;&amp; y &gt; <span class="number">1</span>) ok &amp;= <span class="built_in">check</span>(x, y - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">if</span>(x == n &amp;&amp; y == m) ok &amp;= <span class="built_in">check</span>(x, y);</span><br><span class="line">	<span class="keyword">if</span>(ok)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(x == n &amp;&amp; y == m)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">					cout &lt;&lt; ans[i][j];</span><br><span class="line">				cout &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(y == m) <span class="built_in">dfs</span>(x + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">dfs</span>(x, y + <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	ans[x][y] = <span class="number">1</span>;</span><br><span class="line">	ok = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x &gt; <span class="number">1</span> &amp;&amp; y &gt; <span class="number">1</span>) ok &amp;= <span class="built_in">check</span>(x - <span class="number">1</span>, y - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">if</span>(x &gt; <span class="number">1</span> &amp;&amp; y == m) ok &amp;= <span class="built_in">check</span>(x - <span class="number">1</span>, y);</span><br><span class="line">	<span class="keyword">if</span>(x  == n &amp;&amp; y &gt; <span class="number">1</span>) ok &amp;= <span class="built_in">check</span>(x, y - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">if</span>(x == n &amp;&amp; y == m) ok &amp;= <span class="built_in">check</span>(x, y);</span><br><span class="line">	<span class="keyword">if</span>(ok)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(x == n &amp;&amp; y == m)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">					cout &lt;&lt; ans[i][j];</span><br><span class="line">				cout &lt;&lt; endl;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(y == m) <span class="built_in">dfs</span>(x + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">dfs</span>(x, y + <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">			cin &gt;&gt; g[i][j];</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 ]]></description>
        </item>
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2025/02/02/algorithm/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%93%9D%E6%A1%A5%E6%9D%AF/algorithm-%E8%93%9D%E6%A1%A5%E6%9D%AF%E4%B9%A0%E9%A2%98%E6%B1%87%E6%80%BB/</guid>
            <title>蓝桥杯习题汇总</title>
            <link>http://www.luckycyyyy.top/2025/02/02/algorithm/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E8%93%9D%E6%A1%A5%E6%9D%AF/algorithm-%E8%93%9D%E6%A1%A5%E6%9D%AF%E4%B9%A0%E9%A2%98%E6%B1%87%E6%80%BB/</link>
            
            <category>algorithm</category>
            
            <pubDate>Sun, 02 Feb 2025 11:36:55 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="dfs"><a class="markdownIt-Anchor" href="#dfs">#</a> DFS</h1>
<h2 id="路径之谜"><a class="markdownIt-Anchor" href="#路径之谜">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy84OS9sZWFybmluZy8/cGFnZT0xJmFtcDtmaXJzdF9jYXRlZ29yeV9pZD0xJmFtcDtzZWNvbmRfY2F0ZWdvcnlfaWQ9Mw==">路径之谜 </span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">25</span>; </span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line">vector&lt;PII&gt; path;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> col[N], row[N], st[N][N], n;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(row[i] || col[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	row[x]--, col[y]--;</span><br><span class="line">	st[x][y] = <span class="number">1</span>;</span><br><span class="line">	path.<span class="built_in">push_back</span>(&#123;x, y&#125;);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(row[x] &lt; <span class="number">0</span> || col[y] &lt; <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(x == n - <span class="number">1</span> &amp;&amp; y == n - <span class="number">1</span> &amp;&amp; <span class="built_in">check</span>())<span class="comment">//结束条件 </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; path.<span class="built_in">size</span>(); i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> a = path[i].first, b = path[i].second;</span><br><span class="line">			cout &lt;&lt; a * n + b &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> a = x + dx[i], b = y + dy[i];</span><br><span class="line">		<span class="keyword">if</span>(a &lt; <span class="number">0</span> || b &lt; <span class="number">0</span> || a &gt;= n || b &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(st[a][b]) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">dfs</span>(a, b);</span><br><span class="line">		</span><br><span class="line">		st[a][b] = <span class="number">0</span>;</span><br><span class="line">		path.<span class="built_in">pop_back</span>();</span><br><span class="line">		row[a]++, col[b]++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; col[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; row[i];</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="正则问题"><a class="markdownIt-Anchor" href="#正则问题">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xMDYvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTM=">正则问题</span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(k &lt; s.<span class="built_in">size</span>())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(s[k] == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      k++;</span><br><span class="line">      res += <span class="built_in">dfs</span>();</span><br><span class="line">      k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(s[k] == <span class="string">&#x27;|&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      k++;</span><br><span class="line">      res = <span class="built_in">max</span>(res, <span class="built_in">dfs</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(s[k] == <span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      k++;</span><br><span class="line">      res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; s;</span><br><span class="line">  cout &lt;&lt; <span class="built_in">dfs</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="九宫幻方"><a class="markdownIt-Anchor" href="#九宫幻方">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xMDAvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTM=">九宫幻方 </span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; v[<span class="number">10</span>];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> a[N][N], st[N], ans[N][N];</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> test1 = a[<span class="number">1</span>][<span class="number">1</span>] + a[<span class="number">2</span>][<span class="number">2</span>] + a[<span class="number">3</span>][<span class="number">3</span>], test2 = a[<span class="number">1</span>][<span class="number">3</span>] + a[<span class="number">2</span>][<span class="number">2</span>] + a[<span class="number">3</span>][<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">if</span>(test1 != test2) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> trow = <span class="number">0</span>, tcol = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			trow += a[i][j], tcol += a[j][i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(trow != tcol || trow != test1) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t &gt; n) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">check</span>())</span><br><span class="line">		&#123;</span><br><span class="line">			cnt++;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">					ans[i][j] = a[i][j];</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> x = v[t].first, y = v[t].second;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(st[i]) <span class="keyword">continue</span>;</span><br><span class="line">		a[x][y] = i;</span><br><span class="line">		st[i] = <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">dfs</span>(t + <span class="number">1</span>);</span><br><span class="line">		st[i] = <span class="number">0</span>;</span><br><span class="line">		a[x][y] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; a[i][j];</span><br><span class="line">		<span class="keyword">if</span>(!a[i][j])</span><br><span class="line">		&#123;</span><br><span class="line">			v[++n] = <span class="built_in">make_pair</span>(i, j);</span><br><span class="line">		&#125;</span><br><span class="line">		st[a[i][j]] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span>(cnt == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">  	&#123;</span><br><span class="line">  		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			cout &lt;&lt; ans[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;	</span><br><span class="line">		cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	&#125;	</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">  	cout &lt;&lt; <span class="string">&quot;Too Many&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="玩具蛇"><a class="markdownIt-Anchor" href="#玩具蛇">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xMDIyL2xlYXJuaW5nLz9wYWdlPTEmYW1wO2ZpcnN0X2NhdGVnb3J5X2lkPTEmYW1wO3NlY29uZF9jYXRlZ29yeV9pZD0zJmFtcDtzb3J0PXBhc3NfcmF0ZSZhbXA7YXNjPTAmYW1wO3RhZ3M9REZTLEJGUywlRTQlQkElOEMlRTUlODglODYsJUU1JThGJThDJUU2JThDJTg3JUU5JTkyJTg4LCVFNSVCNyVBRSVFNSU4OCU4NiwlRTUlODklOEQlRTclQkMlODAlRTUlOTIlOEMmYW1wO3RhZ19yZWxhdGlvbj11bmlvbg==">玩具蛇 </span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> st[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> res;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(c == <span class="number">16</span>) </span><br><span class="line">  &#123;</span><br><span class="line">    res++;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  st[x][y] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> a = x + dx[i], b = y + dy[i];</span><br><span class="line">    <span class="keyword">if</span>(a &lt; <span class="number">1</span> || b &lt; <span class="number">1</span> || a &gt; <span class="number">4</span> || b &gt; <span class="number">4</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span>(st[a][b]) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(a, b, c + <span class="number">1</span>);</span><br><span class="line">    st[a][b] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">      <span class="built_in">dfs</span>(i, j, <span class="number">1</span>);<span class="comment">//从(i,j)开始</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; res;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="全排列"><a class="markdownIt-Anchor" href="#全排列">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvOTYv">全排列</span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> path[<span class="number">10</span>], vis[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u &gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cout &lt;&lt; path[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i] = <span class="number">1</span>;</span><br><span class="line">            path[u] = i;</span><br><span class="line">            <span class="built_in">dfs</span>(u + <span class="number">1</span>);</span><br><span class="line">            vis[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="bfs"><a class="markdownIt-Anchor" href="#bfs">#</a> BFS</h1>
<h2 id="青蛙跳杯子"><a class="markdownIt-Anchor" href="#青蛙跳杯子">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xMDIvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTM=">青蛙跳杯子</span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string s, e;</span><br><span class="line">queue&lt;string&gt; q;</span><br><span class="line">map&lt;string, <span class="type">int</span>&gt; m;</span><br><span class="line"><span class="type">int</span> d[<span class="number">6</span>] = &#123;<span class="number">-3</span>, <span class="number">-2</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	m[s] = <span class="number">0</span>;</span><br><span class="line">	q.<span class="built_in">push</span>(s);</span><br><span class="line">	<span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		string t = q.<span class="built_in">front</span>();</span><br><span class="line">		q.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="type">int</span> cnt = m[t];</span><br><span class="line">		<span class="type">int</span> x = t.<span class="built_in">find</span>(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> y = x + d[i];</span><br><span class="line">			<span class="keyword">if</span>(y &gt;= <span class="number">0</span> &amp;&amp; y &lt; n)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">swap</span>(t[x], t[y]);</span><br><span class="line">				<span class="keyword">if</span>(!m.<span class="built_in">count</span>(t))</span><br><span class="line">				&#123;</span><br><span class="line">					m[t] = cnt + <span class="number">1</span>;</span><br><span class="line">					<span class="keyword">if</span>(t == e) <span class="keyword">return</span> m[t];</span><br><span class="line">					q.<span class="built_in">push</span>(t);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="built_in">swap</span>(t[x], t[y]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin &gt;&gt; s &gt;&gt; e;</span><br><span class="line">	n = s.<span class="built_in">size</span>();</span><br><span class="line">	cout &lt;&lt; <span class="built_in">bfs</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="二分"><a class="markdownIt-Anchor" href="#二分">#</a> 二分</h1>
<h2 id="分巧克力"><a class="markdownIt-Anchor" href="#分巧克力">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy85OS9sZWFybmluZy8/cGFnZT0xJmFtcDtmaXJzdF9jYXRlZ29yeV9pZD0xJmFtcDtzZWNvbmRfY2F0ZWdvcnlfaWQ9Mw==">分巧克力 </span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">int</span> h[N], w[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x = h[i], y = w[i];</span><br><span class="line">		cnt += ((x / t) * (y / t));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(cnt &gt;= k) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; h[i] &gt;&gt; w[i];</span><br><span class="line">	<span class="type">int</span> l = <span class="number">1</span>, r = N, mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(l &lt; r)</span><br><span class="line">	&#123;</span><br><span class="line">		mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l = mid;</span><br><span class="line">		<span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; l;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="模拟"><a class="markdownIt-Anchor" href="#模拟">#</a> 模拟</h1>
<h2 id="赢球票"><a class="markdownIt-Anchor" href="#赢球票">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy85NC9sZWFybmluZy8/cGFnZT0xJmFtcDtmaXJzdF9jYXRlZ29yeV9pZD0xJmFtcDtzZWNvbmRfY2F0ZWdvcnlfaWQ9Mw==">赢球票 </span></h2>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n, a[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="comment">//从i开始遍历 </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">flag</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">		<span class="type">int</span> pos = i, num = <span class="number">1</span>, res = <span class="number">0</span>, count = <span class="number">0</span>;</span><br><span class="line">		<span class="comment">//pos表示开始的位置，num表示当前匹配的数字，res表示收入囊中的彩票数， count表示收入囊中的卡片数量 </span></span><br><span class="line">		<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(count == n || num &gt; n) <span class="keyword">break</span>;</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">if</span>(flag[pos])<span class="comment">//当前位置已经被收入囊中 </span></span><br><span class="line">			&#123;</span><br><span class="line">				pos++;</span><br><span class="line">				<span class="keyword">if</span>(pos == n + <span class="number">1</span>) pos = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(a[pos] == num)<span class="comment">//如果匹配 </span></span><br><span class="line">				&#123;</span><br><span class="line">          			flag[pos] = <span class="number">1</span>;</span><br><span class="line">					num = <span class="number">1</span>;</span><br><span class="line">					count++;</span><br><span class="line">					res += a[pos];</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					num++;</span><br><span class="line">				&#125;</span><br><span class="line">				pos++;</span><br><span class="line">				<span class="keyword">if</span>(pos == n + <span class="number">1</span>) pos = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(res &gt; ans) ans = res;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="交换瓶子"><a class="markdownIt-Anchor" href="#交换瓶子">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xMjYvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTMmYW1wO3RhZ3M9JUU3JTlDJTgxJUU4JUI1JTlCLCVFNyU5QyU4MSVFNiVBOCVBMSVFNiU4QiU5RiVFOCVCNSU5QiZhbXA7dGFnX3JlbGF0aW9uPXVuaW9u">交换瓶子</span></h2>
<p>在 <code>a[i] = x &amp;&amp; a[x] != i</code>  的情况下，需要找到一些 “圈”，每个圈中的数据可以通过交换回到原来的位置（即所需的数圈中都包含），而交换的次数应该是 <code>圈的大小-1</code></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e4</span> +<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], vis[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="type">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    cin &gt;&gt; a[i];</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i] == i) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="type">int</span> x = a[i];</span><br><span class="line">    <span class="keyword">if</span>(a[x] == i) ans1++;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">      <span class="type">int</span> t = a[i];</span><br><span class="line">      vis[i] = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span>(!vis[t])</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">while</span>(t != i)</span><br><span class="line">        &#123;</span><br><span class="line">            len++;</span><br><span class="line">            vis[t] = <span class="number">1</span>;</span><br><span class="line">            t = a[t];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      ans2 += len;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; ans1 / <span class="number">2</span> + ans2;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="蚂蚁感冒"><a class="markdownIt-Anchor" href="#蚂蚁感冒">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMTIxMy8=">蚂蚁感冒</span></h2>
<ol>
<li>将碰撞的蚂蚁掉头看做是两只蚂蚁不掉头，都向前走，只感染</li>
<li>分析得：对于初始感染蚂蚁 a，在 a 左边并向右走的蚂蚁可能感染，在 a 右边向左走的蚂蚁可能感染</li>
<li>特殊情况：a 左边无向右走的蚂蚁，a 右边无向左走的蚂蚁<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 不会感染别的蚂蚁</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">60</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="type">int</span> t = <span class="built_in">abs</span>(a[<span class="number">1</span>]), left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i]) &lt; t &amp;&amp; a[i] &gt; <span class="number">0</span>) left++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i]) &gt; t &amp;&amp; a[i] &lt; <span class="number">0</span>) right++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>((a[<span class="number">1</span>] &gt; <span class="number">0</span> &amp;&amp; right == <span class="number">0</span>) || (a[<span class="number">1</span>] &lt; <span class="number">0</span> &amp;&amp; left == <span class="number">0</span>)) cout &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; left + right + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="修改数组"><a class="markdownIt-Anchor" href="#修改数组">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xODUvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTMmYW1wO3RhZ3M9JUU1JUI5JUI2JUU2JTlGJUE1JUU5JTlCJTg2LCVFNiVBMCU5MSVFNyU4QSVCNiVFNiU5NSVCMCVFNyVCQiU4NCZhbXA7dGFnX3JlbGF0aW9uPXVuaW9u">修改数组</span></h2>
<p>优化： <code>a[i] += (b[a[i]] - 1)</code> ， <code>b</code>  数组储存的是经由 <code>i</code>  晋升的数的所有个数，像跳跃一样告诉你至少要跳多远，直到你跳到一个无人之境</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">while</span>(b[a[i]] != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      b[a[i]]++;</span><br><span class="line">      a[i] += (b[a[i]] - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    b[a[i]]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="连号区间数"><a class="markdownIt-Anchor" href="#连号区间数">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMTIxMi8=">连号区间数</span></h2>
<p>因为题目给定的数组是 <code>1 ~ n</code>  的排列</p>
<p>所以所有的数都是不重复的，如果一个区间的最大值 - 最小值和区间长度相同，就说明可以构成连续子区间</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nums</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; nums[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> maxn = <span class="number">-1</span>, minn = <span class="number">10010</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            maxn = <span class="built_in">max</span>(maxn, nums[j]);</span><br><span class="line">            minn = <span class="built_in">min</span>(minn, nums[j]);</span><br><span class="line">            <span class="comment">//cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; j &lt;&lt; &quot; &quot; &lt;&lt; minn &lt;&lt; &quot; &quot; &lt;&lt; maxn &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">            <span class="keyword">if</span>(maxn - minn + <span class="number">1</span> == j - i + <span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="前缀和"><a class="markdownIt-Anchor" href="#前缀和">#</a> 前缀和</h1>
<h2 id="k倍区间"><a class="markdownIt-Anchor" href="#k倍区间">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy85Ny9sZWFybmluZy8/cGFnZT0xJmFtcDtmaXJzdF9jYXRlZ29yeV9pZD0xJmFtcDtzZWNvbmRfY2F0ZWdvcnlfaWQ9Mw==">k 倍区间 </span></h2>
<p>优化：</p>
<p>用数组 <code>c[N]</code>  记录之前有相同余数的前缀和，因为除以 k 余数相同的两个数相减一定可以被 k 整除，所以用当前这个前缀和减去之前有相同余数的前缀和一定可以被 k 整除，所以 <code>res += c[a[i] % k]</code>  表示加上之前有相同余数的前缀和的数量</p>
<p>初始化 <code>c[0] = 1</code> ，因为余数为 0 的时候可以被 k 整除，如果不初始化为 0，那么遇到 <code>a[i]</code>  能被整除的情况相当于 <code>res += 0</code> ，错误</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, k, a[N], c[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">  <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">  c[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line">  &#123;</span><br><span class="line">    cin &gt;&gt; a[i], a[i] += a[i - <span class="number">1</span>];</span><br><span class="line">    count += c[a[i] % k];</span><br><span class="line">    c[a[i] % k]++;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  cout &lt;&lt; count;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="暴力"><a class="markdownIt-Anchor" href="#暴力">#</a> 暴力</h1>
<h2 id="日期问题"><a class="markdownIt-Anchor" href="#日期问题">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xMDMvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTM=">日期问题 </span></h2>
<ol>
<li>只有三种排序，不是随意排的</li>
<li>要按照从小到大排</li>
<li>注意闰年的情况，每个月月份天数不同</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> max_days[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month,<span class="type">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(month ==<span class="number">0</span> || month &gt; <span class="number">12</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(day == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(month != <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(day &gt; max_days[month]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> leap = (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span>) || (year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(day &gt; <span class="number">28</span> + leap) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> data=<span class="number">19600101</span>;data&lt;=<span class="number">20591231</span>;data++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> year = data / <span class="number">10000</span>, month = data % <span class="number">10000</span> / <span class="number">100</span>, day = data % <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(year,month,day))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(year % <span class="number">100</span> == a &amp;&amp; month == b &amp;&amp; day== c ||</span><br><span class="line">                month == a &amp;&amp; day == b &amp;&amp; year % <span class="number">100</span>== c ||</span><br><span class="line">                day == a &amp;&amp; month == b &amp;&amp; year % <span class="number">100</span>== c)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d-%02d-%02d\n&quot;</span>,year,month,day);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="递增三元组"><a class="markdownIt-Anchor" href="#递增三元组">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xNzIvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTMmYW1wO3RhZ3M9JUU2JTlBJUI0JUU1JThBJTlCJmFtcDt0YWdfcmVsYXRpb249dW5pb24=">递增三元组</span></h2>
<ol>
<li>遍历数组 b</li>
<li><code>upper_bound</code>  和 <code>lower_bound</code>  的使用</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N], c[N];</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; a[i];</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; b[i];</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; c[i];</span><br><span class="line">  <span class="built_in">sort</span>(a, a + n, <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;()), <span class="built_in">sort</span>(b, b + n), <span class="built_in">sort</span>(c, c + n);</span><br><span class="line">  <span class="comment">//遍历b</span></span><br><span class="line">  <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//在a中找比b小的数， a是从大到小排序</span></span><br><span class="line">    <span class="type">int</span> x = a + n - <span class="built_in">upper_bound</span>(a, a + n, b[i], <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">    <span class="comment">//在c中找比b大的数， c是从小到大排序</span></span><br><span class="line">    <span class="type">int</span> z = c + n - <span class="built_in">upper_bound</span>(c, c + n, b[i]);</span><br><span class="line">    ans += x * z;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; ans;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="fibonacci-数列与黄金分割"><a class="markdownIt-Anchor" href="#fibonacci-数列与黄金分割">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8yMDAvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTMmYW1wO3RhZ3M9JUU2JTlBJUI0JUU1JThBJTlCJmFtcDt0YWdfcmVsYXRpb249dW5pb24=">Fibonacci 数列与黄金分割 </span></h2>
<p>观察发现当 <code>n &gt; 20</code>  时，前 8 位小数相同</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  f[<span class="number">1</span>] = <span class="number">1</span>, f[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">  n = <span class="built_in">min</span>(n, <span class="number">20</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    f[i] = f[i - <span class="number">1</span>] + f[i - <span class="number">2</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%.8lf&quot;</span>, (<span class="type">double</span>)f[n] / f[n + <span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="交换次数"><a class="markdownIt-Anchor" href="#交换次数">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8yMjcvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTMmYW1wO3RhZ3M9JUU2JTlBJUI0JUU1JThBJTlCJmFtcDt0YWdfcmVsYXRpb249dW5pb24=">交换次数</span></h2>
<ol>
<li>枚举所有可能的顺序，计算达成该结果所需的交换次数，比较得到最小值</li>
<li>对于 <code>BAT</code> ，计算字符串 s 中 <code>B</code>  和 <code>T</code>  的总个数，以及已经在正确位置上的字母的个数，二者相加，减去可以 <code>BT</code>  互换的次数既是最终次数</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">(string c, string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//以最终结果为“BAT”为例</span></span><br><span class="line">  <span class="type">int</span> c0 = <span class="built_in">count</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), c[<span class="number">0</span>]);<span class="comment">//s中B的个数</span></span><br><span class="line">  <span class="type">int</span> c2 = <span class="built_in">count</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), c[<span class="number">2</span>]);<span class="comment">//s中T的个数</span></span><br><span class="line">  <span class="type">int</span> c00 = <span class="built_in">count</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">begin</span>() + c0, c[<span class="number">0</span>]);<span class="comment">//s中从开头到c0共出现了多少个B，即有多少个B不用动</span></span><br><span class="line">  <span class="type">int</span> c02 = <span class="built_in">count</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">begin</span>() + c0, c[<span class="number">2</span>]);</span><br><span class="line">  <span class="type">int</span> c22 = <span class="built_in">count</span>(s.<span class="built_in">end</span>() - c2, s.<span class="built_in">end</span>(), c[<span class="number">2</span>]);<span class="comment">//s从c2开始到结尾出现了多少个T，即有多少个T不用动</span></span><br><span class="line">  <span class="type">int</span> c20 = <span class="built_in">count</span>(s.<span class="built_in">end</span>() - c2, s.<span class="built_in">end</span>(), c[<span class="number">0</span>]);</span><br><span class="line">  <span class="keyword">return</span> (c0 - c00) + (c2 - c22) - <span class="built_in">min</span>(c02, c20);<span class="comment">//减去min(B区间中T的个数，T区间中B的个数)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  string s;</span><br><span class="line">  cin &gt;&gt; s;</span><br><span class="line">  <span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">  <span class="comment">//c是枚举最后可能的席位分布</span></span><br><span class="line">  ans = <span class="built_in">min</span>(ans, <span class="built_in">solve</span>(<span class="string">&quot;BAT&quot;</span>, s));</span><br><span class="line">  ans = <span class="built_in">min</span>(ans, <span class="built_in">solve</span>(<span class="string">&quot;BTA&quot;</span>, s));</span><br><span class="line">  ans = <span class="built_in">min</span>(ans, <span class="built_in">solve</span>(<span class="string">&quot;ABT&quot;</span>, s));</span><br><span class="line">  ans = <span class="built_in">min</span>(ans, <span class="built_in">solve</span>(<span class="string">&quot;ATB&quot;</span>, s));</span><br><span class="line">  ans = <span class="built_in">min</span>(ans, <span class="built_in">solve</span>(<span class="string">&quot;TAB&quot;</span>, s));</span><br><span class="line">  ans = <span class="built_in">min</span>(ans, <span class="built_in">solve</span>(<span class="string">&quot;TBA&quot;</span>, s));</span><br><span class="line">  cout &lt;&lt; ans;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="整理玩具"><a class="markdownIt-Anchor" href="#整理玩具">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8yMzIvbGVhcm5pbmcvP3BhZ2U9MSZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTMmYW1wO3RhZ3M9JUU2JTlBJUI0JUU1JThBJTlCJmFtcDt0YWdfcmVsYXRpb249dW5pb24mYW1wO3N0YXR1cz0x">整理玩具</span></h2>
<ol>
<li>利用 map， <code>map&lt;char, vector&lt;pair&lt;int, int&gt;&gt;&gt;</code>  记录每个数出现的坐标</li>
<li>计算每个矩形的大小是否等于该数的个数</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">11</span>;</span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  map&lt;<span class="type">char</span>,vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; &gt; mp;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">      mp[g[i][j]].<span class="built_in">push_back</span>(&#123;i, j&#125;);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> i : mp)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">auto</span> j = i.second;</span><br><span class="line">    <span class="type">int</span> x1 = <span class="number">11</span>, x2 = <span class="number">0</span>, y1 = <span class="number">11</span>, y2 = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> t: j)</span><br><span class="line">    &#123;</span><br><span class="line">      n++;</span><br><span class="line">      x1 = <span class="built_in">min</span>(x1, t.first);</span><br><span class="line">      x2 = <span class="built_in">max</span>(x2, t.first);</span><br><span class="line">      y1 = <span class="built_in">min</span>(y1, t.second);</span><br><span class="line">      y2 = <span class="built_in">max</span>(y2, t.second);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>((x2 - x1 + <span class="number">1</span>) * (y2 - y1 + <span class="number">1</span>) != n)</span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> t;</span><br><span class="line">  cin &gt;&gt; t;</span><br><span class="line">  <span class="keyword">while</span>(t--)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">memset</span>(g, <span class="number">0</span>, <span class="keyword">sizeof</span> g);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; g[i];</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="二进制"><a class="markdownIt-Anchor" href="#二进制">#</a> 二进制</h1>
<h2 id="1~n随机选取"><a class="markdownIt-Anchor" href="#1~n随机选取">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvOTQv">1~n 随机选取 </span></h2>
<p>利用<strong>二进制数</strong>进行状态压缩</p>
<p>题目要求的结果是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> 个，这<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> 个选择情况，对应于一个 n 位的 2 进制数的各个位取 0 或取 1 的情况</p>
<p>例如：n=3，即<br>
 <code>000 -&gt; \n 001 -&gt; 1 010 -&gt; 2 100 -&gt; 3 011 -&gt; 1 2 101 -&gt; 1 3 110 -&gt; 2 3 111 -&gt; 1 2 3</code></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u == n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(state &gt;&gt; i &amp; <span class="number">1</span>) cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">dfs</span>(u + <span class="number">1</span>, state); <span class="comment">//不选u</span></span><br><span class="line">    <span class="built_in">dfs</span>(u + <span class="number">1</span>, state | <span class="number">1</span> &lt;&lt; u); <span class="comment">//选u</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);<span class="comment">//因为u是从0开始的，所以上面递归时是1 &lt;&lt; u</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="机器人塔"><a class="markdownIt-Anchor" href="#机器人塔">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xMTgvbGVhcm5pbmcvP3BhZ2U9MiZhbXA7Zmlyc3RfY2F0ZWdvcnlfaWQ9MSZhbXA7c2Vjb25kX2NhdGVnb3J5X2lkPTM=">机器人塔 </span></h2>
<ol>
<li>利用<strong>二进制数</strong>枚举最后一层的情况</li>
<li>利用 <code>bitset</code>  能轻松算出某个数的二进制有多少个 1</li>
<li><code>x ^= (x &gt;&gt; 1)</code>  相当于和旁边的数异或，A 是 0，B 是 1，则 <code>A ^ A = A, B ^ B = A, A ^ B = B, B ^ A =  B</code>  与题目要求相同</li>
<li><code>x &amp;= (1 &lt;&lt; (i - 1)) - 1</code>  是为了只保留 <code>i - 1</code>  个数，例如 <code>i = 4</code>  则 <code>xx &amp;= 0111</code></li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> a, b, n;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> na = <span class="number">0</span>, nb = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)<span class="comment">//遍历层</span></span><br><span class="line">  &#123;</span><br><span class="line">    bitset&lt;32&gt; bs = x;</span><br><span class="line">    nb += bs.<span class="built_in">count</span>();<span class="comment">//i中1的个数</span></span><br><span class="line">    na += i - bs.<span class="built_in">count</span>();<span class="comment">//i是层数，也是个数</span></span><br><span class="line"></span><br><span class="line">    x ^= (x &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    x &amp;= (<span class="number">1</span> &lt;&lt; (i - <span class="number">1</span>)) - <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> na == a &amp;&amp; nb == b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">  n = <span class="built_in">sqrt</span>((a + b) * <span class="number">2</span>);</span><br><span class="line">  <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; n); i++)<span class="comment">//最后一层的状态</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(i)) ans++;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; ans;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="数论"><a class="markdownIt-Anchor" href="#数论">#</a> 数论</h1>
<h2 id="买不到的数目"><a class="markdownIt-Anchor" href="#买不到的数目">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMTIwNy8=">买不到的数目</span></h2>
<p>如果 <code>a</code>  和 <code>b</code>  为<strong>正整数</strong>且<strong>互质</strong>，那么 <code>ax + by</code>  不能构成的最大的数为 <code>(a - 1)(b - 1) - 1</code></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="type">int</span> k = a * b;</span><br><span class="line">    <span class="keyword">while</span>(k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = k;</span><br><span class="line">        <span class="keyword">while</span>(t % a != <span class="number">0</span> &amp;&amp; t &gt;= b) t -= b;</span><br><span class="line">        <span class="keyword">if</span>(t % a != <span class="number">0</span> &amp;&amp; k % a != <span class="number">0</span> &amp;&amp; k % b != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; k;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="树状数组"><a class="markdownIt-Anchor" href="#树状数组">#</a> 树状数组</h1>
<h2 id="排序"><a class="markdownIt-Anchor" href="#排序">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8yMzA1L2xlYXJuaW5nLz9wYWdlPTEmYW1wO2ZpcnN0X2NhdGVnb3J5X2lkPTEmYW1wO3NlY29uZF9jYXRlZ29yeV9pZD0zJmFtcDt0YWdzPSVFNiVBMCU5MSVFNyU4QSVCNiVFNiU5NSVCMCVFNyVCQiU4NCZhbXA7dGFnX3JlbGF0aW9uPXVuaW9u">排序</span></h2>
<p>因为 <code>a[i]</code>  可能大于 <code>n</code>  所以 <code>tree</code>  的大小应该初始化为 <code>N</code> ， <code>add</code>  函数中应该是 <code>x &lt;= N</code></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FenwickTree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt; tree;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">FenwickTree</span>(<span class="type">int</span> size) : <span class="built_in">n</span>(size), <span class="built_in">tree</span>(N, <span class="number">0</span>) &#123;&#125;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> k = <span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(x &lt;= N)</span><br><span class="line">		&#123;</span><br><span class="line">		  tree[x] += k;</span><br><span class="line">		  x += x &amp; -x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(x)</span><br><span class="line">		&#123;</span><br><span class="line">		  sum += tree[x];</span><br><span class="line">		  x -= x &amp; -x;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> sum;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">	<span class="function">FenwickTree <span class="title">ft</span><span class="params">(n)</span></span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i]; </span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		b[i] = ft.<span class="built_in">ask</span>(a[i] - <span class="number">1</span>);</span><br><span class="line">		ft.<span class="built_in">add</span>(a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		ans += a[i] * b[i];</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="拼十字"><a class="markdownIt-Anchor" href="#拼十字">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubGFucWlhby5jbi9wcm9ibGVtcy8xOTcyOC9sZWFybmluZy8/cGFnZT0xJmFtcDtmaXJzdF9jYXRlZ29yeV9pZD0xJmFtcDtzZWNvbmRfY2F0ZWdvcnlfaWQ9MyZhbXA7dGFncz0lRTYlQTAlOTElRTclOEElQjYlRTYlOTUlQjAlRTclQkIlODQmYW1wO3RhZ19yZWxhdGlvbj11bmlvbg==">拼十字</span></h2>
<ul>
<li>
<p>先按照长从大到小排序</p>
</li>
<li>
<p>因为树状数组要算的是在此之前宽度小于该宽度的个数，所以如果在同一个长度下，按照宽度从小到大排序就会把长度相同但是宽度更小的矩形算入答案中，与题目的长度严格大于不符，所以宽度也从大到小</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FenwickTree</span><span class="comment">//树状数组，tree的索引从1开始 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt; tree;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">FenwickTree</span>(<span class="type">int</span> size) : <span class="built_in">n</span>(size), <span class="built_in">tree</span>(size + <span class="number">2</span>, <span class="number">0</span>) &#123;&#125;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> k = <span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(x &lt;= n)</span><br><span class="line">		&#123;</span><br><span class="line">			tree[x] += k;</span><br><span class="line">			x += x &amp; -x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(x)</span><br><span class="line">		&#123;</span><br><span class="line">			sum += tree[x];</span><br><span class="line">			x -= x &amp; -x;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> sum;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">rectangle</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> l, w, c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(rectangle a, rectangle b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.l != b.l) <span class="keyword">return</span> a.l &gt; b.l;</span><br><span class="line">  <span class="keyword">return</span> a.w &gt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="function">vector&lt;rectangle&gt; <span class="title">re</span><span class="params">(n)</span></span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    cin &gt;&gt; re[i].l &gt;&gt; re[i].w &gt;&gt; re[i].c;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">sort</span>(re.<span class="built_in">begin</span>(), re.<span class="built_in">end</span>(), cmp);</span><br><span class="line">  <span class="function">FenwickTree <span class="title">R</span><span class="params">(N)</span></span>;</span><br><span class="line">  <span class="function">FenwickTree <span class="title">Y</span><span class="params">(N)</span></span>;</span><br><span class="line">  <span class="function">FenwickTree <span class="title">B</span><span class="params">(N)</span></span>;</span><br><span class="line">  <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(re[i].c == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      res = (res + Y.<span class="built_in">ask</span>(re[i].w - <span class="number">1</span>) + B.<span class="built_in">ask</span>(re[i].w - <span class="number">1</span>)) % mod;</span><br><span class="line">      R.<span class="built_in">add</span>(re[i].w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(re[i].c == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      res = (res + R.<span class="built_in">ask</span>(re[i].w - <span class="number">1</span>) + B.<span class="built_in">ask</span>(re[i].w - <span class="number">1</span>)) % mod;</span><br><span class="line">      Y.<span class="built_in">add</span>(re[i].w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      res = (res + R.<span class="built_in">ask</span>(re[i].w - <span class="number">1</span>) + Y.<span class="built_in">ask</span>(re[i].w - <span class="number">1</span>)) % mod;</span><br><span class="line">      B.<span class="built_in">add</span>(re[i].w);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; res;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一个简单的整数问题2"><a class="markdownIt-Anchor" href="#一个简单的整数问题2">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMjQ0Lw==">一个简单的整数问题 2</span></h2>
<p><strong>题解</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9zb2x1dGlvbi9jb250ZW50LzQ0ODg2Lw==">AcWing 243. 一个简单的整数问题 2 - AcWing</span></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], tr[N], tri[N], n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> t[], <span class="type">int</span> x, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = x; i &lt;= n; i += <span class="built_in">lowbit</span>(i)) t[i] += k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> t[], <span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = x; i ; i -= <span class="built_in">lowbit</span>(i)) sum += t[i];</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_sum</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">ask</span>(tr, x) * (x + <span class="number">1</span>) - <span class="built_in">ask</span>(tri, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        tr[i] = a[i] - a[i - <span class="number">1</span>], tri[i] = i * tr[i];</span><br><span class="line">    <span class="comment">//建立初始的树状数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">1</span>; x &lt;= n; x++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = x - <span class="number">1</span>; i &gt; x - <span class="built_in">lowbit</span>(x); i -= <span class="built_in">lowbit</span>(i)) </span><br><span class="line">            tr[x] += tr[i], tri[x] += tri[i];</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> op;</span><br><span class="line">        cin &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> l, r, x;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r &gt;&gt; x;</span><br><span class="line">            <span class="built_in">add</span>(tr, l, x), <span class="built_in">add</span>(tr, r + <span class="number">1</span>, -x);</span><br><span class="line">            <span class="built_in">add</span>(tri, l, l * x), <span class="built_in">add</span>(tri, r + <span class="number">1</span>, (r + <span class="number">1</span>) * -x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> l, r;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">get_sum</span>(r) - <span class="built_in">get_sum</span>(l - <span class="number">1</span>) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="小朋友排队"><a class="markdownIt-Anchor" href="#小朋友排队">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMTIxNy8=">小朋友排队</span></h2>
<p>逆序对换位置问题</p>
<ol>
<li>正向计算在该数之前大于该数的个数，逆向计算在该数之后小于该数的个数</li>
<li><code>nums[i] += 1</code>  树状数组从 1 开始，因为有的身高是 0 所以 + 1 保证 <code>&gt;=1</code></li>
<li><code>b[i] += ft_l.ask(nums[i] - 1)</code>  保证小于而非小于等于</li>
</ol>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FenwickTree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; tree;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">FenwickTree</span>(<span class="type">int</span> size): <span class="built_in">n</span>(size), <span class="built_in">tree</span>(size + <span class="number">2</span>, <span class="number">0</span>) &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> k = <span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(x &lt;= n)</span><br><span class="line">        &#123;</span><br><span class="line">            tree[x] += k;</span><br><span class="line">            x += x &amp; -x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x)</span><br><span class="line">        &#123;</span><br><span class="line">            res += tree[x];</span><br><span class="line">            x -= x &amp; -x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nums</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">FenwickTree <span class="title">ft_g</span><span class="params">(<span class="number">1000010</span>)</span>, <span class="title">ft_l</span><span class="params">(<span class="number">1000010</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; nums[i];</span><br><span class="line">        nums[i] += <span class="number">1</span>;</span><br><span class="line">        ft_g.<span class="built_in">add</span>(nums[i]);</span><br><span class="line">        b[i] += i - ft_g.<span class="built_in">ask</span>(nums[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        ft_l.<span class="built_in">add</span>(nums[i]);</span><br><span class="line">        b[i] += ft_l.<span class="built_in">ask</span>(nums[i] - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res += b[i] * (b[i] + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="dp"><a class="markdownIt-Anchor" href="#dp">#</a> Dp</h1>
<h2 id="地宫取宝"><a class="markdownIt-Anchor" href="#地宫取宝">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMTIxNC8=">地宫取宝</span></h2>
<p>四维 dp， <code>f[i][j][cnt][maxn]</code>  表示在 <code>(i, j)</code>  处所拿物品数是 <code>cnt</code> ，最大的物品价值是 <code>maxn</code>  时的状态数</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">15</span>, M = <span class="number">55</span>, mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="type">int</span> f[M][M][N][N], g[M][M];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; g[i][j], g[i][j]++;<span class="comment">//因为物品的价值可能是0，无法和没有取物品区分开所以++</span></span><br><span class="line">    </span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>][g[<span class="number">1</span>][<span class="number">1</span>]] = <span class="number">1</span>;<span class="comment">//取(1, 1)的物品</span></span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;<span class="comment">//不取(1, 1)的物品</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="comment">//横坐标</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)<span class="comment">//纵坐标</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> cnt = <span class="number">0</span>; cnt &lt;= k; cnt++)<span class="comment">//取的物品数目</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> maxn = <span class="number">0</span>; maxn &lt; N; maxn++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f[i][j][cnt][maxn])<span class="comment">//如果这种状态可以到</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//不取</span></span><br><span class="line">                        f[i][j + <span class="number">1</span>][cnt][maxn] = (f[i][j][cnt][maxn] + f[i][j + <span class="number">1</span>][cnt][maxn]) % mod;</span><br><span class="line">                        f[i + <span class="number">1</span>][j][cnt][maxn] = (f[i][j][cnt][maxn] + f[i + <span class="number">1</span>][j][cnt][maxn]) % mod;</span><br><span class="line">                        <span class="comment">//取</span></span><br><span class="line">                        <span class="keyword">if</span>(cnt + <span class="number">1</span> &lt;= k)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span>(g[i + <span class="number">1</span>][j] &gt; maxn) f[i + <span class="number">1</span>][j][cnt + <span class="number">1</span>][g[i + <span class="number">1</span>][j]] = (f[i][j][cnt][maxn] + f[i + <span class="number">1</span>][j][cnt + <span class="number">1</span>][g[i + <span class="number">1</span>][j]]) % mod;</span><br><span class="line">                            <span class="keyword">if</span>(g[i][j + <span class="number">1</span>] &gt; maxn) f[i][j + <span class="number">1</span>][cnt + <span class="number">1</span>][g[i][j + <span class="number">1</span>]] = (f[i][j][cnt][maxn] + f[i][j + <span class="number">1</span>][cnt + <span class="number">1</span>][g[i][j + <span class="number">1</span>]]) % mod;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) res = (res + f[n][m][k][i]) % mod;</span><br><span class="line">    cout &lt;&lt; res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="贪心"><a class="markdownIt-Anchor" href="#贪心">#</a> 贪心</h1>
<h2 id="蛋糕游戏"><a class="markdownIt-Anchor" href="#蛋糕游戏">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvNjEyMS8=">蛋糕游戏</span></h2>
<p>对于贝茜，每次选择中间的两个蛋糕就是最优的</p>
<p>对于艾尔茜，每次选择两边更大的那个是最优的</p>
<p>很显然，对于艾尔茜，我们可以枚举左右两边的蛋糕和，得到最大的就是艾尔茜的蛋糕总数</p>
<p>由题目可知，最终艾尔茜能拿到 $ n / 2 - 1$ 个蛋糕</p>
<p>Ta 可以选择在开头拿  <code>i</code>  个， 那么 Ta 可以在结尾拿  <code>n / 2 - 1 - i</code>  个</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;	cin &gt;&gt; n;</span><br><span class="line">	<span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i], a[i] += a[i - <span class="number">1</span>];</span><br><span class="line">	<span class="type">int</span> res = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i + n / <span class="number">2</span> + <span class="number">1</span> &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		res = <span class="built_in">max</span>(res, a[i] - a[<span class="number">0</span>] + a[n] - a[n / <span class="number">2</span> + i + <span class="number">1</span>]);</span><br><span class="line">	&#125; </span><br><span class="line">	cout &lt;&lt; a[n] - res &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; res &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t; cin &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span>(t--) <span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 ]]></description>
        </item>
        
    </channel>
</rss>