<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
    <channel>
        <title>眨眼的小星玥 • Posts by &#34;汇编&#34; tag</title>
        <link>http://www.luckycyyyy.top</link>
        <description>小星玥，要努力学习呀！</description>
        <language>zh-CN</language>
        <pubDate>Wed, 18 Dec 2024 15:27:15 +0800</pubDate>
        <lastBuildDate>Wed, 18 Dec 2024 15:27:15 +0800</lastBuildDate>
        
        <category>Linux</category>
        
        <category>半导体与激光</category>
        
        <category>原子核物理</category>
        
        <category>量子物理</category>
        
        <category>振动与波动</category>
        
        <category>波动光学</category>
        
        <category>实验</category>
        
        <category>电磁感应</category>
        
        <category>python</category>
        
        <category>稳恒磁场</category>
        
        <category>静电场</category>
        
        <category>物理实验</category>
        
        <category>AC自动机</category>
        
        <category>Dp</category>
        
        <category>algorithm</category>
        
        <category>memset</category>
        
        <category>sstream</category>
        
        <category>二分</category>
        
        <category>前缀和</category>
        
        <category>差分</category>
        
        <category>无穷级数</category>
        
        <category>图论</category>
        
        <category>并查集</category>
        
        <category>线段树</category>
        
        <category>数论</category>
        
        <category>贪心</category>
        
        <category>概率论</category>
        
        <category>离散数学上</category>
        
        <category>级数</category>
        
        <category>微分中值定理</category>
        
        <category>公式</category>
        
        <category>常微分方程</category>
        
        <category>极限</category>
        
        <category>常用定理</category>
        
        <category>积分</category>
        
        <category>汇编</category>
        
        <category>数据结构</category>
        
        <category>计网</category>
        
        <category>数据库</category>
        
        <category>Codeforces</category>
        
        <category>DP</category>
        
        <category>Nowcoder</category>
        
        <category>CSP</category>
        
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2024/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
            <title>汇编语言基础知识</title>
            <link>http://www.luckycyyyy.top/2024/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
            
            <category>汇编</category>
            
            <pubDate>Wed, 18 Dec 2024 15:27:15 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机系统概述"><a class="markdownIt-Anchor" href="#计算机系统概述">#</a> 计算机系统概述</h1>
<h2 id="硬件软件"><a class="markdownIt-Anchor" href="#硬件软件">#</a> 硬件 &amp; 软件</h2>
<p><strong>硬件</strong></p>
<ul>
<li>中央处理器 CPU
<ul>
<li>控制器、运算器、寄存器</li>
</ul>
</li>
<li>存储器（呈现的是存储器地址)
<ul>
<li>主存储器：RAM 和 ROM</li>
<li>辅助存储器：磁盘、光盘、U 盘</li>
</ul>
</li>
<li>外部设备（呈现出端口，即 I/O 地址）
<ul>
<li>输入和输出设备</li>
</ul>
</li>
</ul>
<p><strong>软件</strong></p>
<ul>
<li>系统软件</li>
<li>应用软件</li>
</ul>
<p><img data-src="//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkhtueoq2j30gr09it98.jpg" alt=""></p>
<h2 id="进制转换"><a class="markdownIt-Anchor" href="#进制转换">#</a> 进制转换</h2>
<p><strong>十进制小数转换成二或十六进制</strong>：小数部分分别乘以各自的基数，记录整数部分，直到小数部分为 0 为止</p>
<p><img data-src="//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhtzlmyhj30pm0rz3z5.jpg" alt=""></p>
<p><strong>二或十六进制数转换成十进制数</strong></p>
<p><img data-src="//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkhtrps6gj30lf0a7myg.jpg" alt=""></p>
<h2 id="ascii码"><a class="markdownIt-Anchor" href="#ascii码">#</a> ASCII 码</h2>
<p><strong>回车</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mi>D</mi><mi>H</mi></mrow><annotation encoding="application/x-tex">0DH</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
<p><strong>换行</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mi>A</mi><mi>H</mi></mrow><annotation encoding="application/x-tex">0AH</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
<p><strong>响铃</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>07</mn><mi>H</mi></mrow><annotation encoding="application/x-tex">07H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">7</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
<p><strong>数码<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>9</mn></mrow><annotation encoding="application/x-tex">0\sim 9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span></strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>30</mn><mi>H</mi><mo>∼</mo><mn>39</mn><mi>H</mi></mrow><annotation encoding="application/x-tex">30H\sim 39H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">9</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
<p><strong>大写字母<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∼</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\sim Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>41</mn><mi>H</mi><mo>∼</mo><mn>5</mn><mi>A</mi><mi>H</mi></mrow><annotation encoding="application/x-tex">41H\sim 5AH</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
<p><strong>小写字母<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∼</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">a\sim z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>61</mn><mi>H</mi><mo>∼</mo><mn>7</mn><mi>A</mi><mi>H</mi></mrow><annotation encoding="application/x-tex">61H\sim7AH</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
<p><strong>空格</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>20</mn><mi>H</mi></mrow><annotation encoding="application/x-tex">20H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
<h2 id="补码"><a class="markdownIt-Anchor" href="#补码">#</a> 补码</h2>
<p>8 位二进制补码：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>128</mn><mo>∼</mo><mo>+</mo><mn>127</mn></mrow><annotation encoding="application/x-tex">-128\sim +127</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mord">2</span><span class="mord">7</span></span></span></span></p>
<p>16 位二进制补码：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>15</mn></msup><mo>∼</mo><mo>+</mo><msup><mn>2</mn><mn>15</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^{15}\sim +2^{15}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>32 位二进制补码：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup><mo>∼</mo><mo>+</mo><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^{31}\sim +2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<h2 id="微机的软件"><a class="markdownIt-Anchor" href="#微机的软件">#</a> 微机的软件</h2>
<p>应用软件：</p>
<ul>
<li>文本编辑器</li>
<li>汇编程序</li>
<li>链接程序</li>
<li>调试程序</li>
<li>集成化开发环境</li>
</ul>
<h1 id="微型计算机系统"><a class="markdownIt-Anchor" href="#微型计算机系统">#</a> 微型计算机系统</h1>
<p><img data-src="//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkhs7r1btj30cl0bmaal.jpg" alt=""></p>
<p>主存空间分配：</p>
<p>整个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi>M</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">1MB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 主存空间从低位到高位地址可分为四个区域：</p>
<ol>
<li>基本 RAM 区（00000H-9FFFFH）：操作系统占掉一部分低地址，其他向用户程序开放</li>
<li>保留 RAM 区（A0000H-BFFFFH）：为系统安排的 “显示缓存存储区”</li>
<li>扩展 ROM 区（C0000H-DFFFFH）：用于为系统不直接提供支持的外设安排设备驱动程序</li>
<li>系统 ROM 区（E0000H-FFFFFH）：由系统占用，主要提供 ROM-BIOS 程序</li>
</ol>
<h1 id="8086微处理器"><a class="markdownIt-Anchor" href="#8086微处理器">#</a> 8086 微处理器</h1>
<h2 id="结构"><a class="markdownIt-Anchor" href="#结构">#</a> 结构</h2>
<ul>
<li>
<p>总线接口单元 BIU：负责读取指令和操作数</p>
</li>
<li>
<p>执行单元 EU：负责指令译码和执行</p>
</li>
</ul>
<p><img data-src="//dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzkhtllt31j30ju0e9myy.jpg" alt=""></p>
<ul>
<li>地址总线是 20 位，8086 有 1 兆存储单元，1 兆是 20 位</li>
<li>数据总线 16 位，8086 有 16 根数据线</li>
</ul>
<h2 id="寄存器"><a class="markdownIt-Anchor" href="#寄存器">#</a> 寄存器</h2>
<p><img data-src="//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhticjzfj30kf08yt9i.jpg" alt=""></p>
<p><strong>数据寄存器</strong></p>
<p><strong>AX</strong>：累加器，使用频度最高，用于算术、逻辑运算以及与外设传送信息等</p>
<p><strong>BX</strong>：基址寄存器，常用做存放存储器地址</p>
<p><strong>CX</strong>：计数器，作为循环和串操作等指令中的隐含计数器</p>
<p><strong>DX</strong>：数据寄存器，常用来存放双字长数据的高 16 位，或存放外设端口地址。</p>
<p><strong>变址寄存器</strong></p>
<p><strong>SI</strong>：源变址寄存器</p>
<p><strong>DI</strong>：目的变址寄存器</p>
<p><strong>指针寄存器</strong></p>
<p><strong>SP</strong> 为堆栈指针寄存器，指示栈顶的偏移地址，不能再用于其他目的，具有专用目的</p>
<p><strong>BP</strong> 为基址指针寄存器，表示数据在堆栈段中的基地址</p>
<p>SP 和 BP 寄存器与 SS 段寄存器联合使用确定堆栈段中的存储单元地址</p>
<p><strong>标志寄存器</strong></p>
<p><img data-src="//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkhtf1g7uj30jv02g0sy.jpg" alt=""></p>
<p><strong>指针指令 IP</strong></p>
<p>指令指针寄存器 IP，指示代码段中指令的偏移地址</p>
<p>它与代码段寄存器 CS 联用，确定下一条指令的物理地址</p>
<p>计算机通过 CS : IP 寄存器来控制指令序列的执行流程</p>
<p><strong>段寄存器</strong></p>
<p><strong>CS</strong>：指明代码段的起始地址</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>S</mi><mo>:</mo><mi>I</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">CS : IP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span> 取得下一条要执行的指令</li>
</ul>
<p><strong>SS</strong>：指明堆栈段的起始地址</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>S</mi><mo>:</mo><mi>S</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">SS:SP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span> 操作堆栈顶的数据</li>
</ul>
<p><strong>DS</strong>：指明数据段的起始地址</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>S</mi><mo>:</mo><mi>E</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">DS:EA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">A</span></span></span></span> 存取数据段中的数据</li>
</ul>
<p><strong>ES</strong>：指明附加段的起始地址</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>S</mi><mo>:</mo><mi>E</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">ES:EA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">A</span></span></span></span> 存取附加段中的数据</li>
<li>是串操作的目的区必须是附加段</li>
</ul>
<p><img data-src="//dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzkht7sualj30jo0ciabi.jpg" alt=""></p>
<h2 id="数据地址对齐"><a class="markdownIt-Anchor" href="#数据地址对齐">#</a> 数据地址对齐</h2>
<p>字单元安排在偶地址（xxx0B）、双字单元安排在 模 4 地 址（xx00B)</p>
<h2 id="存储器的分段管理"><a class="markdownIt-Anchor" href="#存储器的分段管理">#</a> 存储器的分段管理</h2>
<p>8086 CPU 有 20 条地址线但数据总线是 16 位</p>
<ul>
<li>
<p>最大可寻址空间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>20</mn></msup><mtext>＝</mtext><mn>1</mn><mi>M</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">2^{20}＝1MB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">＝</span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></p>
</li>
<li>
<p>物理地址范围从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>00000</mn><mi>H</mi><mtext>～</mtext><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>H</mi></mrow><annotation encoding="application/x-tex">00000H～FFFFFH</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord cjk_fallback">～</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p>
</li>
</ul>
<p>8086CPU 将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi>M</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">1MB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 空间分成许多逻辑段</p>
<ul>
<li>每个段最大限制为 64KB</li>
<li>段地址的低 4 位为 0000B</li>
</ul>
<p>这样，一个存储单元除具有一个唯一的物理地址外，还具有多个逻辑地址</p>
<p><strong>逻辑地址</strong>：段基地址：段内偏移地址</p>
<ul>
<li>段地址说明逻辑段在主存中的起始位置，8086 规定段地址必须是<strong>模 16 地址：xxxx0H</strong>，<strong>省略低 4 位 0000B</strong>，段地址就可以用 16 位数据表示，就能用 16 位段寄存器表达段地址</li>
<li>偏移地址说明主存单元距离段起始位置的偏移量，每段不超过 64KB，偏移地址也可用 16 位数据表示</li>
</ul>
<p>将逻辑地址中的段地址左移 4 位，加上偏移地址就得到 20 位物理地址</p>
<h2 id="1mb空间的分段"><a class="markdownIt-Anchor" href="#1mb空间的分段">#</a> 1MB 空间的分段</h2>
<p><img data-src="//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkht4l6brj30fx09ygmx.jpg" alt=""></p>
<h1 id="指令的组成"><a class="markdownIt-Anchor" href="#指令的组成">#</a> 指令的组成</h1>
<p><img data-src="//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkht0pkc8j30hl02574j.jpg" alt=""></p>
<p><strong>操作码</strong>：</p>
<p><img data-src="//dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzkhsxgw6gj30j103o74l.jpg" alt=""></p>
<p><img data-src="//dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzkhstzak5j30gr08hwfg.jpg" alt=""></p>
<h1 id="8086的寻址方式"><a class="markdownIt-Anchor" href="#8086的寻址方式">#</a> 8086 的寻址方式</h1>
<h2 id="立即数寻址"><a class="markdownIt-Anchor" href="#立即数寻址">#</a> 立即数寻址</h2>
<p>指令中的操作数存放在机器代码中</p>
<h2 id="寄存器寻址"><a class="markdownIt-Anchor" href="#寄存器寻址">#</a> 寄存器寻址</h2>
<p>操作数存放在 CPU 的内部寄存器 reg 中</p>
<h2 id="存储器寻址"><a class="markdownIt-Anchor" href="#存储器寻址">#</a> 存储器寻址</h2>
<p>指令中给出操作数的主存地址信息（偏移地址，称之为有效地址 EA），而段地址在默认的或用段超越前缀指定的段寄存器中</p>
<ol>
<li>
<p>直接寻址方式：指令中直接包含有效地址</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov ax, [2000H]</span><br><span class="line">;AX &lt;- DS:[2000H]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>寄存器间接寻址方式：有效地址存放在基址寄存器<strong> BX</strong> 或变址寄存器<strong> SI</strong>、<strong>DI</strong> 中</p>
</li>
<li>
<p>寄存器相对寻址方式：有效地址是寄存器内容与有符号 8 位或 16 位位移量之和，寄存器可以是<strong> BX/BP</strong> 或<strong> SI/DI</strong></p>
<ul>
<li>BX/SI/DI 寄存器默认在<strong> DS</strong>，对应 BP 寄存器默认在<strong> SS</strong></li>
</ul>
</li>
<li>
<p>基址变址寻址方式：有效地址由基址寄存器（BX 或 BP）的内容加上变址寄存器（SI 或 DI）的内容构成：</p>
<ul>
<li><strong>有效地址＝BX/BP＋SI/DI</strong></li>
<li>段地址对应 BX 基址寄存器默认是<strong> DS</strong>，对应 BP 基址寄存器默认是<strong> SS</strong>；可用段超越前缀</li>
</ul>
</li>
<li>
<p>相对基址变址寻址方式：有效地址是基址寄存器 (BX/BP)、变址寄存器 (SI/DI) 与一个 8 位或 16 位位移量之和：</p>
<ul>
<li><strong>有效地址＝BX/BP＋SI/DI＋8/16 位位移量</strong></li>
<li>段地址对应 BX 基址寄存器默认是<strong> DS</strong>，对应 BP 基址寄存器默认是<strong> SS</strong>；可用段超越前缀</li>
</ul>
</li>
</ol>
<h2 id="寻址的多种表示方式"><a class="markdownIt-Anchor" href="#寻址的多种表示方式">#</a> 寻址的多种表示方式</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MOV AX,[BX][SI] </span><br><span class="line">;MOV AX,[BX+SI]</span><br><span class="line"></span><br><span class="line">MOV AX,COUNT[SI] </span><br><span class="line">;MOV AX,[SI+COUNT]</span><br><span class="line"></span><br><span class="line">MOV AX,WNUM[BX][SI]</span><br><span class="line">;等同于 MOV AX,WNUM[BX+SI]</span><br><span class="line">;等同于 MOV AX,[BX+SI+WNUM]</span><br></pre></td></tr></table></figure>
<h2 id="数据寻址的组合"><a class="markdownIt-Anchor" href="#数据寻址的组合">#</a> 数据寻址的组合</h2>
<p><img data-src="//dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzkhsnol5fj30j60c3aab.jpg" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg, imm/reg/mem</span><br><span class="line">mem, imm/reg</span><br></pre></td></tr></table></figure>
 ]]></description>
        </item>
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2024/12/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--8086%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/</guid>
            <title>8086指令系统</title>
            <link>http://www.luckycyyyy.top/2024/12/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--8086%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/</link>
            
            <category>汇编</category>
            
            <pubDate>Wed, 11 Dec 2024 14:15:49 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据传送指令"><a class="markdownIt-Anchor" href="#数据传送指令">#</a> 数据传送指令</h1>
<h2 id="mov"><a class="markdownIt-Anchor" href="#mov">#</a> MOV</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mov reg/mem, imm</span><br><span class="line">mov reg/mem/seg, reg</span><br><span class="line">mov reg/seg, mem</span><br><span class="line">mov reg/mem, seg</span><br></pre></td></tr></table></figure>
<p>注：</p>
<ol>
<li>当 src 是 imm，dest 是 mem 时，二者之一必须用 ptr 指定类型</li>
<li>cs 不能做目的操作数，ip 既不能做源操作数也不能做目的操作数</li>
<li>两个操作数必须类型一致</li>
<li>立即数不能送<strong>直接寻址</strong>的内存单元</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">;错误</span><br><span class="line">mov word ptr[1000h],32A8h</span><br><span class="line">;修改</span><br><span class="line">mov ax, 21A8h</span><br><span class="line">mov [1000h], ax</span><br></pre></td></tr></table></figure>
<h2 id="xchg"><a class="markdownIt-Anchor" href="#xchg">#</a> XCHG</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xchg reg, reg/mem</span><br><span class="line">xchg reg/mem, reg</span><br></pre></td></tr></table></figure>
<h1 id="堆栈操作指令"><a class="markdownIt-Anchor" href="#堆栈操作指令">#</a> 堆栈操作指令</h1>
<p><strong>栈顶</strong>是地址<strong>较小</strong>的一端</p>
<p>修改 sp 值的操作：</p>
<ul>
<li>子程序调用 <code>CALL</code></li>
<li>子程序返回 <code>RET</code></li>
<li>中断调用 <code>INT</code></li>
<li>中断返回 <code>IRET</code></li>
</ul>
<h2 id="push"><a class="markdownIt-Anchor" href="#push">#</a> PUSH</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">push r16/m16/seg	;sp &lt;- sp - 2, ss:[sp] &lt;- r16/m16/seg</span><br></pre></td></tr></table></figure>
<h2 id="pop"><a class="markdownIt-Anchor" href="#pop">#</a> POP</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pop r16/m16/seg		;r16/m16/seg &lt;- ss:[sp], sp &lt;- sp + 2, </span><br></pre></td></tr></table></figure>
<h1 id="标志传送指令"><a class="markdownIt-Anchor" href="#标志传送指令">#</a> 标志传送指令</h1>
<h2 id="标志送ah指令lahf"><a class="markdownIt-Anchor" href="#标志送ah指令lahf">#</a> 标志送 AH 指令 LAHF</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lahf	;ah &lt;- flags的低字节</span><br></pre></td></tr></table></figure>
<h2 id="ah送标志指令sahf"><a class="markdownIt-Anchor" href="#ah送标志指令sahf">#</a> AH 送标志指令 SAHF</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sahf	;flags的低字节 &lt;- ah</span><br></pre></td></tr></table></figure>
<h2 id="标志进栈指令pushf"><a class="markdownIt-Anchor" href="#标志进栈指令pushf">#</a> 标志进栈指令 PUSHF</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pushf	;sp &lt;- sp - 2, ss:[sp] &lt;- flags</span><br></pre></td></tr></table></figure>
<h2 id="标志出栈指令popf"><a class="markdownIt-Anchor" href="#标志出栈指令popf">#</a> 标志出栈指令 POPF</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">popf	;flags &lt;- ss:[sp], sp &lt;- sp + 2</span><br></pre></td></tr></table></figure>
<h1 id="地址传送指令"><a class="markdownIt-Anchor" href="#地址传送指令">#</a> 地址传送指令</h1>
<h2 id="lea"><a class="markdownIt-Anchor" href="#lea">#</a> LEA</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lea r16, mem	;r16 &lt;- mem的有效地址</span><br></pre></td></tr></table></figure>
<h2 id="ldsles"><a class="markdownIt-Anchor" href="#ldsles">#</a> LDS&amp;LES</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lds r16, mem	;r16 &lt;- mem的有效地址， ds &lt;- mem + 2</span><br><span class="line">les r16, mem	;r16 &lt;- mem的有效地址， es &lt;- mem + 2</span><br></pre></td></tr></table></figure>
<h1 id="状态标志"><a class="markdownIt-Anchor" href="#状态标志">#</a> 状态标志</h1>
<p>进位标志 <code>CF</code>  是针对无符号整数运算设计的，反应无符号数据加减运算是否超出范围，是否需要利用进（借）位反映正确结果。</p>
<ul>
<li>N 位无符号数据加减运算结果范围是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><msup><mn>2</mn><mi>N</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\sim 2^N - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
</ul>
<p>溢出标志 <code>OF</code>  用于表示有符号整数进行加减运算的结果是否超出范围</p>
<ul>
<li>处理器默认采用补码的形式表示有符号整数，N 位补码表达的范围是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∼</mo><mo>+</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^{N-1}\sim+2^{N-1}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">标志</th>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">CF</td>
<td style="text-align:center">（加减）没有进位或借位</td>
<td style="text-align:center">（加减）有进位或借位</td>
</tr>
<tr>
<td style="text-align:center">OF</td>
<td style="text-align:center">未超出范围</td>
<td style="text-align:center">超出范围</td>
</tr>
<tr>
<td style="text-align:center">ZF</td>
<td style="text-align:center">运算结果不是 0</td>
<td style="text-align:center">运算结果是 0</td>
</tr>
<tr>
<td style="text-align:center">SF</td>
<td style="text-align:center">最高位为 0</td>
<td style="text-align:center">最高位为 1</td>
</tr>
<tr>
<td style="text-align:center">PF</td>
<td style="text-align:center">最低字节中 &quot;1&quot; 的个数是奇数</td>
<td style="text-align:center">最低字节中 &quot;1&quot; 的个数是偶数</td>
</tr>
<tr>
<td style="text-align:center">AF</td>
<td style="text-align:center">最低半字节无进位</td>
<td style="text-align:center">最低半字节有进位</td>
</tr>
</tbody>
</table>
<ul>
<li>只有当两个相同符号数相加（含两个不同符号数相减）而运算结果的符号与原数据符号相反时产生溢出</li>
</ul>
<p>符号值对应表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">标志</th>
<th style="text-align:center">1</th>
<th style="text-align:center">0</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">CF</td>
<td style="text-align:center">CY</td>
<td style="text-align:center">NC</td>
</tr>
<tr>
<td style="text-align:center">OF</td>
<td style="text-align:center">OV</td>
<td style="text-align:center">NV</td>
</tr>
<tr>
<td style="text-align:center">ZF</td>
<td style="text-align:center">ZR</td>
<td style="text-align:center">NZ</td>
</tr>
<tr>
<td style="text-align:center">SF</td>
<td style="text-align:center">NG</td>
<td style="text-align:center">PL</td>
</tr>
<tr>
<td style="text-align:center">PF</td>
<td style="text-align:center">PE</td>
<td style="text-align:center">PO</td>
</tr>
<tr>
<td style="text-align:center">AF</td>
<td style="text-align:center">AC</td>
<td style="text-align:center">NA</td>
</tr>
</tbody>
</table>
<p>运算指令对标志位的影响：</p>
<p>说明：0: 清零  ✓: 有影响  X: 无影响  -: 不确定 (未定义)</p>
<p><img data-src="//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhqs7f6kj30zn0hzad6.jpg" alt=""></p>
<h1 id="加法指令"><a class="markdownIt-Anchor" href="#加法指令">#</a> 加法指令</h1>
<h2 id="add"><a class="markdownIt-Anchor" href="#add">#</a> ADD</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add reg, imm/reg/mem	;reg &lt;- reg + imm/reg/mem</span><br><span class="line">add mem, imm/reg		;mem &lt;- mem + imm/reg</span><br></pre></td></tr></table></figure>
<h2 id="adc"><a class="markdownIt-Anchor" href="#adc">#</a> ADC</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adc reg, imm/reg/mem	;reg &lt;- reg + imm/reg/mem + CF</span><br><span class="line">adc mem, imm/reg		;mem &lt;- mem + imm/reg + CF</span><br></pre></td></tr></table></figure>
<h2 id="inc"><a class="markdownIt-Anchor" href="#inc">#</a> INC</h2>
<p><strong>不影响 CF</strong>，其他影响与 ADD 一致</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inc reg/mem		;reg/mem &lt;- reg/mem + 1</span><br></pre></td></tr></table></figure>
<h1 id="减法指令"><a class="markdownIt-Anchor" href="#减法指令">#</a> 减法指令</h1>
<h2 id="sub"><a class="markdownIt-Anchor" href="#sub">#</a> SUB</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sub reg, imm/reg/mem	;reg &lt;- reg - imm/reg/mem</span><br><span class="line">sub mem, imm/reg		;mem &lt;- mem - imm/reg</span><br></pre></td></tr></table></figure>
<h2 id="sbb"><a class="markdownIt-Anchor" href="#sbb">#</a> SBB</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sbb reg, imm/reg/mem	;reg &lt;- reg - imm/reg/mem - CF</span><br><span class="line">sbb mem, imm/reg		;mem &lt;- mem - imm/reg - CF</span><br></pre></td></tr></table></figure>
<h2 id="dec"><a class="markdownIt-Anchor" href="#dec">#</a> DEC</h2>
<p><strong>不影响 CF</strong>，其他影响与 SUB 一致</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dec reg/mem		;reg/mem &lt;- reg/mem - 1</span><br></pre></td></tr></table></figure>
<h2 id="neg"><a class="markdownIt-Anchor" href="#neg">#</a> NEG</h2>
<p>对标志位的影响和<strong>用零做减法</strong>的 SUB 指令一样</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">neg reg/mem		;reg/mem &lt;- 0 - reg/mem</span><br><span class="line">				;对操作数 取反+1</span><br></pre></td></tr></table></figure>
<h2 id="cmp"><a class="markdownIt-Anchor" href="#cmp">#</a> CMP</h2>
<p>对标志位的影响<strong>和 sub 指令一样</strong></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmp reg, imm/reg/mem	;reg - imm/reg/mem</span><br><span class="line">cmp mem, imm/reg		;mem - imm/reg</span><br></pre></td></tr></table></figure>
<h1 id="乘法指令"><a class="markdownIt-Anchor" href="#乘法指令">#</a> 乘法指令</h1>
<p>如果乘积的高一半（AH/DX）没有有效数值， <code>OF=CF=0</code> ，否则 <code>OF=CF=1</code></p>
<h2 id="mul"><a class="markdownIt-Anchor" href="#mul">#</a> MUL</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">;无符号</span><br><span class="line">mul r8/m8	;ax &lt;- al × r8/m8</span><br><span class="line">mul r16/m16	;dx.ax &lt;- ax × r16/m16</span><br></pre></td></tr></table></figure>
<h2 id="imul"><a class="markdownIt-Anchor" href="#imul">#</a> iMUL</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">;有符号</span><br><span class="line">imul r8/m8	;ax &lt;- al × r8/m8</span><br><span class="line">imul r16/m16;dx.ax &lt;- ax × r16/m16</span><br></pre></td></tr></table></figure>
<h1 id="除法指令"><a class="markdownIt-Anchor" href="#除法指令">#</a> 除法指令</h1>
<h2 id="div"><a class="markdownIt-Anchor" href="#div">#</a> DIV</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">;无符号</span><br><span class="line">div r8/m8	;al &lt;- ax ÷ r8/m8的商</span><br><span class="line">			;ah &lt;- ax ÷ r8/m8的余数</span><br><span class="line">div r16/m16	;ax &lt;- dx.ax ÷ r16/m16的商</span><br><span class="line">			;dx &lt;- dx.ax ÷ r16/m16的余数			</span><br></pre></td></tr></table></figure>
<h2 id="idiv"><a class="markdownIt-Anchor" href="#idiv">#</a> iDIV</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">;有符号	余数和被除数符号相同</span><br><span class="line">idiv r8/m8	;al &lt;- ax ÷ r8/m8的商</span><br><span class="line">			;ah &lt;- ax ÷ r8/m8的余数</span><br><span class="line">idiv r8/m8	;ax &lt;- dx.ax ÷ r16/m16的商</span><br><span class="line">			;dx &lt;- dx.ax ÷ r16/m16的余数</span><br></pre></td></tr></table></figure>
<h1 id="符号扩展指令"><a class="markdownIt-Anchor" href="#符号扩展指令">#</a> 符号扩展指令</h1>
<p><code>CBW</code>  将 <code>AL</code>  的最高有效位扩展到 <code>AH</code></p>
<p><code>CWD</code>  将 <code>AX</code>  的内容符号扩展形成 <code>DX</code></p>
<h1 id="逻辑运算指令"><a class="markdownIt-Anchor" href="#逻辑运算指令">#</a> 逻辑运算指令</h1>
<h2 id="andorxortest"><a class="markdownIt-Anchor" href="#andorxortest">#</a> AND/OR/XOR/TEST</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">逻辑运算助记符 reg, imm/reg/mem	;reg &lt;- reg 逻辑运算助记符 imm/reg/mem</span><br><span class="line">逻辑运算助记符 mem, imm/reg		;mem &lt;- mem 逻辑运算助记符 imm/reg</span><br></pre></td></tr></table></figure>
<p>所有双操作数的逻辑指令均设置 <code>CF=OF=0</code></p>
<h2 id="not"><a class="markdownIt-Anchor" href="#not">#</a> NOT</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">not reg/mem		;reg/mem &lt;- ~reg/mem</span><br></pre></td></tr></table></figure>
<h1 id="移位指令"><a class="markdownIt-Anchor" href="#移位指令">#</a> 移位指令</h1>
<p>根据移入的位设置进位标志 <code>CF</code> ，根据移位后的结果影响 <code>SF ZF PF</code> ；当进行 1 位移动，根据最高符号位有变化设置 <code>OF = 1</code> ，移位超过 1 位， <code>OF</code>  不确定</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shl reg/mem, 1/cl	;最低位补0， 最高位进入cf</span><br><span class="line">shr reg/mem, 1/cl	;最高位补0， 最低位进入cf</span><br><span class="line">sal reg/mem, 1/cl	;与shl相同</span><br><span class="line">sar reg/mem, 1/cl	;最高位不变， 最低位进入cf</span><br></pre></td></tr></table></figure>
<h1 id="循环移位指令"><a class="markdownIt-Anchor" href="#循环移位指令">#</a> 循环移位指令</h1>
<p>根据移入的位设置进位标志 <code>CF</code> ，不影响 <code>SF ZF PF AF</code> ，对 <code>OF</code>  与移位指令影响一致</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rol reg/mem, 1/cl	;不带进位循环左移</span><br><span class="line">ror reg/mem, 1/cl	;不带进位循环右移</span><br><span class="line">rcl reg/mem, 1/cl	;带进位循环左移</span><br><span class="line">rcr reg/mem, 1/cl	;带进位循环右移</span><br></pre></td></tr></table></figure>
<h1 id="控制转移指令"><a class="markdownIt-Anchor" href="#控制转移指令">#</a> 控制转移指令</h1>
<p>三种寻址方式：</p>
<p><img data-src="//dlink.host/wx1.sinaimg.cn/large/007CYURoly8hzkhqtjverj30zk09rt9f.jpg" alt=""></p>
<p>比较无符号数的高低：</p>
<table>
<thead>
<tr>
<th style="text-align:center">助记符</th>
<th style="text-align:center">标志位</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">JB/JNAE</td>
<td style="text-align:center">CF = 1</td>
<td style="text-align:center">低于 / 不高于等于转移</td>
</tr>
<tr>
<td style="text-align:center">JNB/JAE</td>
<td style="text-align:center">CF = 0</td>
<td style="text-align:center">不低于 / 高于等于转移</td>
</tr>
<tr>
<td style="text-align:center">JBE/JNA</td>
<td style="text-align:center">CF = 1 或 ZF = 1</td>
<td style="text-align:center">低于等于 / 不高于转移</td>
</tr>
<tr>
<td style="text-align:center">JNBE/JA</td>
<td style="text-align:center">CF = 0 且 ZF = 0</td>
<td style="text-align:center">不低于等于 / 高于</td>
</tr>
</tbody>
</table>
<p>比较有符号数的大小：</p>
<table>
<thead>
<tr>
<th style="text-align:center">助记符</th>
<th style="text-align:center">标志位</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">JL/JNGE</td>
<td style="text-align:center">SF<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">≠</mo></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span></span></span></span>OF</td>
<td style="text-align:center">小于 / 不大于等于转移</td>
</tr>
<tr>
<td style="text-align:center">JNL/JGE</td>
<td style="text-align:center">SF = OF</td>
<td style="text-align:center">不小于 / 大于等于转移</td>
</tr>
<tr>
<td style="text-align:center">JLE/JNG</td>
<td style="text-align:center">SF<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">≠</mo></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span></span></span></span>OF 或 ZF = 1</td>
<td style="text-align:center">小于等于 / 不大于转移</td>
</tr>
<tr>
<td style="text-align:center">JNLE/JG</td>
<td style="text-align:center">SF = OF 且 ZF = 0</td>
<td style="text-align:center">不小于等于 / 大于转移</td>
</tr>
</tbody>
</table>
<h1 id="子程序指令"><a class="markdownIt-Anchor" href="#子程序指令">#</a> 子程序指令</h1>
<h2 id="call"><a class="markdownIt-Anchor" href="#call">#</a> CALL</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">;段内调用</span><br><span class="line">call label		;sp &lt;- sp - 2, ss:[sp] &lt;- ip, ip &lt;- ip + 16</span><br><span class="line">call r16/m16	;sp &lt;- sp - 2, ss:[sp] &lt;- ip, ip &lt;- r16/m16</span><br><span class="line">;段间调用</span><br><span class="line">call far ptr label	;sp &lt;- sp - 2, ss:[sp] &lt;- cs, sp &lt;- sp - 2, ss:[sp] &lt;- ip</span><br><span class="line">					;ip &lt;- label的偏移地址, cs &lt;- label的段地址</span><br><span class="line">call far ptr mem	;sp &lt;- sp - 2, ss:[sp] &lt;- cs, sp &lt;- sp - 2, ss[sp] &lt;- ip</span><br><span class="line">					;ip &lt;- [mem], cs &lt;- [mem + 2]</span><br></pre></td></tr></table></figure>
<h2 id="ret"><a class="markdownIt-Anchor" href="#ret">#</a> RET</h2>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">;段内返回</span><br><span class="line">ret		;ip &lt;- ss:[sp], sp &lt;- sp + 2</span><br><span class="line">ret i16	;ip &lt;- ss:[sp], sp &lt;- sp + 2, sp &lt;- sp + i16</span><br><span class="line">;段间返回</span><br><span class="line">ret		;ip &lt;- ss:[sp], sp &lt;- sp + 2, cs &lt;- ss:[sp], sp &lt;- sp + 2</span><br><span class="line">ret i16	;ip &lt;- ss:[sp], sp &lt;- sp + 2, cs &lt;- ss:[sp], sp &lt;- sp + i16</span><br></pre></td></tr></table></figure>
<h1 id="中断指令"><a class="markdownIt-Anchor" href="#中断指令">#</a> 中断指令</h1>
<h2 id="外部中断"><a class="markdownIt-Anchor" href="#外部中断">#</a> 外部中断</h2>
<p>外部中断 —— 来自 CPU 之外的原因引起的中断，又可以分成</p>
<ul>
<li>可屏蔽中断：可由 CPU 的中断允许标志 IF 控制</li>
<li>非屏蔽中断：不受 CPU 的中断允许标志 IF 控制</li>
</ul>
<h2 id="内部中断"><a class="markdownIt-Anchor" href="#内部中断">#</a> 内部中断</h2>
<p>内部中断 ——CPU 内部<strong>执行程序</strong>引起的中断，又可以分成：</p>
<ul>
<li>除法错中断：执行除法指令，结果<strong>溢出</strong>产生的 0 号中断</li>
<li>指令中断：执行中断调用指令 <code>INT i8</code>  产生的 i8 号中断</li>
<li>断点中断：用于断点调试（ <code>INT 3</code> ）的 3 号中断</li>
<li>溢出中断：执行溢出中断指令 <code>into</code> ，OF＝1 产生的 4 号中断</li>
<li>单步中断：TF＝1 在每条指令执行后产生的 1 号中断</li>
</ul>
 ]]></description>
        </item>
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2024/12/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E6%A0%BC%E5%BC%8F/</guid>
            <title>汇编语言程序格式</title>
            <link>http://www.luckycyyyy.top/2024/12/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96--%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E6%A0%BC%E5%BC%8F/</link>
            
            <category>汇编</category>
            
            <pubDate>Tue, 03 Dec 2024 13:54:35 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="汇编语言程序开发"><a class="markdownIt-Anchor" href="#汇编语言程序开发">#</a> 汇编语言程序开发</h1>
<h2 id="汇编语言程序的语句格式"><a class="markdownIt-Anchor" href="#汇编语言程序的语句格式">#</a> 汇编语言程序的语句格式</h2>
<h3 id="硬指令执行性语句"><a class="markdownIt-Anchor" href="#硬指令执行性语句">#</a> 硬指令 &amp; 执行性语句</h3>
<p><strong>硬指令</strong>：使 CPU 产生动作、并在程序执行时才处理的语句</p>
<p><strong>执行性语句</strong> —— 表达处理器指令，由<strong>硬指令</strong>构成的语句，它通常对应一条机器指令，出现在程序的代码段中，格式：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">标号: 硬指令助记符 操作数,操作数,... ;注释</span><br><span class="line">again: mov dx, offset string	;获得string的偏移地址并保存到dx中</span><br></pre></td></tr></table></figure>
<p><strong>标号</strong>：反映硬指令位置（逻辑地址）的标识符，后跟一个冒号分隔</p>
<p><strong>硬指令助记符</strong>：可以是任何一条处理器指令</p>
<p>处理器指令的操作数可以是<strong>立即数、寄存器和存储单元</strong></p>
<h3 id="伪指令说明性语句"><a class="markdownIt-Anchor" href="#伪指令说明性语句">#</a> 伪指令 &amp; 说明性语句</h3>
<p><strong>伪指令</strong> —— 不产生 CPU 动作、在程序执行前由汇编程序处理的说明性语句。伪指令与具体的处理器类型无关，但与汇编程序的版本有关</p>
<p><strong>说明性语句</strong> —— 由<strong>伪指令</strong>构成的语句，它通常指示汇编程序如何汇编源程序：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">名字  伪指令助记符  参数,参数,...	;注释</span><br><span class="line">string db ‘Hello,world’			;使用db伪指令定义一个字符串，使用变量名string表达其在主存中的逻辑地址(包含段基地址和逻辑地址)、</span><br></pre></td></tr></table></figure>
<p><strong>名字</strong>：反映伪指令位置（逻辑地址）和属性的标识符，后跟空格或制表符分隔，没有冒号</p>
<p><strong>伪指令助记符</strong>：定义字节数据和字符串的 DB 就是伪指令</p>
<p>伪指令的参数可以是<strong>常数、变量名、表达式</strong>等，可以有多个，参数之间用<strong>逗号分隔</strong></p>
<h3 id="标识符"><a class="markdownIt-Anchor" href="#标识符">#</a> 标识符</h3>
<blockquote>
<p>标号和名字是符合汇编程序语法的用户自定义的标识符</p>
</blockquote>
<p>标识符一般最多由 31 个字母、数字及规定的特殊符号（如 _、$、?、@）组成，<strong>不能以数字开头</strong>。默认情况下，汇编程序不区别标识符中的字母大小写。一个程序中，每个标识符的定义是唯一的，还不能是汇编语言采用的保留字。</p>
<p><strong>保留字</strong>是汇编程序已经利用的标识符，主要有：</p>
<ul>
<li>硬指令助记符 —— 例如： <code>MOV、ADD</code></li>
<li>伪指令助记符 —— 例如： <code>DB、EQU</code></li>
<li>操作符 —— 例如： <code>OFFSET、PTR</code></li>
<li>寄存器名 —— 例如： <code>AX、CS</code></li>
</ul>
<h2 id="汇编语言源程序框架"><a class="markdownIt-Anchor" href="#汇编语言源程序框架">#</a> 汇编语言源程序框架</h2>
<h3 id="简化段定义的源程序框架"><a class="markdownIt-Anchor" href="#简化段定义的源程序框架">#</a> 简化段定义的源程序框架</h3>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.model small	;存储模型伪指令.model，small表示小型模式</span><br><span class="line">.stack			;堆栈段</span><br><span class="line">.data			;数据段</span><br><span class="line">...				;数据定义</span><br><span class="line">.code			;代码段</span><br><span class="line">.startup		;指明程序的起始执行点，同时为程序的数据段、代码段、堆栈段设置相应的段寄存器值</span><br><span class="line">...				;主程序代码</span><br><span class="line">.exit 0			;返回DOS操作系统</span><br><span class="line">...				;子程序代码</span><br><span class="line">end				;汇编结束</span><br></pre></td></tr></table></figure>
<p>MASM 5.0/5.1 不支持 <code>.startup</code>  和 <code>.exit</code> ，可修改如下</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.model small				;存储模型伪指令.model，small表示小型模式</span><br><span class="line">.stack						;堆栈段</span><br><span class="line">.data						;数据段</span><br><span class="line">...							;数据定义</span><br><span class="line">.code						;代码段</span><br><span class="line">;;.startup					;指明程序的起始执行点，同时为程序的数据段、代码段、堆栈段设置相应的段寄存器值</span><br><span class="line">start:	mov ax, @data</span><br><span class="line">		mov ds, ax</span><br><span class="line">...							;主程序代码</span><br><span class="line">;;.exit 0					;返回DOS操作系统</span><br><span class="line">		mov ax, 4c00h</span><br><span class="line">		int 21h</span><br><span class="line">...							;子程序代码</span><br><span class="line">;;end						;汇编结束</span><br><span class="line">end start</span><br></pre></td></tr></table></figure>
<h3 id="完整段定义的源程序框架"><a class="markdownIt-Anchor" href="#完整段定义的源程序框架">#</a> 完整段定义的源程序框架</h3>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">stack	segment stack</span><br><span class="line">   	 	...</span><br><span class="line">stack	ends</span><br><span class="line">data	segment</span><br><span class="line">    	...</span><br><span class="line">data 	ends</span><br><span class="line">code	segment &#x27;code&#x27;</span><br><span class="line">    	assume cs:code, ds:data, ss:stack	;assume将cs，ds，ss，依次指向名为code，data，stack逻辑段</span><br><span class="line">start:	mov ax, data</span><br><span class="line">    	mov ds, ax							;因为assume不为ds赋值，所以在start中为ds赋值data逻辑段</span><br><span class="line">    	...</span><br><span class="line">    	mov ax, 4c00h</span><br><span class="line">    	int 21h</span><br><span class="line">  		...</span><br><span class="line">code 	ends</span><br><span class="line">    	end start</span><br></pre></td></tr></table></figure>
<h2 id="汇编语言程序的开发过程"><a class="markdownIt-Anchor" href="#汇编语言程序的开发过程">#</a> 汇编语言程序的开发过程</h2>
<p><img data-src="https://raw.githubusercontent.com/LUCKYCYYYY/WEb_img2/main/img/202412031446517.jpg" alt=""></p>
<h2 id="dos系统功能调用"><a class="markdownIt-Anchor" href="#dos系统功能调用">#</a> DOS 系统功能调用</h2>
<blockquote>
<p>DOS 系统主要分配<strong> 21H 号</strong>中断，用于程序员调用 DOS 操作系统工功能</p>
<ul>
<li>中断调用指令： <code>INT 21H</code></li>
</ul>
<p>在 AH 寄存器中设置系统功能调用号</p>
</blockquote>
<h3 id="字符输入01h"><a class="markdownIt-Anchor" href="#字符输入01h">#</a> 字符输入 (01H)</h3>
<p>从键盘读入一个字符，并使用<strong> AL 保存出口参数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV AH,01H</span><br><span class="line">INT 21H   ;读入的字符在AL寄存器</span><br></pre></td></tr></table></figure>
<h3 id="字符输出02h"><a class="markdownIt-Anchor" href="#字符输出02h">#</a> 字符输出 (02H)</h3>
<p>在显示器当前光标位置显示给定字符，且光标右移一个字符位置，使用<strong> DL 作为入口参数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MOV AH,02H</span><br><span class="line">MOV DL,字符  ;ASCII码，例如：41H</span><br><span class="line">;MOV    DL,41H  ;输出‘A’，方法一</span><br><span class="line">;MOV    DL,&#x27;A&#x27;  ;输出‘A’，方法二</span><br><span class="line">INT 21H</span><br></pre></td></tr></table></figure>
<h3 id="字符串输入0ah"><a class="markdownIt-Anchor" href="#字符串输入0ah">#</a> 字符串输入 (0AH)</h3>
<p>需要事先在主存设置用于保存输入字符串的缓冲区，使用 ** <code>DS：DX</code>  作为出口参数 **</p>
<ul>
<li>缓冲区的第 1 字节填入最多<strong>欲</strong>接收的字符个数（<strong>包括回车符</strong>）</li>
<li>缓冲区的第 2 个字节存放<strong>实际</strong>输入的字符个数（<strong>不包括回车符</strong>）</li>
<li>从第 3 个字节开始存放输入的字符串，实际输入字符数多余定义数时，多出的字符被<strong>丢弃</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">buffer 	db	81					;可能输入的最大字符数</span><br><span class="line">		db	0					;存放实际输入的字符数</span><br><span class="line">		db	81	dup (0)			;存放输入的字符串</span><br><span class="line">		...</span><br><span class="line">		mov	ah, 0AH				;设置功能号</span><br><span class="line">		mov dx, seg buffer		;提供入口参数，seg获得buffer的段地址</span><br><span class="line">		mov ds, dx				;设置数据段</span><br><span class="line">		mov dx, offset buffer	</span><br><span class="line">		int 21h					</span><br></pre></td></tr></table></figure>
<h3 id="字符串输出09h"><a class="markdownIt-Anchor" href="#字符串输出09h">#</a> 字符串输出 (09H)</h3>
<p>需要事先将欲显示的字符串保存在主存中</p>
<ul>
<li>设置 ** 入口参数 <code>DS:DX</code> ** 等于该字符串在主存中的首地址</li>
<li>字符串必须以 <code>$(24H)</code>  结束</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string	db	&#x27;hello,everybody&#x27;,&#x27;$&#x27;</span><br><span class="line">		mov	ah, 09h</span><br><span class="line">		mov dx, offset string</span><br><span class="line">		int 21h</span><br></pre></td></tr></table></figure>
<h3 id="按键判断0bh"><a class="markdownIt-Anchor" href="#按键判断0bh">#</a> 按键判断 (0BH)</h3>
<p>仅判断当前是否有按下的键，设置<strong>输出参数 AL</strong> 后退出。</p>
<ul>
<li><code>AL = 0</code>  没有按键</li>
<li><code>AL = FFH</code>  已经按键</li>
</ul>
<h1 id="参数变量标号"><a class="markdownIt-Anchor" href="#参数变量标号">#</a> 参数 &amp; 变量 &amp; 标号</h1>
<h2 id="数值型参数"><a class="markdownIt-Anchor" href="#数值型参数">#</a> 数值型参数</h2>
<h3 id="常数"><a class="markdownIt-Anchor" href="#常数">#</a> 常数</h3>
<p>十进制常数 – 以 D/d 结尾，默认情况后缀可省略</p>
<p>十六进制常数 – 以 H/h 结尾</p>
<p>八进制 – 以 Q/q 结尾</p>
<p>二进制 – 以 B/b 结尾</p>
<p>字符串常数 – 用英文缩略号括起来的单个字符或多个字符</p>
<p>符号常数 – 利用一个标识符表达一个数值。符号定义伪指令有<strong> EQU</strong> 和 **=**</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">符号名 equ 数值表达式</span><br><span class="line">符号名 equ &lt;字符串&gt;	;该字符串可以是一条处理器指令</span><br><span class="line">符号名 = 数值表达式</span><br></pre></td></tr></table></figure>
<p>EQU 用于数值等价时不能重复定义符号名，但是 &quot;=&quot; 允许重复赋值</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eg:</span><br><span class="line">x = 7		;x equ 7同样正确</span><br><span class="line">x = x + 5	;但是x equ x + 5错误</span><br></pre></td></tr></table></figure>
<h3 id="数值表达式"><a class="markdownIt-Anchor" href="#数值表达式">#</a> 数值表达式</h3>
<p>算术运算符： <code>+,-,*,/,mod</code></p>
<p>逻辑运算符： <code>and,or,xor(异或),not</code></p>
<p>移位运算符： <code>shl,shr</code></p>
<p>关系运算符： <code>eq,ne,gt(大于),lt(小于),ge(大于等于),le(小于等于)</code></p>
<ul>
<li>用 FFFFH (补码 - 1) 表示真</li>
<li>用 0000H 表示假</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eg:</span><br><span class="line">mov bx, ((port lt 5) and 20) or ((port ge 5) and 30)</span><br><span class="line">;当port &lt; 5时，mov bx, 20</span><br><span class="line">;当port &gt;= 5时，mov bx, 30</span><br></pre></td></tr></table></figure>
<p>高低分离符： <code>high(高字节), low(低字节), highword(高字),lowword(低字)</code></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov ah, high 8765h	</span><br><span class="line">;等价于mov ah, 87h</span><br></pre></td></tr></table></figure>
<h2 id="变量定义伪指令"><a class="markdownIt-Anchor" href="#变量定义伪指令">#</a> 变量定义伪指令</h2>
<p>格式</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量名 伪指令 初值表</span><br></pre></td></tr></table></figure>
<ol>
<li>
<p>变量名：用户自定义的标识符，表示初值表首元素的<strong>逻辑地址</strong>。变量名可以没有，在此情况下直接为初值表分配空间，无符号地址</p>
</li>
<li>
<p>初值表：用 &quot;,&quot; 分隔的参数，主要由<strong>数值常数、表达式、&quot;?&quot;，&quot;DUP&quot; 组成</strong></p>
<ul>
<li>&quot;?&quot; 表示初值不确定</li>
<li>重复初值可以用 DUP 进行定义</li>
</ul>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重复次数 dup(重复参数)</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>变量定义伪指令有 <code>DB、DW、DD、DF、DQ、DT</code></li>
</ol>
<h3 id="定义字节单元伪指令db"><a class="markdownIt-Anchor" href="#定义字节单元伪指令db">#</a> 定义字节单元伪指令 DB</h3>
<p>用于分配一字节或多<strong>字节</strong>单元，初值表中的每个数据一定是字节量 (Byte)，可以是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>255</mn></mrow><annotation encoding="application/x-tex">0\sim 255</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span></span> 的无符号数，或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>128</mn><mo>∼</mo><mo>+</mo><mn>127</mn></mrow><annotation encoding="application/x-tex">-128\sim +127</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mord">2</span><span class="mord">7</span></span></span></span> 带符号数</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.data</span><br><span class="line">x	db &#x27;A&#x27;, -5</span><br><span class="line">	db 2dup(100), ?</span><br><span class="line">y	db &#x27;ABC&#x27;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:center">存储单元</th>
<th style="text-align:center">偏移地址</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">43h©</td>
<td style="text-align:center">0007H</td>
</tr>
<tr>
<td style="text-align:center">42h(B)</td>
<td style="text-align:center">0006H</td>
</tr>
<tr>
<td style="text-align:center">41h(A)</td>
<td style="text-align:center">0005H</td>
</tr>
<tr>
<td style="text-align:center">——(?)</td>
<td style="text-align:center">0004H</td>
</tr>
<tr>
<td style="text-align:center">64h(100)</td>
<td style="text-align:center">0003H</td>
</tr>
<tr>
<td style="text-align:center">64h(100)</td>
<td style="text-align:center">0002H</td>
</tr>
<tr>
<td style="text-align:center">fbh(-5)</td>
<td style="text-align:center">0001H</td>
</tr>
<tr>
<td style="text-align:center">61h(a)</td>
<td style="text-align:center">0000H</td>
</tr>
</tbody>
</table>
<h3 id="定义字单元伪指令dw"><a class="markdownIt-Anchor" href="#定义字单元伪指令dw">#</a> 定义字单元伪指令 DW</h3>
<p>用于分配一个或多个<strong>字</strong>单元，初值表中的每个数据一定是字量 (Word)，一个字单元可用于存放任何<strong> 16 位</strong>数据，如：一个段地址、一个偏移地址、两个字符、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>65535</mn></mrow><annotation encoding="application/x-tex">0\sim 65535</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mord">5</span><span class="mord">3</span><span class="mord">5</span></span></span></span> 之间的无符号数、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>32768</mn><mo>∼</mo><mo>+</mo><mn>32767</mn></mrow><annotation encoding="application/x-tex">-32768\sim +32767</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mord">2</span><span class="mord">7</span><span class="mord">6</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">3</span><span class="mord">2</span><span class="mord">7</span><span class="mord">6</span><span class="mord">7</span></span></span></span> 之间的带符号数</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wnum	equ 5678h	;定义wnum为常量</span><br><span class="line">count	dw 20h		;定义count为变量</span><br><span class="line">					;假设count在的数据段的偏移地址是10h</span><br><span class="line"></span><br><span class="line">mov	ax, [bx + si + wnum]		;mov	ax, [bx + si + 5678h]</span><br><span class="line">mov	ax, count					;mov	ax, [0010h]</span><br><span class="line">mov	ax, [si + count]			;mov	ax, [si + 10h]</span><br><span class="line">								;mov	ax, count[si]</span><br><span class="line">lea	bx, count					;lea	bx, [0010h]</span><br><span class="line">								;mov	bx, 0010h</span><br><span class="line">mov	bx, offset count			;mov 	bx, 0010h</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><strong>变量实质表达的是主存地址</strong></p>
</li>
<li>
<p><strong>仅使用变量名或者加个常量是直接寻址</strong></p>
</li>
<li>
<p><strong>再加一个寄存器是寄存器相对寻址</strong></p>
</li>
<li>
<p><strong>加两个寄存器是基址变址相对寻址</strong></p>
</li>
</ul>
<h3 id="定义双字单元伪指令dd"><a class="markdownIt-Anchor" href="#定义双字单元伪指令dd">#</a> 定义双字单元伪指令 DD</h3>
<p>用于分配一个或多个<strong>双字</strong>单元，初值表中的每个数据一定是一个<strong> 32 位</strong>的双字量</p>
<p>可以用来表达 16 位段地址和 16 位偏移地址的远指针</p>
<h3 id="其他数据定义伪指令dfdqdt"><a class="markdownIt-Anchor" href="#其他数据定义伪指令dfdqdt">#</a> 其他数据定义伪指令 DF&amp;DQ&amp;DT</h3>
<p>定义 3 字伪指令 DF：为一个或多个 6 字节变量分配空间及初始化</p>
<p>定义 4 字伪指令 DQ：为一个或多个 8 字节变量分配空间及初始化</p>
<p>定义 10 字节伪指令 DT：为一个或多个 10 字节变量分配空间及初始化</p>
<p>** 练习：** 定义一个缓冲区，包含 33H、34H、35H、36H 四个字节字符，把这四个数据复制 20 遍，存入接着的缓冲区，最后显示出复制结果</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">source	db	33j, 34h, 35h, 36h</span><br><span class="line">target	db	80dp(?)				;紧接着分配80个空间</span><br><span class="line"></span><br><span class="line">;分别指向源和目的的偏移地址首部</span><br><span class="line">mov	si, offset source</span><br><span class="line">mov	di, offset target</span><br><span class="line"></span><br><span class="line">mov cx 80</span><br><span class="line">again1:	mov	al. [si]</span><br><span class="line">		mov	[di], al</span><br><span class="line">		inc	si</span><br><span class="line">		int	di</span><br><span class="line">		loop again1</span><br><span class="line">mov	di, 0</span><br><span class="line">again2:	mov dl, target[di]</span><br><span class="line">        mov	ah, 2</span><br><span class="line">        int	21h</span><br><span class="line">        inc	di</span><br><span class="line">        cmp	di, 80</span><br><span class="line">        jb	again2</span><br></pre></td></tr></table></figure>
<h3 id="定位伪指针orgevenalign"><a class="markdownIt-Anchor" href="#定位伪指针orgevenalign">#</a> 定位伪指针 ORG&amp;EVEN&amp;ALIGN</h3>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$表示当前的偏移地址</span><br><span class="line"></span><br><span class="line">```assembly</span><br><span class="line">;在偏移地址100H单元开始定义</span><br><span class="line">dw 1, 2, $ + 4, $ + 4</span><br><span class="line">;在104H单元的值为108H，106H单元的值为10AH</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```ALIGN n```：使它后面的数据或指令从n的整数倍开始，如果不是就加上$1\sim n-1$中的一个数</span><br><span class="line"></span><br><span class="line">n是2的乘方，且小于所在段的定位属性值</span><br><span class="line"></span><br><span class="line">## 变量和标号的属性</span><br><span class="line"></span><br><span class="line">### 地址操作符</span><br><span class="line"></span><br><span class="line">```[]```表示将括起来的表达式作为存储器地址指针</span><br><span class="line"></span><br><span class="line">```$```表示当前偏移地址</span><br><span class="line"></span><br><span class="line">```:```表示采用指定的段地址寄存器</span><br><span class="line"></span><br><span class="line">```offset```返回偏移地址</span><br><span class="line"></span><br><span class="line">```seg```返回段地址</span><br><span class="line"></span><br><span class="line">### 类型操作符</span><br><span class="line"></span><br><span class="line">1. ```ptr```</span><br><span class="line"></span><br><span class="line">   ```类型名 ptr 名字/标号```</span><br><span class="line"></span><br><span class="line">2. ```this```</span><br><span class="line"></span><br><span class="line">   创建时采用当前地址，但为指定类型的操作数</span><br><span class="line"></span><br><span class="line">   ```assembly</span><br><span class="line">   ;b_var 和 w_var 地址相同</span><br><span class="line">   b_var equ this byte ;按字节访问b_var</span><br><span class="line">   w_var dw 10 dup(0)`;按字访问w_var</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>
<p><code>type 名字/标号</code></p>
<p>返回一个字量数值，表明名字或标号的类型；对字节、字、双字变量依次返回 1，2，4</p>
</li>
</ol>
 ]]></description>
        </item>
        
    </channel>
</rss>