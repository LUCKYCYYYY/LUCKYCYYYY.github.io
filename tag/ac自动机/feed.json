{
    "version": "https://jsonfeed.org/version/1",
    "title": "眨眼的小星玥 • All posts by \"ac自动机\" tag",
    "description": "小星玥，要努力学习呀！",
    "home_page_url": "http://www.luckycyyyy.top",
    "items": [
        {
            "id": "http://www.luckycyyyy.top/2024/10/22/algorithm/%E6%9D%82%E6%9D%82%E7%9A%84%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/algorithm--AC%E8%87%AA%E5%8A%A8%E6%9C%BA/",
            "url": "http://www.luckycyyyy.top/2024/10/22/algorithm/%E6%9D%82%E6%9D%82%E7%9A%84%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/algorithm--AC%E8%87%AA%E5%8A%A8%E6%9C%BA/",
            "title": "AC自动机",
            "date_published": "2024-10-22T12:42:17.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"字符串统计\"><a class=\"markdownIt-Anchor\" href=\"#字符串统计\">#</a> 字符串统计</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvODM3Lw==\">835. Trie 字符串统计</span></p>\n<blockquote>\n<p>Trie 模版题</p>\n</blockquote>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> son[N][<span class=\"number\">26</span>], cnt[N], idx;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(string s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;s[i]; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> u = s[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!son[p][u]) son[p][u] = ++idx;</span><br><span class=\"line\">        p = son[p][u];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cnt[p]++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Query</span><span class=\"params\">(string s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; s[i]; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> u = s[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(son[p][u]) p = son[p][u];</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cnt[p];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;  cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> op; cin &gt;&gt; op;</span><br><span class=\"line\">        string s; cin &gt;&gt; s;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(op == <span class=\"string\">&#x27;I&#x27;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">Insert</span>(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"built_in\">Query</span>(s) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"最大异或对\"><a class=\"markdownIt-Anchor\" href=\"#最大异或对\">#</a> 最大异或对</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9hY3Rpdml0eS9jb250ZW50L3Byb2JsZW0vY29udGVudC84ODQv\">AcWing 143. 最大异或对 </span></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">10</span>, M = <span class=\"number\">31</span> * N;</span><br><span class=\"line\"><span class=\"type\">int</span> son[M][<span class=\"number\">2</span>], idx;</span><br><span class=\"line\"><span class=\"type\">int</span> a[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(<span class=\"type\">int</span> a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">30</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> u = a &gt;&gt; i &amp; <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!son[p][u]) son[p][u] = ++idx;</span><br><span class=\"line\">        p = son[p][u];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">search</span><span class=\"params\">(<span class=\"type\">int</span> a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> p = <span class=\"number\">0</span>, res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">30</span>; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> u = a &gt;&gt; i &amp; <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(son[p][!u])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            p = son[p][!u];</span><br><span class=\"line\">            res = res * <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            p = son[p][u];</span><br><span class=\"line\">            res = res * <span class=\"number\">2</span> + <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; a[i];</span><br><span class=\"line\">        <span class=\"built_in\">Insert</span>(a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        res = <span class=\"built_in\">max</span>(res, <span class=\"built_in\">search</span>(a[i]));</span><br><span class=\"line\">    cout &lt;&lt; res;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"kmp\"><a class=\"markdownIt-Anchor\" href=\"#kmp\">#</a> KMP</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvODMzLw==\">831. KMP 字符串</span></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e5</span> + <span class=\"number\">10</span>, M = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">char</span> p[N], s[M];</span><br><span class=\"line\"><span class=\"type\">int</span> ne[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; p + <span class=\"number\">1</span> &gt;&gt; m &gt;&gt; s + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">2</span>; j &lt;= n; j++)<span class=\"comment\">//计算next数组</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &amp;&amp; p[i + <span class=\"number\">1</span>] != p[j]) i = ne[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p[i + <span class=\"number\">1</span>] == p[j]) i++;</span><br><span class=\"line\">        ne[j] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">1</span>; j &lt;= m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &amp;&amp; p[i + <span class=\"number\">1</span>] != s[j]) i = ne[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p[i + <span class=\"number\">1</span>] == s[j]) i++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == n)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cout &lt;&lt; j - n &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            i = ne[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"ac自动机\"><a class=\"markdownIt-Anchor\" href=\"#ac自动机\">#</a> AC 自动机</h1>\n<blockquote>\n<p>KMP：以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 判断一个单词在文章中出现的次数和具体的位置</p>\n<p>Trie：计算一个单词出现的次数</p>\n<p>AC 自动机：以<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 判断多个单词是否在文章中出现</p>\n</blockquote>\n<h2 id=\"搜索关键词\"><a class=\"markdownIt-Anchor\" href=\"#搜索关键词\">#</a> 搜索关键词</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMTI4NC8=\">1282. 搜索关键词 </span></p>\n<p>计算一篇文章中出现了多少个列举的单词</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e4</span> + <span class=\"number\">10</span>, M = <span class=\"number\">1e6</span> + <span class=\"number\">10</span>, S = <span class=\"number\">55</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"><span class=\"type\">int</span> tr[N * S][<span class=\"number\">26</span>], cnt[N * S], idx;</span><br><span class=\"line\"><span class=\"type\">char</span> str[M];</span><br><span class=\"line\"><span class=\"type\">int</span> q[N * S], ne[N * S];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span><span class=\"params\">()</span><span class=\"comment\">//创建trie树</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; str[i]; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = str[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!tr[p][t]) tr[p][t] = ++idx;</span><br><span class=\"line\">        p = tr[p][t];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cnt[p]++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">build</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> hh = <span class=\"number\">0</span>, tt = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)<span class=\"comment\">//因为根节点以及第一层的节点都是直接指向根节点，所以直接从第一层进行遍历即可</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tr[<span class=\"number\">0</span>][i]) q[++tt] = tr[<span class=\"number\">0</span>][i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(hh &lt;= tt)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = q[hh++];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">26</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> p = tr[t][i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!p)<span class=\"comment\">//如果没有找到儿子节点，那么父节点对应的next指针就是要跳到的位置</span></span><br><span class=\"line\">                tr[t][i] = tr[ne[t]][i];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"comment\">//如果存在儿子节点，那么这个节点的父亲节点的next指针对应的儿子节点字母i就是该儿子的next指针指向的位置</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ne[p] = tr[ne[t]][i];</span><br><span class=\"line\">                q[++tt] = p;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> T;</span><br><span class=\"line\">    cin &gt;&gt; T;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(tr, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> tr);</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(cnt, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> cnt);</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(ne, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> ne);</span><br><span class=\"line\">        idx = <span class=\"number\">0</span>;</span><br><span class=\"line\">        cin &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cin &gt;&gt; str;</span><br><span class=\"line\">            <span class=\"built_in\">insert</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">build</span>();</span><br><span class=\"line\">        cin &gt;&gt; str;<span class=\"comment\">//文章</span></span><br><span class=\"line\">        <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; str[i]; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> t = str[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">            j = tr[j][t];</span><br><span class=\"line\">            <span class=\"type\">int</span> p = j;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(p)<span class=\"comment\">//因为如果p出现了，那么以p为前缀的单词一定也出现了，所以要不断更新为next指针</span></span><br><span class=\"line\">            <span class=\"comment\">//遍历到she的后缀he的时候 her的相同前缀he肯定是逐层遍历到了的 len(he)&lt;len(she) 逐层遍历</span></span><br><span class=\"line\">            <span class=\"comment\">//把所有ne 指针全部加一遍  比如当前p到了she的e  把cnt[p]+进res后 </span></span><br><span class=\"line\">            <span class=\"comment\">//把p通过ne[p]跳到he的e 再加上此时指向he中e的p的cnt[p] </span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                res += cnt[p];</span><br><span class=\"line\">                cnt[p] = <span class=\"number\">0</span>;<span class=\"comment\">//因为只记录是否出现过不记录个数，所以置为0</span></span><br><span class=\"line\">                p= ne[p];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; res &lt;&lt;<span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "AC自动机"
            ]
        },
        {
            "id": "http://www.luckycyyyy.top/2024/08/19/algorithm/%E6%9D%82%E6%9D%82%E7%9A%84%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/algorithm--%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "url": "http://www.luckycyyyy.top/2024/08/19/algorithm/%E6%9D%82%E6%9D%82%E7%9A%84%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/algorithm--%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "title": "背包问题",
            "date_published": "2024-08-19T03:22:25.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"01背包\"><a class=\"markdownIt-Anchor\" href=\"#01背包\">#</a> 01 背包</h1>\n<blockquote>\n<p>每个物品只能拿一次，求拿总容量不超过 V 的物品能得到的最大价值</p>\n</blockquote>\n<ol>\n<li>\n<p>二维状态方程： <code>f[i][j] = max(f[i-1][j], f[i-1][j-v[i]]+w[i])</code> ，</p>\n<ul>\n<li><code>f[i][j]</code>  前 i 个物品中容量不超过 j 的最大价值</li>\n<li><code>f[i-1][j]</code>  表示不选第 i 个物品时，等价于求前 i-1 个物品容量不超过 j 的最大价值</li>\n<li><code>f[i-1][j-v[i]]+w[i]</code> ，表示选第 i 个物品，则容量减去 v [i]，价值加上 w [i]</li>\n</ul>\n</li>\n<li>\n<p>因为第 i 次的结果都是由第 i-1 次推出来的，所以可以用一维状态方程进行表示</p>\n<p>一维状态方程： <code>f[j]=max(f[j], f[j-v[i]]+w[i])</code></p>\n</li>\n<li>\n<p>如果直接按照二维的正向遍历方式遍历一维，是否等价呢？</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以二维的方式正向遍历：</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i&lt;= n; i++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = v[i]; j &lt;= m; j++)</span><br><span class=\"line\">        f[j]=<span class=\"built_in\">max</span>(f[j], f[j-v[i]]+w[i])</span><br></pre></td></tr></table></figure>\n<ul>\n<li>假设 <code>m = 5, v[1] = 1</code> ，当外层循环到 i 的时候，内层的 j 循环 1 2 3 4 5</li>\n<li>当 <code>j = 2</code>  时，判断 <code>f[2] = max(f[2], f[1] + w[i])</code> ，假设这里的 <code>f[2]</code>  更新了</li>\n<li>当 <code>j = 3</code>  时，判断 <code>f[3] = max(f[3], f[2] + w[i])</code> ，这里的 <code>f[2]</code>  用的是刚刚更新的，即 <code>f[i][2]</code> ，而并不是上一层的 <code>f[i-1][2]</code> ，因为上一层的 <code>f[i-1][2]</code>  已经被更新成当前层的 <code>f[i][2]</code></li>\n<li>所以，因为我们是根据上一层更新下一层，所以采用逆序遍历的方式可以避免上一层使用时已经被更新</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以逆序的方式正向遍历：</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i&lt;= n; i++)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = m; j &gt;= v[i]; j++)</span><br><span class=\"line\">        f[j]=<span class=\"built_in\">max</span>(f[j], f[j-v[i]]+w[i])</span><br></pre></td></tr></table></figure>\n<p>完整代码：</p>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e3</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> v[N], w[N];</span><br><span class=\"line\"><span class=\"type\">int</span> f[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = m; j &gt;= v[i]; j--)</span><br><span class=\"line\">            f[j] = <span class=\"built_in\">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"完全背包\"><a class=\"markdownIt-Anchor\" href=\"#完全背包\">#</a> 完全背包</h1>\n<blockquote>\n<p>每个物品可以使用无数次，求拿总容量不超过 V 的物品能得到的最大价值</p>\n</blockquote>\n<ol>\n<li>\n<p>与 01 背包不同的是，它的物品可以使用无限次</p>\n</li>\n<li>\n<p>二维状态方程（后面的式子中 <code>v</code>  表示 <code>v[i]</code> ， <code>w</code>  表示 <code>w[i]</code> ）： <code>f[i][j] = max(f[i-1][j], f[i][j-v]+w)</code></p>\n<p>推导：</p>\n<ul>\n<li><code>f[i][j] = max(f[i-1][j], f[i-1][j-v]+w,f[i-1][j-2v]+2w,……)</code></li>\n<li><code>f[i][j-v] = max(f[i-1][j-v], f[i-1][j-2v]+w,f[i-1][j-3v]+2w),……</code></li>\n<li>由前两个式子可知： <code>f[i][j] = max(f[i-1][j], f[i][j-v]+w)</code></li>\n</ul>\n</li>\n<li>\n<p>一维状态方程： <code>f[j] = max(f[j], f[j-v]+w)</code></p>\n</li>\n<li>\n<p>因为我们需要的就是 <code>f[i][j-v]</code> ，所以正向遍历即可</p>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e3</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> v[N], w[N];</span><br><span class=\"line\"><span class=\"type\">int</span> f[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = v[i]; j &lt;= m; j++)<span class=\"comment\">//与01背包代码唯一不同的地方</span></span><br><span class=\"line\">            f[j] = <span class=\"built_in\">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"多重背包\"><a class=\"markdownIt-Anchor\" href=\"#多重背包\">#</a> 多重背包</h1>\n<blockquote>\n<p>每个物品只能拿一次，每个物品最多有 s 件，求拿总容量不超过 V 的物品能得到的最大价值</p>\n</blockquote>\n<ol>\n<li>如果按朴素的做法，直接每次遍历 s 遍即可，但是这样的时间复杂度是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，太大</li>\n<li>我们设想，将 s 件相同的物品当做独立的个体，即即使是相同的物品也视为不同的物品，那么该问题就变成了 01 背包问题</li>\n<li>但是如果 s 的范围过大，就会导致超时，所以可以利用二进制的思想\n<ul>\n<li>一个数 s，最少需要多少个数可以将比 s 小的数都表示出来？</li>\n<li>答案是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">log_2s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span></span></span></span>，以二进制的形式表示 s，则每一位有取或者不取，如果 s 恰好是 2 的次方，那么可以直接用 log ()，但是如果不是，可以将最后一个 “剩余” 的数单独提出来，就可以表示完整的所有比 s 小的数了</li>\n</ul>\n</li>\n<li>将 s “拆分” 后，使用 01 背包进行解题即可</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">12010</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> v[N], w[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> f[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"type\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> a, b, s;</span><br><span class=\"line\">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; s;</span><br><span class=\"line\">        <span class=\"type\">int</span> k = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(k &lt;= s)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">            v[cnt] = a * k, w[cnt] = b * k;</span><br><span class=\"line\">            s -= k, k *= <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">            v[cnt] = a * s, w[cnt] = b * s;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    n = cnt;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = m; j &gt;= v[i]; j--)</span><br><span class=\"line\">            f[j] = <span class=\"built_in\">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"分组背包\"><a class=\"markdownIt-Anchor\" href=\"#分组背包\">#</a> 分组背包</h1>\n<blockquote>\n<p>每组有若干个物品，每组只能选一个物品，求拿总容量不超过 V 的物品能得到的最大价值</p>\n</blockquote>\n<ol>\n<li>一维状态方程： <code>f[j] = max(f[j], f[j-v[1]]+w[1], f[j-v[2]]+w[2],……)</code>\n<ul>\n<li><code>f[j]</code>  表示这一组不取</li>\n<li><code>f[j-v[1]]</code>  表示这一组取第一个</li>\n<li>以此类推</li>\n</ul>\n</li>\n<li>直接三层循环遍历即可，因为是 01 背包的变式（只能取 1 个），所以 <code>j</code>  用逆序遍历</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">110</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> f[N];</span><br><span class=\"line\"><span class=\"type\">int</span> v[N][N], w[N][N], s[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; s[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= s[i]; j++) cin &gt;&gt; v[i][j] &gt;&gt; w[i][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = m; j &gt;= <span class=\"number\">0</span>; j--)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt;= s[i]; k++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(v[i][k] &lt;= j)    f[j] = <span class=\"built_in\">max</span>(f[j], f[j - v[i][k]] + w[i][k]);</span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "AC自动机"
            ]
        }
    ]
}