{
    "version": "https://jsonfeed.org/version/1",
    "title": "眨眼的小星玥 • All posts by \"sstream\" tag",
    "description": "小星玥，要努力学习呀！",
    "home_page_url": "http://www.luckycyyyy.top",
    "items": [
        {
            "id": "http://www.luckycyyyy.top/2024/08/13/algorithm/%E6%9D%82%E6%9D%82%E7%9A%84%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/algorithm--sstream%E5%BA%93/",
            "url": "http://www.luckycyyyy.top/2024/08/13/algorithm/%E6%9D%82%E6%9D%82%E7%9A%84%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/algorithm--sstream%E5%BA%93/",
            "title": "sstream库",
            "date_published": "2024-08-13T05:17:51.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>文章参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jcGx1c3BsdXMvY3BwLWxpYnMtc3N0cmVhbS5odG1s\">菜鸟教程</span></p>\n<blockquote>\n<p>sstream 提供了一种方便的方式用来处理字符串流（像处理流一样处理字符串）</p>\n<p>分为 3 类：</p>\n<ol>\n<li><code>istringstream</code> ：从字符串中读取数据</li>\n<li><code>ostringstream</code> ：将数据写入字符串</li>\n<li><code>stringstream</code> ：上面二者的结合，可同时进行读取和写入</li>\n</ol>\n</blockquote>\n<h1 id=\"istringstream\"><a class=\"markdownIt-Anchor\" href=\"#istringstream\">#</a> istringstream</h1>\n<p>从字符串读取数据：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string data = <span class=\"string\">&quot;10, 20.5&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\">istringstream <span class=\"title\">iss</span><span class=\"params\">(data)</span></span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">double</span> d;</span><br><span class=\"line\">    iss &gt;&gt; i &gt;&gt; d;</span><br><span class=\"line\">    cout &lt;&lt; i &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; d;<span class=\"comment\">//会输出10 20.5</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"ostringstream\"><a class=\"markdownIt-Anchor\" href=\"#ostringstream\">#</a> ostringstream</h1>\n<p>向字符串中写入数据：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> d = <span class=\"number\">20.5</span>;</span><br><span class=\"line\">    ostringstream oss;</span><br><span class=\"line\">    oss &lt;&lt; i &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; d;</span><br><span class=\"line\">    string result = oss.<span class=\"built_in\">str</span>();<span class=\"comment\">//str()用来获取oss中的内容</span></span><br><span class=\"line\">    cout &lt;&lt; result;<span class=\"comment\">//输出 10 20.5</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"stringstream\"><a class=\"markdownIt-Anchor\" href=\"#stringstream\">#</a> stringstream</h1>\n<h2 id=\"类型转换\"><a class=\"markdownIt-Anchor\" href=\"#类型转换\">#</a> 类型转换</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">to_string</span><span class=\"params\">(string&amp; result, <span class=\"type\">const</span> T&amp; t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tostringstream oss;<span class=\"comment\">//创建一个流</span></span><br><span class=\"line\">\toss &lt;&lt; t;<span class=\"comment\">//把值传递如流中</span></span><br><span class=\"line\">\tresult = oss.<span class=\"built_in\">str</span>();<span class=\"comment\">//获取转换后的字符转并将其写入result</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring s1, s2, s3;</span><br><span class=\"line\">\t<span class=\"built_in\">to_string</span>(s1, <span class=\"number\">10.5</span>);<span class=\"comment\">//double到string</span></span><br><span class=\"line\">\t<span class=\"built_in\">to_string</span>(s2, <span class=\"number\">123</span>);<span class=\"comment\">//int到string</span></span><br><span class=\"line\">\t<span class=\"built_in\">to_string</span>(s3, <span class=\"literal\">true</span>);<span class=\"comment\">//bool到string</span></span><br><span class=\"line\">\tcout &lt;&lt; s1 &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span> &lt;&lt; s2 &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span> &lt;&lt; s3;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串的拼接\"><a class=\"markdownIt-Anchor\" href=\"#字符串的拼接\">#</a> 字符串的拼接</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    stringstream sstream;</span><br><span class=\"line\">    <span class=\"comment\">// 将多个字符串放入 sstream 中</span></span><br><span class=\"line\">    sstream &lt;&lt; <span class=\"string\">&quot;first&quot;</span> &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; <span class=\"string\">&quot;string,&quot;</span>;</span><br><span class=\"line\">    sstream &lt;&lt; <span class=\"string\">&quot; second string&quot;</span>;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;strResult is: &quot;</span> &lt;&lt; sstream.<span class=\"built_in\">str</span>() &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"comment\">//输出strResult is: first string,second string</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// 清空 sstream</span></span><br><span class=\"line\">    sstream.<span class=\"built_in\">str</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    sstream &lt;&lt; <span class=\"string\">&quot;third string&quot;</span>;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;After clear, strResult is: &quot;</span> &lt;&lt; sstream.<span class=\"built_in\">str</span>() &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"comment\">//输出After clear, strResult is: third string</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"清空\"><a class=\"markdownIt-Anchor\" href=\"#清空\">#</a> 清空</h2>\n<blockquote>\n<p>在多次使用类型转换之前必须使用 clear ()，不能使用 str (&quot;&quot;)</p>\n</blockquote>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    stringstream sstream;</span><br><span class=\"line\">    <span class=\"type\">int</span> first, second;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// 插入字符串</span></span><br><span class=\"line\">    sstream &lt;&lt; <span class=\"string\">&quot;456&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 转换为int类型</span></span><br><span class=\"line\">    sstream &gt;&gt; first;</span><br><span class=\"line\">    cout &lt;&lt; first &lt;&lt; endl;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// 在进行多次类型转换前，必须先运行clear()</span></span><br><span class=\"line\">    sstream.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// 插入bool值</span></span><br><span class=\"line\">    sstream &lt;&lt; <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 转换为int类型</span></span><br><span class=\"line\">    sstream &gt;&gt; second;</span><br><span class=\"line\">    cout &lt;&lt; second &lt;&lt; endl;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"clear-str\"><a class=\"markdownIt-Anchor\" href=\"#clear-str\">#</a> clear() &amp;&amp; str(&quot;&quot;)</h3>\n<blockquote>\n<ol>\n<li>\n<p>**str ()：**str () 用于 &lt;&lt; ，将字符串替换成 str 中的内容，并且从起始位置开始书写；可以用于字符串的清空和初始化</p>\n</li>\n<li>\n<p>**clear ()：**clear () 用于 &gt;&gt;，用来删除文件的结束标志，使 &lt;&lt; 可以继续追加（多用于连续的类型转换）</p>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"str\"><a class=\"markdownIt-Anchor\" href=\"#str\">#</a> str()</h4>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202408131525361.png\" alt=\"\"></p>\n<ol>\n<li>\n<p>通过 s 可以看出，&lt;&lt; 每次都在结尾追加</p>\n</li>\n<li>\n<p>通过 s1 可以看出，str (&quot;&quot;) 可以清空字符串</p>\n</li>\n<li>\n<p>通过 s2 可以看出，使用 str 可以清空并重新设置字符串，并将 “鼠标” 移到字符串开头，从开头开始追加</p>\n</li>\n<li>\n<p>通过 s3 可以看出 clear 对 &lt;&lt; 无用</p>\n</li>\n</ol>\n<h4 id=\"clear\"><a class=\"markdownIt-Anchor\" href=\"#clear\">#</a> clear()</h4>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202408131542661.png\" alt=\"\"></p>\n<p><img data-src=\"https://raw.githubusercontent.com/LUCKYCYYYY/PictureBed/master/img/202408131541546.png\" alt=\"\"></p>\n<ol>\n<li>通过 s2 可知，类型转换之后遇到文件结尾，无法继续 &lt;&lt; 向后追加</li>\n<li>通过 s3 可知，如果字符串后面有空格或者换行，则不是遇到文件尾结束，可以继续向后追加</li>\n<li>通过 s4 可知，添加了 clear () 之后，删除了文件结束标志，可以继续追加；并且每次的类型转换会记下结束的位置，下次从结束的位置开始接着类型转换</li>\n</ol>\n",
            "tags": [
                "sstream"
            ]
        }
    ]
}