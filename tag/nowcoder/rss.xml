<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
    <channel>
        <title>眨眼的小星玥 • Posts by &#34;nowcoder&#34; tag</title>
        <link>http://www.luckycyyyy.top</link>
        <description>小星玥，要努力学习呀！</description>
        <language>zh-CN</language>
        <pubDate>Wed, 04 Dec 2024 17:20:44 +0800</pubDate>
        <lastBuildDate>Wed, 04 Dec 2024 17:20:44 +0800</lastBuildDate>
        
        <category>Linux</category>
        
        <category>半导体与激光</category>
        
        <category>原子核物理</category>
        
        <category>量子物理</category>
        
        <category>振动与波动</category>
        
        <category>波动光学</category>
        
        <category>实验</category>
        
        <category>电磁感应</category>
        
        <category>python</category>
        
        <category>稳恒磁场</category>
        
        <category>静电场</category>
        
        <category>物理实验</category>
        
        <category>AC自动机</category>
        
        <category>Dp</category>
        
        <category>algorithm</category>
        
        <category>memset</category>
        
        <category>sstream</category>
        
        <category>二分</category>
        
        <category>前缀和</category>
        
        <category>差分</category>
        
        <category>无穷级数</category>
        
        <category>图论</category>
        
        <category>并查集</category>
        
        <category>线段树</category>
        
        <category>数论</category>
        
        <category>贪心</category>
        
        <category>概率论</category>
        
        <category>离散数学上</category>
        
        <category>级数</category>
        
        <category>微分中值定理</category>
        
        <category>公式</category>
        
        <category>常微分方程</category>
        
        <category>极限</category>
        
        <category>常用定理</category>
        
        <category>积分</category>
        
        <category>汇编</category>
        
        <category>数据结构</category>
        
        <category>计网</category>
        
        <category>数据库</category>
        
        <category>Codeforces</category>
        
        <category>DP</category>
        
        <category>Nowcoder</category>
        
        <category>CSP</category>
        
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2024/12/04/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-14-16/</guid>
            <title>NOWCODER_10_14_16</title>
            <link>http://www.luckycyyyy.top/2024/12/04/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-14-16/</link>
            
            <category>Nowcoder</category>
            
            <pubDate>Wed, 04 Dec 2024 17:20:44 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="10-14"><a class="markdownIt-Anchor" href="#10-14">#</a> 10-14</h1>
<h2 id="a"><a class="markdownIt-Anchor" href="#a">#</a> A</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzQvQQ==">A - 尖子生</span></p>
<p>分成 jzc、jz、zc、d 四种情况即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	cin &gt;&gt; s;</span><br><span class="line">	<span class="type">int</span> c1 = <span class="number">0</span>, c2 = <span class="number">0</span>, c3 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(s[i] == <span class="string">&#x27;j&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[i + <span class="number">1</span>] == <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(s[i + <span class="number">2</span>] == <span class="string">&#x27;c&#x27;</span>)<span class="comment">//如果是jzc </span></span><br><span class="line">				&#123;</span><br><span class="line">					c1++, c2++;</span><br><span class="line">					i += <span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					c1++;</span><br><span class="line">					i += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[i + <span class="number">1</span>] == <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				c2++;</span><br><span class="line">				i += <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			c3++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; c1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c3 ;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="b"><a class="markdownIt-Anchor" href="#b">#</a> B</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzQvQg==">B - 建房子</span></p>
<p>考察<strong>离散化</strong>，用结构体存下搭建的起点和终点，起点标记为 1，终点标记为 - 1，通过加上起点或终点的标记判断当前的高度，为保证正确性，起点应该排在终点的前面。如果当前高度大于已经记录的高度，就更新高度和最高的个数；如果当前高度等于最高高度，就加上最高高度</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">re</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> x, f; 	</span><br><span class="line">&#125;a[N * <span class="number">2</span>];<span class="comment">//x用来记录输入的l，r；f用来记录是起点还是终点</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(re a, re b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a.x == b.x) <span class="keyword">return</span> a.f &gt; b.f;</span><br><span class="line">	<span class="keyword">return</span> a.x &lt; b.x;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; a[i * <span class="number">2</span> - <span class="number">1</span>].x, a[i * <span class="number">2</span> - <span class="number">1</span>].f = <span class="number">1</span>;<span class="comment">//起点</span></span><br><span class="line">		cin &gt;&gt; a[i * <span class="number">2</span>].x, a[i * <span class="number">2</span>].f = <span class="number">-1</span>;<span class="comment">//终点 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> nh = <span class="number">0</span>;<span class="comment">//nh用来记录当前的高度 </span></span><br><span class="line">	<span class="type">int</span> mc = <span class="number">0</span>, mh = <span class="number">0</span>;<span class="comment">//mc用来记录最大个数，mh最大高度</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		nh += a[i].f;</span><br><span class="line">		<span class="keyword">if</span>(nh &gt; mh)</span><br><span class="line">		&#123;</span><br><span class="line">			mh = nh;</span><br><span class="line">			mc = a[i + <span class="number">1</span>].x - a[i].x + <span class="number">1</span>;<span class="comment">//直接更新</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(nh == mh)</span><br><span class="line">		&#123;</span><br><span class="line">			mc += a[i + <span class="number">1</span>].x - a[i].x + <span class="number">1</span>;<span class="comment">//在过去的基础上加</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; mh &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mc;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="c"><a class="markdownIt-Anchor" href="#c">#</a> C</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzQvQw==">C - 连通图</span></p>
<p>分成环、不成环；o 可以 1:2 连接，也 2:2 连接</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> c, o, h;</span><br><span class="line">	cin &gt;&gt; c &gt;&gt; o &gt;&gt; h;</span><br><span class="line">	<span class="keyword">if</span>(h % <span class="number">2</span> == <span class="number">1</span> || h &gt; <span class="number">2</span> * c + <span class="number">2</span>)<span class="comment">//如果h是奇数，或者比最大分支多</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(c == <span class="number">0</span>)<span class="comment">//如果没有c</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(h == <span class="number">2</span>) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(o &gt; <span class="number">2</span> &amp;&amp; h == <span class="number">0</span>) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(c == <span class="number">1</span>)<span class="comment">//只有一个c，o不能1:2</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(o &gt;= <span class="number">2</span> * c + <span class="number">2</span> - h) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(c == <span class="number">2</span>)<span class="comment">//有两个c，c不能成环，但是o可以1:2</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(o &gt;= (<span class="number">2</span> * c + <span class="number">2</span> - h) / <span class="number">2</span>) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span><span class="comment">//c可以成环的情况</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(o &gt;= (<span class="number">2</span> * c + <span class="number">2</span> - h) / <span class="number">2</span>) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(h &lt;= <span class="number">2</span> * c)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(o &gt;= (<span class="number">2</span> * c - h) / <span class="number">2</span>) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">			<span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="10-16"><a class="markdownIt-Anchor" href="#10-16">#</a> 10-16</h1>
<h2 id="a-2"><a class="markdownIt-Anchor" href="#a-2">#</a> A</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzUvQQ==">A-Happy! 美咲的翻翻乐</span></p>
<p>模拟即可</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">    n = <span class="number">2</span> * n;</span><br><span class="line">	<span class="keyword">while</span>(n--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x;</span><br><span class="line">		cin &gt;&gt; x;</span><br><span class="line">		<span class="keyword">if</span>(!a[x]) </span><br><span class="line">		&#123;</span><br><span class="line">			a[x] = <span class="number">1</span>;</span><br><span class="line">			c++;</span><br><span class="line">			ans = <span class="built_in">max</span>(ans, c);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			c--;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="b-2"><a class="markdownIt-Anchor" href="#b-2">#</a> B</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzUvQg==">B-Lucky! 米歇尔的加法</span></p>
<p>先将两个数补齐，转换成十进制，然后这个 “加法” 相当于异或，再转换成十六进制，删除前导零即可。注意如果是全零时的特判</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">vector&lt;<span class="type">char</span>&gt; a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string x0, y;</span><br><span class="line">	cin &gt;&gt; x0 &gt;&gt; y;</span><br><span class="line">	string x = <span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="keyword">if</span> (x0.<span class="built_in">size</span>() &gt; y.<span class="built_in">size</span>()) <span class="built_in">swap</span>(x0, y);<span class="comment">//让x0是短的字符串</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = y.<span class="built_in">size</span>() - x0.<span class="built_in">size</span>(); i &gt; <span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		x += <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	x += x0;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//将xy的每一位转换成十进制 </span></span><br><span class="line">		<span class="type">int</span> x10, y10;</span><br><span class="line">		<span class="keyword">if</span> (x[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; x[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">			x10 = x[i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			x10 = x[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span> (y[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; y[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">			y10 = y[i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			y10 = y[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> ians = x10 ^ y10;</span><br><span class="line">		<span class="type">char</span> cans;</span><br><span class="line">		<span class="comment">//转换成十六进制 </span></span><br><span class="line">		<span class="keyword">if</span> (ians &gt;= <span class="number">0</span> &amp;&amp; ians &lt;= <span class="number">9</span>) cans = ians + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span> (ians &gt;= <span class="number">10</span> &amp;&amp; ians &lt;= <span class="number">15</span>) cans = ians - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">		a.<span class="built_in">push_back</span>(cans);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (i &lt; a.<span class="built_in">size</span>() &amp;&amp; a[i] == <span class="string">&#x27;0&#x27;</span>) i++;<span class="comment">//删除前导零 </span></span><br><span class="line">	<span class="keyword">if</span> (i == a.<span class="built_in">size</span>()) cout &lt;&lt; <span class="number">0</span>;<span class="comment">//0的特判</span></span><br><span class="line">	<span class="keyword">for</span> (; i &lt; a.<span class="built_in">size</span>(); i++)</span><br><span class="line">		cout &lt;&lt; a[i];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="c-2"><a class="markdownIt-Anchor" href="#c-2">#</a> C</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzUvQw==">C-Smile! 花音的礼物分配</span></p>
<p>利用背包问题，列举所有可能的情况</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ac;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>;</span><br><span class="line"><span class="type">int</span> sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>, s = <span class="number">0</span>, f[N * N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">while</span>(n --)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> a, b;</span><br><span class="line">		cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">		<span class="keyword">if</span>(b == <span class="number">0</span>) ac.<span class="built_in">push_back</span>(a), s += a;<span class="comment">//可自由支配 </span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(b == <span class="number">1</span>) sum1 += a;</span><br><span class="line">		<span class="keyword">else</span> sum2 += a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> ans = s + sum1 + sum2;<span class="comment">//最差的情况</span></span><br><span class="line">	f[sum1] = <span class="number">1</span>;<span class="comment">//sum1可达 </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ac.<span class="built_in">size</span>(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = sum1 + s; j &gt;= ac[i]; j--)</span><br><span class="line">		&#123;</span><br><span class="line">			f[j] |= f[j - ac[i]]; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= s + sum1; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(f[i])</span><br><span class="line">		&#123;</span><br><span class="line">			ans = <span class="built_in">min</span>(ans, <span class="built_in">abs</span>(s + sum1 + sum2 - <span class="number">2</span> * i));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="d"><a class="markdownIt-Anchor" href="#d">#</a> D</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzUvRA==">D-Yeah!! 弦卷心的好子串</span></p>
<p>双指针法，记录 h、hw、w 的个数</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line">string x, a = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="type">int</span> h, w, hw, s, ans;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	cin &gt;&gt; x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">		<span class="keyword">if</span>(x[i] == <span class="string">&#x27;h&#x27;</span> || x[i] == <span class="string">&#x27;w&#x27;</span>) a += x[i];<span class="comment">//a是只有h和w的字符串 </span></span><br><span class="line">	<span class="type">int</span> m = a.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>; i &lt; m; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//查找符合条件子串的右端点j </span></span><br><span class="line">		<span class="keyword">while</span>(j &lt; m &amp;&amp; s &lt; k)</span><br><span class="line">		&#123;</span><br><span class="line">			j++;</span><br><span class="line">			<span class="keyword">if</span>(a[j] == <span class="string">&#x27;h&#x27;</span>) h++;</span><br><span class="line">			<span class="keyword">else</span><span class="comment">//如果是w </span></span><br><span class="line">			&#123;</span><br><span class="line">				w++;</span><br><span class="line">				hw += h;</span><br><span class="line">				s += h * (h - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans += m - j;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(a[i] == <span class="string">&#x27;h&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			h--;</span><br><span class="line">			hw -= w;</span><br><span class="line">			s -= hw;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			w--;</span><br><span class="line">		<span class="comment">/*cout &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line"><span class="comment">		cout &lt;&lt; j &lt;&lt; &#x27;\n&#x27;;	</span></span><br><span class="line"><span class="comment">		cout &lt;&lt; ans &lt;&lt; &#x27;\n&#x27;; </span></span><br><span class="line"><span class="comment">		cout &lt;&lt; &#x27;\n&#x27;;*/</span></span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 ]]></description>
        </item>
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2024/10/09/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-9/</guid>
            <title>NOWCODER_10_9</title>
            <link>http://www.luckycyyyy.top/2024/10/09/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-9/</link>
            
            <category>Nowcoder</category>
            
            <pubDate>Wed, 09 Oct 2024 22:12:24 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="a"><a class="markdownIt-Anchor" href="#a">#</a> A</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzIvQQ==">原题链接</span></p>
<blockquote>
<p>超简单的题，但是数有可能是负数啊啊啊啊啊啊啊啊啊啊啊啊啊啊！</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n; cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">	<span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">	<span class="comment">//可能是负数</span></span><br><span class="line">    <span class="type">int</span> ans =(a[<span class="number">1</span>] + a[<span class="number">2</span>]) * a[n];</span><br><span class="line">    ans = <span class="built_in">min</span>(ans, (a[n] + a[n - <span class="number">1</span>]) * a[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i + <span class="number">2</span> &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, (a[i] + a[i + <span class="number">1</span>]) * a[i + <span class="number">2</span>]);</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, (a[i] + a[i + <span class="number">2</span>]) * a[i + <span class="number">1</span>]);</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, (a[i + <span class="number">1</span>] + a[i + <span class="number">2</span>]) * a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="b"><a class="markdownIt-Anchor" href="#b">#</a> B</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzIvQg==">原题链接</span></p>
<blockquote>
<p>按照题目分类即可</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">deque&lt;<span class="type">char</span>&gt; v;</span><br><span class="line"><span class="type">int</span> a[<span class="number">15</span>];</span><br><span class="line">map&lt;string, <span class="type">int</span>&gt; m = &#123; &#123;<span class="string">&quot;QQ&quot;</span>,<span class="number">1</span>&#125;,&#123;<span class="string">&quot;QW&quot;</span>,<span class="number">2</span>&#125;,&#123;<span class="string">&quot;QE&quot;</span>,<span class="number">3</span>&#125;,&#123;<span class="string">&quot;WQ&quot;</span>,<span class="number">4</span>&#125;,&#123;<span class="string">&quot;WW&quot;</span>,<span class="number">5</span>&#125;,&#123;<span class="string">&quot;WE&quot;</span>,<span class="number">6</span>&#125;,&#123;<span class="string">&quot;EQ&quot;</span>,<span class="number">7</span>&#125;,&#123;<span class="string">&quot;EW&quot;</span>,<span class="number">8</span>&#125;,&#123;<span class="string">&quot;EE&quot;</span>,<span class="number">9</span>&#125;,&#123;<span class="string">&quot;R&quot;</span>,<span class="number">10</span>&#125; &#125;;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) cin &gt;&gt; a[i];</span><br><span class="line">	cin &gt;&gt; s;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (v.<span class="built_in">empty</span>())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (s[i] == <span class="string">&#x27;R&#x27;</span>) ans += a[m[<span class="string">&quot;R&quot;</span>]];</span><br><span class="line">			<span class="keyword">else</span> v.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">char</span> t = v.<span class="built_in">front</span>();</span><br><span class="line">			v.<span class="built_in">pop_front</span>();</span><br><span class="line">			<span class="keyword">if</span> (s[i] == <span class="string">&#x27;R&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				string que = <span class="string">&quot;&quot;</span>;</span><br><span class="line">				que += t;</span><br><span class="line">				que += s[i];</span><br><span class="line">				ans += a[m[que]];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="c"><a class="markdownIt-Anchor" href="#c">#</a> C</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzIvQw==">原题链接</span></p>
<blockquote>
<p>多重背包问题</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> v[<span class="number">15</span>], num[<span class="number">5</span>];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150</span>;</span><br><span class="line"><span class="type">int</span> dp[N][N][N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) cin &gt;&gt; v[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) cin &gt;&gt; num[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> Q = <span class="number">0</span>; Q &lt;= num[<span class="number">1</span>]; Q++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> W = <span class="number">0</span>; W &lt;= num[<span class="number">2</span>]; W++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> E = <span class="number">0</span>; E &lt;= num[<span class="number">3</span>];E++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(Q)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(Q &gt; <span class="number">1</span>) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q<span class="number">-2</span>][W][E] + v[<span class="number">1</span>]);<span class="comment">//QQ</span></span><br><span class="line">                    <span class="keyword">if</span>(W) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q<span class="number">-1</span>][W<span class="number">-1</span>][E] + v[<span class="number">2</span>]);<span class="comment">//QW</span></span><br><span class="line">                    <span class="keyword">if</span>(E) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q<span class="number">-1</span>][W][E<span class="number">-1</span>] + v[<span class="number">3</span>]);<span class="comment">//QE</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(W)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(Q) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q<span class="number">-1</span>][W<span class="number">-1</span>][E] + v[<span class="number">4</span>]);</span><br><span class="line">                    <span class="keyword">if</span>(W &gt; <span class="number">1</span>) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q][W<span class="number">-2</span>][E] + v[<span class="number">5</span>]);</span><br><span class="line">                    <span class="keyword">if</span>(E) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q][W<span class="number">-1</span>][E<span class="number">-1</span>] + v[<span class="number">6</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(E)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(Q) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q<span class="number">-1</span>][W][E<span class="number">-1</span>] + v[<span class="number">7</span>]);</span><br><span class="line">                    <span class="keyword">if</span>(W) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q][W<span class="number">-1</span>][E<span class="number">-1</span>] + v[<span class="number">8</span>]);</span><br><span class="line">                    <span class="keyword">if</span>(E &gt; <span class="number">1</span>) dp[Q][W][E] = <span class="built_in">max</span>(dp[Q][W][E], dp[Q][W][E<span class="number">-2</span>] + v[<span class="number">9</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[num[<span class="number">1</span>]][num[<span class="number">2</span>]][num[<span class="number">3</span>]] + num[<span class="number">4</span>] * v[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="d"><a class="markdownIt-Anchor" href="#d">#</a> D</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzIvRA==">原题链接</span></p>
<blockquote>
<p>做了好久的一题 QAQ，虽然不难 QAQAQAQAQAQ</p>
<p>最开始想的是第一层有些节点会被别的节点覆盖，所以只用遍历那些没有覆盖的节点即可；但是因为这些没有直接覆盖的节点可能在到达对岸的节点是有相互覆盖的，所以不能直接用没有覆盖的节点算作需要的工厂数</p>
<p>于是第二遍，我把第一行的所有结点都放进去 bfs 了一遍，很显然，TLE 了</p>
<p>最后结合了第一种做法，并利用 dfs 递归找到每个起点对应的终点区间，贪心求解即可</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>;</span><br><span class="line"><span class="type">int</span> g[N][N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> l[N][N], r[N][N];</span><br><span class="line"><span class="type">int</span> st[N][N];</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	st[i][j] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> t = <span class="number">0</span>; t &lt; <span class="number">4</span>; t++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x = i + dx[t], y = j + dy[t];</span><br><span class="line">		<span class="keyword">if</span> (x &gt;= <span class="number">1</span> &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; x &lt;&lt; n &amp;&amp; y &lt;= m)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (g[x][y] &lt; g[i][j])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (!st[x][y]) <span class="built_in">dfs</span>(x, y);</span><br><span class="line">				l[i][j] = <span class="built_in">min</span>(l[i][j], l[x][y]);</span><br><span class="line">				r[i][j] = <span class="built_in">max</span>(r[i][j], r[x][y]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(l, <span class="number">0x3f3f3f3f</span>, <span class="keyword">sizeof</span> l);</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			cin &gt;&gt; g[i][j];</span><br><span class="line">			<span class="keyword">if</span> (i == n) l[i][j] = r[i][j] = j;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">		<span class="keyword">if</span> (!st[<span class="number">1</span>][i]) <span class="built_in">dfs</span>(<span class="number">1</span>, i);</span><br><span class="line">	<span class="type">int</span> cnt0 = <span class="number">0</span>, cnt1 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">		<span class="keyword">if</span> (!st[n][i]) cnt0++;</span><br><span class="line">	<span class="keyword">if</span> (cnt0) cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span> &lt;&lt; cnt0;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> tl = <span class="number">1</span>, tr = r[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">while</span> (tl &lt;= m)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (l[<span class="number">1</span>][i] &lt;= tl)</span><br><span class="line">					tr = <span class="built_in">max</span>(tr, r[<span class="number">1</span>][i]);</span><br><span class="line">			&#125;</span><br><span class="line">			tl = tr + <span class="number">1</span>;</span><br><span class="line">			cnt1++;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span> &lt;&lt; cnt1;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 ]]></description>
        </item>
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2024/10/08/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-7/</guid>
            <title>NOWCODER_10_7</title>
            <link>http://www.luckycyyyy.top/2024/10/08/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-7/</link>
            
            <category>Nowcoder</category>
            
            <pubDate>Tue, 08 Oct 2024 23:00:36 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="a"><a class="markdownIt-Anchor" href="#a">#</a> A</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzEvQQ==">原题链接</span></p>
<p>给定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n\times m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 的矩阵，有 0 有 1，有两个操作：改变（01 互换）相邻的两个竖着的地方，或者两个相邻的横着的地方，问最后是否能全部变成 1</p>
<blockquote>
<p>根据分析可以发现，只要一开始 0 的个数是偶数就可以全部变成 1</p>
<p>做的时候没有发现 www，在执着于什么时候用操作一什么时候用操作二 wwwwwww</p>
<p>eg：</p>
<p>11111</p>
<p>11010</p>
<p>01000</p>
<p>对第二行：-&gt; 11100 -&gt; 11111</p>
<p>对第三行：-&gt; 10000 -&gt; 11111</p>
<p>所以只用操作二都可以</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t,n,m;</span><br><span class="line"><span class="type">char</span> flag[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)&#123;</span><br><span class="line">		cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">		<span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">				cin&gt;&gt;flag[i][j];</span><br><span class="line">				<span class="keyword">if</span>(flag[i][j]==<span class="string">&#x27;0&#x27;</span>) cnt++;<span class="comment">//记录息掉的灯掉数量</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(cnt%<span class="number">2</span>==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="b"><a class="markdownIt-Anchor" href="#b">#</a> B</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzEvQg==">原题链接</span></p>
<p>每个结点有对应的字母，要求从 1 开始 “走”，顺序走过的每个结点的字典序最大</p>
<blockquote>
<p>类似于 bfs，一层一层遍历，找到当前字典序最大的字母即可</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> ne[N], to[N], head[N], idx;</span><br><span class="line">string se =  <span class="string">&quot;&quot;</span>, s;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ne[idx] = head[a], to[idx] = b, head[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> pro[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	q.<span class="built_in">push</span>(o);</span><br><span class="line">	st[o] = <span class="literal">true</span>;</span><br><span class="line">	se += s[o - <span class="number">1</span>];</span><br><span class="line">	<span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">		<span class="type">char</span> x = <span class="string">&#x27;a&#x27;</span> - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span> (k)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">			q.<span class="built_in">pop</span>(), k--;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> i = head[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> j = to[i];</span><br><span class="line">				<span class="comment">//找到最大的字母</span></span><br><span class="line">				<span class="keyword">if</span> (s[j - <span class="number">1</span>] &gt; x) cnt = <span class="number">0</span>, pro[cnt++] = j, x = s[j - <span class="number">1</span>];</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (s[j - <span class="number">1</span>] == x) pro[cnt++] = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(x != <span class="string">&#x27;a&#x27;</span> - <span class="number">1</span>)</span><br><span class="line">			se += s[pro[<span class="number">0</span>] - <span class="number">1</span>];<span class="comment">//结束的字符串加上该字符</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">			q.<span class="built_in">push</span>(pro[i]), k++;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; se;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	cin &gt;&gt; s;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> a, b;</span><br><span class="line">		cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">		<span class="built_in">add</span>(a, b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">bfs</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="d"><a class="markdownIt-Anchor" href="#d">#</a> D</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzEvRA==">原题链接</span></p>
<p>每个结点对应 a b c 中的一个，要求从根开始不回溯遍历，得到字符串 abc，k 表示可以回溯到开始结点再换条路遍历，最终得到 abc 即可</p>
<blockquote>
<p>利用 dfs，建立两个数组，一个存储某个节点之前的 abc 的个数，一个存储该结点之后 abc 的个数</p>
<p>对于 k == 1 情况下为什么要 ans -= sum：</p>
<ol>
<li><code>f[x][0] * g[x][2]</code>  表示的是以 x 或者 x 的子节点为’b’结点，出现 abc 的次数，即不一定是以 x 为结点’b’，所以直接减去</li>
<li>然后再利用 <code>s[x] == b/c</code>  的情况，精准计算以 x 为’b’的情况</li>
</ol>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line">string s;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v[N];</span><br><span class="line"><span class="type">int</span> p[<span class="number">10</span>], f[N][<span class="number">10</span>], g[N][<span class="number">10</span>];<span class="comment">//f表示结点x之前abc的个数，g表示结点x之后abc的个数</span></span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//加上该结点</span></span><br><span class="line">    f[x][s[x] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    g[x][s[x] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i: v[x])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">memcpy</span>(f[i], f[x], <span class="built_in">sizeof</span>(f[x]));<span class="comment">//把x之前的abc个数复制到结点i</span></span><br><span class="line">        <span class="built_in">dfs</span>(i, x);</span><br><span class="line">        <span class="comment">//更新x之后的abc个数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">            g[x][j] += g[i][j]; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(s[x] == <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">        sum = f[x][<span class="number">0</span>] * g[x][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">0</span>)</span><br><span class="line">        ans += sum;</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans -= sum;</span><br><span class="line">        <span class="keyword">if</span>(s[x] == <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">            ans += f[x][<span class="number">0</span>] * p[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>(s[x] == <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">            ans += f[x][<span class="number">1</span>] * p[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; k &gt;&gt; s;</span><br><span class="line">	s = <span class="string">&quot; &quot;</span> + s;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)<span class="comment">//建图</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> a, b;</span><br><span class="line">		cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">		v[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">		v[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="comment">//记录分别有多少个a,b,c</span></span><br><span class="line">        p[s[i] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">2</span>)</span><br><span class="line">        cout &lt;&lt; p[<span class="number">0</span>] * p[<span class="number">1</span>] * p[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        cout &lt;&lt; ans;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 ]]></description>
        </item>
        
        <item>
            <guid isPermalink="true">http://www.luckycyyyy.top/2024/10/05/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-5/</guid>
            <title>NOWCODER_10_5</title>
            <link>http://www.luckycyyyy.top/2024/10/05/algorithm/%E7%AE%97%E6%B3%95OJ/Nowcoder/NOWCODER-10-5/</link>
            
            <category>Nowcoder</category>
            
            <pubDate>Sat, 05 Oct 2024 23:52:24 +0800</pubDate>
            <description><![CDATA[ <link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="a"><a class="markdownIt-Anchor" href="#a">#</a> A</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzAvQQ==">原题链接</span></p>
<p>给定两个正整数 n,c ，再给定两个长度为 n 的数组 x 与 y ，在满足 a 与 b 都是整数且 a+b=c 的条件下，求使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mtext>−</mtext><mi>a</mi><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mtext>−</mtext><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">∑_{i=1}^n(x_i−a)×(y_i−b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 最大的 a 和 b</p>
<blockquote>
<p>直接化简要求的式子，化成二次函数即可</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> x[N], y[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, c;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; c;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; x[i], x[i] += x[i - <span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; y[i], y[i] += y[i - <span class="number">1</span>];</span><br><span class="line">	<span class="type">int</span> t = (n * c - y[n] + x[n]) / (<span class="number">2</span> * n), ans = n * t * (c - t) - t * y[n] - (c - t) * x[n];</span><br><span class="line">	<span class="keyword">if</span> (n * (t + <span class="number">1</span>) * (c - t - <span class="number">1</span>) - (t + <span class="number">1</span>) * y[n] - (c - t - <span class="number">1</span>) * x[n] &gt; ans) t = t + <span class="number">1</span>;</span><br><span class="line">	cout &lt;&lt; t &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c - t;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="b"><a class="markdownIt-Anchor" href="#b">#</a> B</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzAvQg==">原题链接</span></p>
<p>给定一张 n 个点的图，编号为 1 到 n ，初始没有边，任意两个点满足其中至少有一个点的编号为质数的条件即可连边，代价为两个数的差的绝对值，问将整张图连通的代价最小是多少。</p>
<blockquote>
<p>一开始想到从小到大依次插入节点，分为素数和非素数插入，将非素数先保存到一个数组中，到遇到下一个素数的时候再判断该数和前一个素数连还是后一个素数连</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;deque&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int unsigned long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> prime[N], cnt;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_prime</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!st[i]) prime[cnt++] = i;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; prime[j] &lt;= n / i; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			st[i * prime[j]] = <span class="literal">true</span>;<span class="comment">//st为true 说明是合数，为false 说明是质数</span></span><br><span class="line">			<span class="keyword">if</span> (i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n; cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (n == <span class="number">2</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">get_prime</span>(n);</span><br><span class="line">	<span class="comment">//n &gt;= 3的情况</span></span><br><span class="line">	<span class="type">int</span> count = <span class="number">1</span>, last_prime = <span class="number">2</span>;</span><br><span class="line">	deque&lt;<span class="type">int</span>&gt; left;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!st[i])<span class="comment">//如果是素数</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(left.<span class="built_in">empty</span>()) count += <span class="number">1</span>;<span class="comment">//直接加到图的后面</span></span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> sum = left.<span class="built_in">size</span>(), t = left[sum / <span class="number">2</span>];</span><br><span class="line">				count += i - last_prime;</span><br><span class="line">				<span class="keyword">while</span> (left.<span class="built_in">size</span>())</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(left.<span class="built_in">front</span>() != t) count += <span class="built_in">min</span>(left.<span class="built_in">front</span>() - last_prime, i - left.<span class="built_in">front</span>());</span><br><span class="line">					left.<span class="built_in">pop_front</span>();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			last_prime = i;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span><span class="comment">//如果不是素数</span></span><br><span class="line">		&#123;</span><br><span class="line">			left.<span class="built_in">push_back</span>(i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (!left.<span class="built_in">empty</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		count += left.<span class="built_in">front</span>() - last_prime;</span><br><span class="line">		left.<span class="built_in">pop_front</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; count;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>本来以为上一个方式 TLE 了，所以又写了一种方法</p>
<p>直接遍历素数，根据判断除了 2 和 3，其他所有的素数之间隔得都是奇数个数（因为奇数加奇数等于偶数，偶数不可能是素数），所以可以想像成先让中间的数分别和两个素数相连，然后让大的数和大的素数相连，小的数和小的素数相连，又因为数都是连续的，所以只用算中间那个数的右边那个数到大的素数的距离，然后用公差为 1 的等差数列求和即可</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> prime[N], cnt;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_prime</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!st[i]) prime[cnt++] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; prime[j] &lt;= n / i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            st[i * prime[j]] = <span class="literal">true</span>;<span class="comment">//st为true 说明是合数，为false 说明是质数</span></span><br><span class="line">            <span class="keyword">if</span> (i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">get_prime</span>(n);</span><br><span class="line">    <span class="type">int</span> count = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt - <span class="number">1</span>; i++)<span class="comment">//遍历素数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> last_prime = prime[i], next_prime = prime[i + <span class="number">1</span>];</span><br><span class="line">        count += next_prime - last_prime + (next_prime - (next_prime + last_prime + <span class="number">2</span>) / <span class="number">2</span> + <span class="number">1</span>) * (next_prime - (next_prime + last_prime + <span class="number">2</span>) / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; prime[cnt - <span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        count += (n - prime[cnt - <span class="number">1</span>] + <span class="number">1</span>) * (n - prime[cnt - <span class="number">1</span>]) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; count;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="c"><a class="markdownIt-Anchor" href="#c">#</a> C</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvOTA2MzAvQw==">原题链接</span></p>
<p>多组数据，每组数据给你一个字符串，你可以删除任意次，每次删除一个长度大于等于 2 的回文串，问能否删空整个字符串。</p>
<blockquote>
<p>利用递归，分为两边能否删除和两边相等中间能否删除进行判断</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">350</span>;</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//递归结束条件</span></span><br><span class="line">	<span class="keyword">if</span> (l == r) <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//只有一个，不能删除</span></span><br><span class="line">	<span class="keyword">if</span> (l &gt; r) <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//删除完成</span></span><br><span class="line">	<span class="keyword">if</span> (l + <span class="number">1</span> == r) <span class="keyword">return</span> s[l] == s[r];<span class="comment">//有两个，判断是否相等</span></span><br><span class="line">	<span class="keyword">if</span> (~f[l][r]) <span class="keyword">return</span> f[l][r];<span class="comment">//记忆化搜索，如果之前存过，直接用</span></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//判断左右两个子段是否可以删除</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = l ; i &lt; r; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		t |= <span class="built_in">dfs</span>(l, i) &amp;&amp; <span class="built_in">dfs</span>(i + <span class="number">1</span>, r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//如果边界相等，判断内部是否可删除</span></span><br><span class="line">	<span class="keyword">if</span> (s[l] == s[r])</span><br><span class="line">	&#123;</span><br><span class="line">		t |= <span class="built_in">dfs</span>(l + <span class="number">1</span>, r - <span class="number">1</span>);</span><br><span class="line">		<span class="comment">//以i为中心判断回文字符串</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = l + <span class="number">1</span>; i &lt; r; i++)</span><br><span class="line">			t |= <span class="built_in">dfs</span>(l + <span class="number">1</span>, i - <span class="number">1</span>) &amp;&amp; <span class="built_in">dfs</span>(i + <span class="number">1</span>, r - <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> f[l][r] = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span> (t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">memset</span>(f, <span class="number">-1</span>, <span class="keyword">sizeof</span> f);<span class="comment">//记忆化搜索</span></span><br><span class="line">		<span class="type">int</span> n; cin &gt;&gt; n;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; s[i];</span><br><span class="line">		cout &lt;&lt; (<span class="built_in">dfs</span>(<span class="number">1</span>, n) ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
 ]]></description>
        </item>
        
    </channel>
</rss>