<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://www.luckycyyyy.top</id>
    <title>眨眼的小星玥 • Posts by &#34;python&#34; tag</title>
    <link href="http://www.luckycyyyy.top" />
    <updated>2025-01-17T06:25:30.000Z</updated>
    <category term="Linux" />
    <category term="半导体与激光" />
    <category term="原子核物理" />
    <category term="量子物理" />
    <category term="振动与波动" />
    <category term="波动光学" />
    <category term="实验" />
    <category term="电磁感应" />
    <category term="python" />
    <category term="稳恒磁场" />
    <category term="静电场" />
    <category term="物理实验" />
    <category term="AC自动机" />
    <category term="Dp" />
    <category term="algorithm" />
    <category term="memset" />
    <category term="sstream" />
    <category term="二分" />
    <category term="前缀和" />
    <category term="差分" />
    <category term="无穷级数" />
    <category term="图论" />
    <category term="并查集" />
    <category term="线段树" />
    <category term="数论" />
    <category term="贪心" />
    <category term="概率论" />
    <category term="离散数学上" />
    <category term="级数" />
    <category term="微分中值定理" />
    <category term="公式" />
    <category term="常微分方程" />
    <category term="极限" />
    <category term="常用定理" />
    <category term="积分" />
    <category term="汇编" />
    <category term="数据结构" />
    <category term="计网" />
    <category term="数据库" />
    <category term="Codeforces" />
    <category term="DP" />
    <category term="Nowcoder" />
    <category term="CSP" />
    <entry>
        <id>http://www.luckycyyyy.top/2025/01/17/Python/python%E5%9F%BA%E7%A1%80/</id>
        <title>python基础</title>
        <link rel="alternate" href="http://www.luckycyyyy.top/2025/01/17/Python/python%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;numpy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#numpy&#34;&gt;#&lt;/a&gt; Numpy&lt;/h1&gt;
&lt;h2 id=&#34;创建数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建数组&#34;&gt;#&lt;/a&gt; 创建数组&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;通过 array () 函数将 Python 的列表或者元组转换为数组&lt;/li&gt;
&lt;li&gt;利用 &lt;code&gt;zeros(), ones(), empty()&lt;/code&gt;  函数创建&lt;/li&gt;
&lt;li&gt;通过 arange () 函数得到数组，arange () 函数的原型为 &lt;code&gt;arange(start, end,step)&lt;/code&gt; ，起始值为 start，终止值为 end，但不含终止值，步长为 step。arange () 函数可以使用 float 型数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数组运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组运算&#34;&gt;#&lt;/a&gt; 数组运算&lt;/h2&gt;
&lt;p&gt;元素对元素的乘法： &lt;code&gt;a * b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;矩阵的乘法： &lt;code&gt;a @ b&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;形状改变&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#形状改变&#34;&gt;#&lt;/a&gt; 形状改变&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ravel ()、reshape ()、T 这 3 个方法会返回已修改的矩阵，但不会更改原始矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;resize () 方法会更改原始矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;pandas&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pandas&#34;&gt;#&lt;/a&gt; pandas&lt;/h1&gt;
&lt;h2 id=&#34;series&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#series&#34;&gt;#&lt;/a&gt; Series&lt;/h2&gt;
&lt;p&gt;Series 对象是 Pandas 中的一维数据结构，能存储不同类型的数据&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a = pd.Series([&amp;quot;b&amp;quot;, 2, [1 ,2]], index = [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;])&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;dataframe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe&#34;&gt;#&lt;/a&gt; DataFrame&lt;/h2&gt;
&lt;p&gt;DataFrame 是 Pandas 中的二维数据结构，能存储不同类型的数据，有行索引和列索引，并与元素对应&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;:[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;: [&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;a:\n&amp;quot;&lt;/span&gt;, a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df = pd.DataFrame(data=a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\ndf:\n&amp;quot;&lt;/span&gt;, df)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzktqeh9hyj30d3061a9y.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;表格文件操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#表格文件操作&#34;&gt;#&lt;/a&gt; 表格文件操作&lt;/h2&gt;
&lt;p&gt;读取 csv 文件 &lt;code&gt;read_csv()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 to_csv () 方法将 DataFrame 存储为 csv 文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表格数据处理&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;head (n) 方法用于读取前面的 n 行，如果不填参数 n ，默认返回 5 行。&lt;/p&gt;
&lt;p&gt;tail (n) 方法用于读取尾部的 n 行，如果不填参数 n ，默认返回 5 行，空行各个字段的值返回 NaN。&lt;/p&gt;
&lt;p&gt;info () 方法返回表格的一些基本信息&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df = pd.read_csv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;population.csv&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(df.head())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(df.head(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(df.tail())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(df.tail(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(df.info())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.shape &lt;span class=&#34;comment&#34;&gt;#查看维度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.columns &lt;span class=&#34;comment&#34;&gt;#查看列名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.dtypes &lt;span class=&#34;comment&#34;&gt;#每一列数据的格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df[&lt;span class=&#34;string&#34;&gt;&amp;quot;country&amp;quot;&lt;/span&gt;].values &lt;span class=&#34;comment&#34;&gt;#某一列的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.iloc[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;].values &lt;span class=&#34;comment&#34;&gt;#某一行的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.loc[df[&lt;span class=&#34;string&#34;&gt;&amp;#x27;year&amp;#x27;&lt;/span&gt;] == &lt;span class=&#34;number&#34;&gt;2020&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;country&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;population&amp;#x27;&lt;/span&gt;]] &lt;span class=&#34;comment&#34;&gt;#条件筛选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;matplotlib&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#matplotlib&#34;&gt;#&lt;/a&gt; Matplotlib&lt;/h1&gt;
&lt;p&gt;折线图 plot&lt;/p&gt;
&lt;p&gt;散点图 scatter&lt;/p&gt;
&lt;p&gt;柱形图 bar&lt;/p&gt;
&lt;p&gt;多子图 subplot&lt;/p&gt;
&lt;p&gt;直方图 hist&lt;/p&gt;
&lt;p&gt;误差图 errorbar&lt;/p&gt;
&lt;p&gt;图修饰&lt;/p&gt;
&lt;h1 id=&#34;scikit-learn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scikit-learn&#34;&gt;#&lt;/a&gt; Scikit-learn&lt;/h1&gt;
&lt;p&gt;支持包括分类，回归，降维和聚类四大机器学习算法；还包括了特征提取，数据处理和模型评估三大模块&lt;/p&gt;
&lt;h2 id=&#34;数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据包&#34;&gt;#&lt;/a&gt; 数据包&lt;/h2&gt;
&lt;p&gt;数据处理： &lt;code&gt;from sklearn import datasets, preprocessing&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;数据集的划分： &lt;code&gt;from sklearn.model_selection import train_test_split&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;建模的模型： &lt;code&gt;from sklearn.linear_model import LinearRegression&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;模型的评估： &lt;code&gt;from sklearn.metrics import r2_score&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;加载数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#加载数据&#34;&gt;#&lt;/a&gt; 加载数据&lt;/h2&gt;
&lt;p&gt;Scikit-learn 支持以 NumPy 的 arrays 对象、Pandas 对象、SciPy 的稀疏 矩阵及其他可转换为数值型 arrays 的数据结构作为其输入，前提是数据必须是&lt;strong&gt;数值型&lt;/strong&gt;的&lt;/p&gt;
&lt;p&gt;sklearn.datasets 模块提供了一系列&lt;strong&gt;加载和获取&lt;/strong&gt;著名&lt;strong&gt;数据集&lt;/strong&gt;如鸢尾花、波士顿房价、Olivetti 人脸、MNIST 数据集等的工具，也包括了一些 toy data 如 S 型数据等的生成工具&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sklearn.datasets &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; load_iris&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iris = load_iris()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X = iris.data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y = iris.target&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;数据的划分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据的划分&#34;&gt;#&lt;/a&gt; 数据的划分&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;, stratify=y,test_size=&lt;span class=&#34;number&#34;&gt;0.3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# X特征，y目标值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将完整数据集的 70% 作为训练集，30% 作为测试集，并使得测试集和训练集中各类别数据的比例与原始数据集比例一致（stratify 分层策略），另外可通过设置 &lt;code&gt;shuffle=True&lt;/code&gt;  提前打乱数据&lt;/p&gt;
&lt;h2 id=&#34;数据预处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据预处理&#34;&gt;#&lt;/a&gt; 数据预处理&lt;/h2&gt;
&lt;p&gt;使用 Scikit-learn 进行&lt;strong&gt;数据标准化&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入 &lt;code&gt;from sklearn.preprocessing import StandardScaler&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Z&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;标准化：&lt;/mtext&gt;&lt;msup&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;/mrow&gt;&lt;mi&gt;σ&lt;/mi&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;Z-Score标准化：x^*=\frac{x-\mu}{\sigma}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;Z&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.738696em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;标&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;准&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;化&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.738696em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;∗&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.9463300000000001em;vertical-align:-0.686em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.2603300000000002em;&#34;&gt;&lt;span style=&#34;top:-2.314em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;σ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.677em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.686em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;构建转换器实例 &lt;code&gt;scaler = StandardScaler()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拟合及转换 &lt;code&gt;scaler.fit_transform(X_train)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;监督学习算法-回归&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#监督学习算法-回归&#34;&gt;#&lt;/a&gt; 监督学习算法 - 回归&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;LASSO&lt;/strong&gt;         &lt;code&gt;linear_model.Lasso&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ridge&lt;/strong&gt;         &lt;code&gt;linear_model.Ridge&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ElasticNet&lt;/strong&gt;         &lt;code&gt;linear_model.ElasticNet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;回归树&lt;/strong&gt;         &lt;code&gt;tree.DecisionTreeRegressor&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;导入 &lt;code&gt;from sklearn.linear_model import LinearRegression&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;构建模型实例 &lt;code&gt;lr = LinearRegression(normalize=True)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;normalize&lt;/code&gt;  表示是否要进行归一化，即是否要将数据映射到 &lt;code&gt;[0,1]&lt;/code&gt;  之间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;训练模型 &lt;code&gt;lr.fit(X_train, y_train)&lt;/code&gt; ，即进行拟合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X_train&lt;/code&gt;  表示训练集特征&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y_train&lt;/code&gt;  训练集的目标值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作出预测 &lt;code&gt;y_pred = lr.predict(X_test)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X_test&lt;/code&gt;  测试集的特征&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;监督学习算法-分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#监督学习算法-分类&#34;&gt;#&lt;/a&gt; 监督学习算法 - 分类&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;逻辑回归&lt;/strong&gt;： &lt;code&gt;linear_model.LogisticRegression&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;支持向量机&lt;/strong&gt;： &lt;code&gt;svm.SVC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;朴素贝叶斯&lt;/strong&gt;： &lt;code&gt;naive_bayes.GaussianNB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;K 近邻&lt;/strong&gt;： &lt;code&gt;neighbors.NearestNeighbors&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;导入 &lt;code&gt;from sklearn.tree import DecisionTreeClassifier&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实例 &lt;code&gt;clf = DecisionTreeClassifier(max_depth=5)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拟合 &lt;code&gt;clf.fit(X_train, y_train)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预测&lt;/p&gt;
&lt;p&gt;&lt;code&gt;y_pred = clf.predict(X_test)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;y_prob = clf.predict_proba(X_test)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用决策树分类算法解决二分类问题，y_prob 为每个样本预测为 “0” 和 “1” 类的概率&lt;/p&gt;
&lt;h2 id=&#34;监督学习算法-集成学习&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#监督学习算法-集成学习&#34;&gt;#&lt;/a&gt; 监督学习算法 - 集成学习&lt;/h2&gt;
&lt;p&gt;sklearn.ensemble 模块包含了一系列基于集成思想的分类、回归和离群值检测方法.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sklearn.ensemble &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; RandomForestClassifier&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clf = RandomForestClassifier(n_estimators=&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;clf.fit(X_train, y_train)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y_pred = clf.predict(X_test)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y_prob = clf.predict_proba(X_test)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;无监督学习&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#无监督学习&#34;&gt;#&lt;/a&gt; 无监督学习&lt;/h2&gt;
&lt;p&gt;sklearn.cluster 模块包含了一系列无监督聚类算法.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DBSCAN&lt;/strong&gt;： &lt;code&gt;cluster.DBSCAN&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;层次聚类&lt;/strong&gt;： &lt;code&gt;cluster.AgglomerativeClustering&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;谱聚类&lt;/strong&gt;： &lt;code&gt;cluster.SpectralClustering&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;导入 &lt;code&gt;from sklearn.cluster import KMeans&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;构建聚类实例 &lt;code&gt;kmeans = KMeans(n_clusters=3, random_state=0)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拟合 &lt;code&gt;kmeans.fit(X_train)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预测 &lt;code&gt;kmeans.predict(X_test)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;评价指标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#评价指标&#34;&gt;#&lt;/a&gt; 评价指标&lt;/h2&gt;
&lt;p&gt;sklearn.metrics 模块包含了一系列用于评价模型的评分函数、损失函数以及成对数据的距离度量函数.&lt;/p&gt;
&lt;h3 id=&#34;回归模型评价&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#回归模型评价&#34;&gt;#&lt;/a&gt; 回归模型评价&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzktqgizrrj30fy02sjrv.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;分类模型评价&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分类模型评价&#34;&gt;#&lt;/a&gt; 分类模型评价&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://dlink.host/wx3.sinaimg.cn/large/007CYURoly8hzktqiu3nfj30gs06aab5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;交叉验证及超参数调优&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交叉验证及超参数调优&#34;&gt;#&lt;/a&gt; &lt;strong&gt;交叉验证及超参数调优&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;超参数调优⸺网格搜索&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在参数网格上进行&lt;strong&gt;穷举&lt;/strong&gt;搜索，方法简单但是&lt;strong&gt;搜索速度慢&lt;/strong&gt;（超参数较多时），且不容易找到参数空间中的局部最优&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; GridSearchCV&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sklearn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; svm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;svc = svm.SVC()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;params = &amp;#123;‘kernel’:[‘linear’, ‘rbf’], ‘C’:[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;]&amp;#125; grid_search = GridSearchCV(svc, params, cv=&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) grid_search.fit(X_train, y_train) grid_search.best_params_&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;超参数调优⸺随机搜索&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在参数子空间中进行随机搜索，选取空间中的 100 个点进行建模（可从 scipy.stats 常见分布如正态分布 norm、均匀分布 uniform 中随机采样得到），时间耗费较少，更容易找到局部最优&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; RandomizedSearchCV&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; scipy.stats &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; randint&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;svc = svm.SVC()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;param_dist = &amp;#123;‘kernel’:[‘linear’, ‘rbf’], ‘C’:randint(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;random_search = RandomizedSearchCV(svc, param_dist, n_iter=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;random_search.fit(X_train, y_train)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;random_search.best_params_&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="python" />
        <updated>2025-01-17T06:25:30.000Z</updated>
    </entry>
    <entry>
        <id>http://www.luckycyyyy.top/2024/12/19/Python/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
        <title>python环境配置</title>
        <link rel="alternate" href="http://www.luckycyyyy.top/2024/12/19/Python/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;vscode-anaconda&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscode-anaconda&#34;&gt;#&lt;/a&gt; VSCode + anaconda&lt;/h1&gt;
&lt;p&gt;首先按照步骤下载 vscode 和 anaconda&lt;/p&gt;
&lt;p&gt;在 vscode 中按 &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; ，找到 &lt;code&gt;Python:Select Interpreter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzktpir8hgj30p90gt0w0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 python 改成 anaconda 路径下的即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzktpku5r4j30p908lwga.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;pycharmanaconda&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pycharmanaconda&#34;&gt;#&lt;/a&gt; Pycharm+anaconda&lt;/h1&gt;
&lt;p&gt;首先下载好 pycharm 和 anaconda，如果需要破解版 pycharm 可以查看这个&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZXhjZXB0aW9uLnNpdGUv&#34;&gt;网站&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在新建 pyhton 文件时将类型改成 conda&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://dlink.host/wx2.sinaimg.cn/large/007CYURoly8hzktpn1azxj30xf0qz766.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到自己的 conda.bat 的路径更改即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://dlink.host/wx4.sinaimg.cn/large/007CYURoly8hzktpoo94zj30xf0r4q56.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="python" />
        <updated>2024-12-19T02:53:21.000Z</updated>
    </entry>
</feed>
